<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Gumtree Dev Team</title>
	<link href="http://www.gumtree.com/devteam/atom.xml" rel="self"/>
	<link href="http://www.gumtree.com/devteam"/>
	<updated>2015-03-07T18:44:48.236Z</updated>
	<id>http://www.gumtree.com/devteam</id>
	<author>
		<name>Gumtree</name>
		<email>andrey@gumtree.com</email>
	</author>

	
		<entry>
			<title>QCon London 2015 - Day 3</title>
			<link href="http://www.gumtree.com/devteam//2015-03-07-qcon-london-day-3.html"/>
			<updated>2015-03-07T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2015-03-07-qcon-london-day-3.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;QCon London 2015 - Day 3 - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Mar 7th, 2015&lt;/span&gt;
				&lt;h1&gt;QCon London 2015 - Day 3&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Another year, another &lt;a target=&quot;_blank&quot; href=&quot;http://qconlondon.com/&quot;&gt;QCon&lt;/a&gt; in London. Unfortunately this time I&amp;#39;ve only been able to attend the last day (Friday), but at least it&amp;#39;s a day full of microservices-related talks. Microservices are the new kid in the block and raising &lt;a target=&quot;_blank&quot; href=&quot;http://www.google.com/trends/explore#q=microservices&quot;&gt;a lot of interest&lt;/a&gt;. In this post I&amp;#39;ve written a summary of the main point of talks. &lt;/p&gt;
&lt;!-- Read more --&gt;

&lt;p&gt;That said, don&amp;#39;t forget the videos will be &lt;a target=&quot;_blank&quot; href=&quot;http://qconlondon.com/schedule#day-5&quot;&gt;online&lt;/a&gt; soon. I specially recommend &lt;a target=&quot;_blank&quot; href=&quot;http://qconlondon.com/presentation/microservices-software-fits-your-head&quot;&gt;these&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://qconlondon.com/presentation/no-free-lunch-indeed-three-years-micro-services-soundcloud&quot;&gt;three&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://qconlondon.com/presentation/operating-microservices&quot;&gt;talks&lt;/a&gt; as I found they cover Microservices not only from development point of view, but also from business and operation perspectives which is something we engineers sometimes dismiss a bit.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s start!&lt;/p&gt;
&lt;h2 id=&quot;netflix-built-it-s-own-monitoring-system-and-why-you-shouldn-t&quot;&gt;Netflix built it&amp;#39;s own monitoring system - and why you shouldn&amp;#39;t&lt;/h2&gt;
&lt;p&gt;The day started with a keynote by Roy Rapoport, Manager of Insight Engineering at Netflix. &lt;/p&gt;
&lt;p&gt;His talk revolved around the &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Not_invented_here&quot;&gt;NIH&lt;/a&gt; issue that affects many companies. If you have a problem,you should consider some questions first:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;are you the first person to have this issue?&lt;/li&gt;
&lt;li&gt;are you the first to care about it given your constraints: relevance to business, your scale, etc&lt;/li&gt;
&lt;li&gt;are you sure about the above answers?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In some cases you may really be the first and you may need to build your own solution. But most of the time that is not true as solutions, either paid or free, exist.&lt;/p&gt;
&lt;p&gt;There are many to not build your own product: development cost, technical incompatibility, lack of understanding of the domain. This last one is very relevant, as it often happens that people dismissed a solution because &amp;#39;it does too much, it is too complex&amp;#39;. Given a stablished product this answer means that you are not thinking about the problem in the right way, or you lack insight on how will the problem grow in the future.&lt;/p&gt;
&lt;p&gt;In the end, NIH is about trust: we don&amp;#39;t trust other people&amp;#39;s code, their product, their organisation, or that they will take good care of us as a customer. Even past performance of a 3rd party in other domains may move the balance towards building our own solution.&lt;/p&gt;
&lt;p&gt;If the decision is to build your own product, that&amp;#39;s ok. It is ok to build things for the sake of building things. But usually there is another reason we don&amp;#39;t acknowledge: the glory, reputation, how good will it look in your cv. If that makes the developers happy, go ahead and build your own solution as this is a valid reason with some value. Just acknowledge that is the reason, don&amp;#39;t use bad excuses.&lt;/p&gt;
&lt;h2 id=&quot;microservices-software-that-fits-in-your-head&quot;&gt;Microservices: Software that fits in your head&lt;/h2&gt;
&lt;p&gt;Dan North, of &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;BDD&lt;/a&gt; fame, tried to define what is a Microservice.&lt;/p&gt;
&lt;p&gt;As an introduction he started by trying to define the goal of software development, which he considers to be &amp;#39;to sustainably minimise lead time to business impact&amp;#39;. And doing this sustainably is hard, but that is the ultimate goal. Thus we want effective development, which is not the same as productive development. We don&amp;#39;t care about code, but about the business impact.&lt;/p&gt;
&lt;p&gt;That is to mean that the code is not an asset, is a cost we assume to obtain the business impact. Writing code, changing code, and understanding code; they are all costs. For example, when we talk about understanding code we find 3 types of code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;code I know because it&amp;#39;s either recent or I wrote it&lt;/li&gt;
&lt;li&gt;code everyone knows because it is well tested, documented, etc&lt;/li&gt;
&lt;li&gt;code nobody knows, it happens to be there but it is not well tested nor documented, no one understand it completely. This is bad as it has a high cost.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a consequence we want to stabilise our code or, alternatively, kill it fast and replace it by less-costly code. As it happens, the patterns that facilitate this process lead to Microservices. &lt;/p&gt;
&lt;p&gt;The first &lt;em&gt;pattern&lt;/em&gt; is to have a short software &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Half-life&quot;&gt;half-life&lt;/a&gt;. An application can be long lived, but the code that composes that application may not be. Effective teams tend to have a very short code half-life, in which after a few weeks the code has changed a lot and whole sections have been replaced or moved. This keeps the costs associated to code low.&lt;/p&gt;
&lt;p&gt;To facilitate a short half-life we want to write discrete components, with clear boundaries, and clear purpose and responsibility. The boundaries happen at many levels: deployment (containers), design (DDD), etc. A clear purpose reduces uncertainty. &lt;/p&gt;
&lt;p&gt;A good strategy to achieve this reduced half-life is to let code self-select. Once a piece of code has been sticking around for a while, complete it with more tests and documentation. Choose the code in which you invest, and let the remaining code die.&lt;/p&gt;
&lt;p&gt;Another &lt;em&gt;pattern&lt;/em&gt; is to consider anything that doesn&amp;#39;t fit in your head as too big. Fitting in your head happens on several dimensions: the domain of the problem, the technology stack, etc. Also at multiple scales: a function, a module, the service, the whole app.&lt;/p&gt;
&lt;p&gt;What we need to achieve is contextual consistency: given a context we are likely to make similar decisions, so try to create this common context (idioms, default choices). Any differences that arise are useful data points, as they may happen due to miscommunication, a reasonable choice or a need to kill some code, and we need to understand why we have that difference. Just remember that familiar doesn&amp;#39;t mean simple.&lt;/p&gt;
&lt;p&gt;The aim is to obtain a sustainable replaceable component architecture, in which we have a lot of small components wrapped in a hard shell (their API), which we can rebuild easily. Given this, our functional, integration, and unit tests collapse into the same thing as we can fake the interactions (and avoid mocks in the process, mocks are evil).&lt;/p&gt;
&lt;p&gt;This maps perfectly with &amp;#39;little computers passing messages&amp;#39;, which was the original definition of &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Object-oriented_programming&quot;&gt;OOP&lt;/a&gt;. We have services/containers (little computers) sending messages across. We got it wrong the first time!&lt;/p&gt;
&lt;p&gt;A Microservice can be a type of replaceable component architecture, if you optimise for replaceability and consistency. Don&amp;#39;t optimise for size, smaller is not necessarily better, more replaceable is better. And kill code fearlessly.&lt;/p&gt;
&lt;h2 id=&quot;microservices-are-too-conceptually-big&quot;&gt;Microservices are too (conceptually) big&lt;/h2&gt;
&lt;p&gt;In this talk, Philip Wills, Senior Software Architect at The Guardian, explains how The Guardian moved from a monolith to Microservices. Currently they release around 40 different services to production each week.&lt;/p&gt;
&lt;p&gt;When they were a monolith they started to find some problems. For example, after a hackathon they realised they could not integrate some of the things they developed into their monolith as it was too expensive, too hard. There was a lot of inherent complexity, so much that at some point they had 1 person working full time as release manager to coordinate bi-weekly releases.&lt;/p&gt;
&lt;p&gt;They also had a concern with limiting the scope of failure. The monolith allowed embedding some &lt;em&gt;microapps&lt;/em&gt; into specific places, but they hit performance and coupling issues soon enough. It also meant it was not easy to remove dead services, as the high coupling made hard to understand the implications of removing code.&lt;/p&gt;
&lt;p&gt;So they moved to single responsibility apps, focussed on resilience and with limited scope (you can fit it in your head). To preserve each one as an independent product they try to move away from Json (due to its lack of strong typing) and ensuring their API is fully backwards compatible, so no coordination is required when you do a new release.&lt;/p&gt;
&lt;p&gt;An important point he raised is that they try to avoid sharing libraries across services, due to the amount of contention they cause. They consider this a last resort.&lt;/p&gt;
&lt;h2 id=&quot;protocols-of-interaction-best-current-practices&quot;&gt;Protocols of interaction: best current practices&lt;/h2&gt;
&lt;p&gt;Todd Montgomery gave a talk looking at a lower level than usual. When talking about Microservices people usually think on architecture, he want down to protocol implementation details to explain their impact when building Microservices.&lt;/p&gt;
&lt;p&gt;Protocol definition matters. Protocols not only define how we format and treat data, they also define how do we interact with something. Protocols of interaction matter much more now that we are embracing Microservices, and they are a great solution for many of the problems raised by them. Internet (in fact, any network) is an hostile environment were data can be lost, duplicated, reordered, etc. And TCP is not a safeguard from those issues. They &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&quot;&gt;will happen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Todd described many of the issues we find int he network and solutions we can apply. I feel a partial explanation would we bad as the details matter, so I&amp;#39;d recommend you to &lt;a target=&quot;_blank&quot; href=&quot;http://qconlondon.com/presentation/protocols-interaction-best-current-practices&quot;&gt;watch the video&lt;/a&gt; once it is released.&lt;/p&gt;
&lt;p&gt;The main takeaway of the talk: Protocols are a rich source of solutions to complicated problems.&lt;/p&gt;
&lt;h2 id=&quot;no-free-lunch-indeed-three-years-of-microservices-at-soundcloud&quot;&gt;No free lunch, indeed: three years of Microservices at SoundCloud&lt;/h2&gt;
&lt;p&gt;This talk by the Director of Core Engineering at Soundcloud, Phil Caldado, explained how SoundCloud adopted microservices before many of the tools we have today existed. SoundCloud currently serves 300M users each month and uploads more than 11h of music each minute. &lt;/p&gt;
&lt;p&gt;SoundCloud moved from a &lt;a target=&quot;_blank&quot; href=&quot;http://martinfowler.com/bliki/SacrificialArchitecture.html&quot;&gt;Sacrificial Architecture&lt;/a&gt; to Microservices. They predicted they would have a massive growth in Microservices and needed to prepare to be able to manage it correctly. &lt;/p&gt;
&lt;p&gt;Before you can start with Microservices, you need 3 things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rapid provisioning of servers (or containers or vm&amp;#39;s)&lt;/li&gt;
&lt;li&gt;basic monitoring&lt;/li&gt;
&lt;li&gt;rapid app deployment with a short turnaround&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For &lt;em&gt;provisioning&lt;/em&gt;, SoundCloud moved from AWS to their own datacenter in Amsterdam, although they still use S3 and some other Amazon services. The model in 2011 was Heroku and they tried to replicate the experience via tools like Doozer, Lxc and 12-factor app guidelines. The problem is that their naive approach along a lack of resource limitation meant they became their own &amp;#39;loud neighbour&amp;#39; inside their own datacenter. &lt;/p&gt;
&lt;p&gt;They had also built an architecture aiming to use Ruby and Node.js while now they work with the JVM (Clojure, Scala). Also, at that time Mesos, Aurora and Docker didn&amp;#39;t exist, they have appeared later while they were still working in their v1 release. Currently they are using &lt;a target=&quot;_blank&quot; href=&quot;https://tumblr.github.io/collins/&quot;&gt;Collins&lt;/a&gt; for provisioning, which is not a final solution but it will buy time until they can stabilise things.&lt;/p&gt;
&lt;p&gt;On &lt;em&gt;telemetry&lt;/em&gt; they found a similar issue: the tools available at 2011 weren&amp;#39;t great. The common tooling was a push model based on StatsD, Graphite and Nagios. Engineers they hired at that time wanted a pull model so they developed &lt;a target=&quot;_blank&quot; href=&quot;http://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt; which works along &lt;a target=&quot;_blank&quot; href=&quot;https://www.icinga.org/&quot;&gt;Icinga&lt;/a&gt; to provide better data. &lt;/p&gt;
&lt;p&gt;When they moved to Microservices their monitoring didn&amp;#39;t break. To facilitate finding root problems they standardised the dashboards so each service gives the same information with the same scales, avoiding common mistakes when reading graphs. They also build a template (similar to &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/twitter/twitter-server&quot;&gt;TwitterServer&lt;/a&gt;) so all services provide an admin interface that can help do things like trigger a circuit breaker or shutdown a service, to speed up crisis resolution. They also send 0.1% of their traffic to &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/twitter/zipkin&quot;&gt;Zipkin&lt;/a&gt; to trace requests. That amount of traffic is enough to detect any issues.&lt;/p&gt;
&lt;p&gt;Most importantly, management lines are all in the notification system so a pager alert will wake up everybody, making them more aware of the issues.&lt;/p&gt;
&lt;p&gt;Regarding their &lt;em&gt;pipeline&lt;/em&gt; at the beginning they had 2 different pipelines: one for build, one for release. Customisation and other factors ended up creating 7 different deployment scripts. Currently they use Docker to run tests when in development. Jenkins takes care of building and packaging the application as a deb package, and they use that for deployment. They have not adopted Docker yet as they don&amp;#39;t want a strong coupling.&lt;/p&gt;
&lt;h2 id=&quot;building-a-modern-microservices-architecture-at-gilt-the-essentials&quot;&gt;Building a modern Microservices architecture at Gilt: the essentials&lt;/h2&gt;
&lt;p&gt;Yoni Goldberg, Lead Software Engineer at Gilt, explained the Gilt moved from a Ruby monolith to a Microservices approach. The reason was that Gilt operates a model of flash sales with massive spikes, and adding certain vendor caused cascading errors across the site. To fix the issues they moved to JVM, started what he calls a macro/micro services era and used dedicated data stores. &lt;/p&gt;
&lt;p&gt;During the process they realised the new services where semi-monoliths, not fixing all of the issues, so they kept working until they reduced the scope of the services (both for back-end and front-end, they have multiple webapps for UI), which in turn facilitated deployment and rollbacks.&lt;/p&gt;
&lt;p&gt;Currently they have 300 services in production, and their data show a very interesting pattern: once they had in place all the right tools such a team could go from creation to deployment of a new service (a basic placeholder) in around 10 minutes, the productivity and the number of services increased a lot.&lt;/p&gt;
&lt;p&gt;The process wasn&amp;#39;t seamless, they had to solve several challenges in areas like monitoring, ownership, service discoverability, deplyment and testing, etc. &lt;/p&gt;
&lt;p&gt;Some of the challenges have been solved by using custom tooling, with many libraries they created available as &lt;a target=&quot;_blank&quot; href=&quot;http://code.gilt.com/&quot;&gt;open source&lt;/a&gt;. For example, they created some enhanced Sbt which included plugins they commonly use plus some custom commands to deploy to production, thus replacing an old Capistrano-based system. Another of their tools, Ion Cannon, facilitates testing and deployment to production using a dark canary pattern. An another is &lt;a target=&quot;_blank&quot; href=&quot;https://www.cavellc.io/&quot;&gt;Cave LLC&lt;/a&gt;, a metrics system.&lt;/p&gt;
&lt;p&gt;The situation at this point still wasn&amp;#39;t optimal as they hit data centre limitations. This encouraged them to move to an immutable infrastructure based on Docker and Elastic BeanStalk. They also gave each team their own AWS account and budget. As a result, teams are accountable for the resources they use and optimise as required. The (possible) downside is the need to know more about AWS and slightly longer deploys due to machine start up time.&lt;/p&gt;
&lt;p&gt;Something that has facilitated the adoption of Microservices has been a well defined API. Yoni argues that a well defined API solves issues like discoverability, documentation and internal adoption. Tools like Swagger facilitate this.&lt;/p&gt;
&lt;p&gt;An issue associated to having so many Microservices that is not mentioned often is that the network ends up acting as a bottleneck, due to the amount of calls generated. Their solution is to create mid-tier Microservices, which are a &lt;em&gt;coarse API&lt;/em&gt; that hides multiple small services from the request. Your application just calls an endpoint and that, in turn, does several calls. This reduces the load, even more if you use caching. &lt;/p&gt;
&lt;p&gt;Another issue is that developer&amp;#39;s hardware can&amp;#39;t cope with so many services running locally. The solution they have is not ideal, but they use an AWS pool as integration instances and developers can connect to them. Also related to the development of services are the concerns about knowledge sharing. Gilt&amp;#39;s approach is to code review everything, this way the knowledge is spread across the team and not hoarded by individuals.&lt;/p&gt;
&lt;p&gt;Gilt also uses micro-databases, that is, every Microservice has its own database, they are not shared across services. This means the service owns everything: API, data, behaviour. No conflicts between services due to shared databases.&lt;/p&gt;
&lt;p&gt;Finally, they don&amp;#39;t advise teams of less than 30 people to go into Microservices due to the manpower needed.&lt;/p&gt;
&lt;h2 id=&quot;operating-microservices&quot;&gt;Operating Microservices&lt;/h2&gt;
&lt;p&gt;The last talk of the day. Michael Brunton-Spall, Technical Architect at the Government Digital Service, delivered a talk full of energy about Microservices from the point of view of Operations.&lt;/p&gt;
&lt;p&gt;He started by letting us know his talk applied to Microservices understood as &amp;#39;vertically aligned stacks that communicate via simple and standard interfaces&amp;#39;. In this context ownership of data matters, you don&amp;#39;t want to share data. Teams own the code, people outside the team don&amp;#39;t modify that code. Teams also own the runtime, they choose what they want to use, even Erlang in a supposedly JVM shop. If your Microservices don&amp;#39;t fit the above definitions, you are doing it wrong and this talk won&amp;#39;t help you at all.&lt;/p&gt;
&lt;p&gt;Microservices are &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Conway%27s_law&quot;&gt;Conway&amp;#39;s Law&lt;/a&gt;. Management and developers love them because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;small owned services that can be updated more often&lt;/li&gt;
&lt;li&gt;teams can move fast and break stuff&lt;/li&gt;
&lt;li&gt;teams can own the whole stack&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the other hand infrastructure teams hate them because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;small owned services that can be updated more often. But changing things breaks things.&lt;/li&gt;
&lt;li&gt;teams can move fast and break stuff. Ops want to be slow and stable, avoid breaking things&lt;/li&gt;
&lt;li&gt;teams can own the whole stack. Ops are not required, thus they lose control over security&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@JeffSussna said that Microservices are a new organisational model as much as a new architecture model, and we need to understand this before using them. Microservices can help you have a radical focus on delivery, and they are not even a new architecture as Internet itself uses that pattern (small boxes talking to each other each one doing one thing). You need that speed as nowadays is not the big fish that eats the small, is the fast that eats the slow. But operations team are perceived like a bottleneck and, in the end, perception is reality. &lt;/p&gt;
&lt;p&gt;So you need Microservices, and a way to manage the change that is happening in the role of engineering and operations.&lt;/p&gt;
&lt;p&gt;The best starting point it to just run 1 Microservice, by itself, successfully. Microservices in the small. You need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make sure you are able to do it&lt;/li&gt;
&lt;li&gt;automate your infrastructure (use of containers is not necessary)&lt;/li&gt;
&lt;li&gt;create a base image for your service&lt;/li&gt;
&lt;li&gt;deploy it fast, with a time-to-server of a few minutes, not hours&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During this process you will learn some stuff. For example, some bugs that were critical before (out of ram) become irrelevant when your service is automatically restarted in less than one minute if the server crashes. Yes, you may want to fix it, but it won&amp;#39;t wake up anyone at 2am.&lt;/p&gt;
&lt;p&gt;You need monitoring tools that are easy to hook into. If it moves, you want to graph it. If it doesn&amp;#39;t too, just in case it starts moving. You also need automated log aggregation (logstash, kibana). And cloud-friendly databases, otherwise when the database server goes down (and in the cloud it happens, often) your data may be lost.&lt;/p&gt;
&lt;p&gt;You must automate your deployment. It doesn&amp;#39;t need to be complex, it can be as simple as executing a self-contained Jetty, but keep a log of the deploys done including the commits that were released. And you must give the keys to the development team, as well as root. And give them pagers too: if they break it, they fix it. But to do that they need full access.&lt;/p&gt;
&lt;p&gt;All the above are solved problems, the tools exist. Follow the &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Pareto_principle&quot;&gt;Pareto principle&lt;/a&gt;: use the existing tools and focus your effort in business value.&lt;/p&gt;
&lt;p&gt;At this point point you have 1 Microservice running. Now repeated to get 10, 100, ... Microservices in the large.&lt;/p&gt;
&lt;p&gt;When you have many services running, they are going to fail in more spectacular ways than their equivalent monoliths. They are not complicated (like a car), but complex (like a traffic system) in which the root cause may be distant in time and space.&lt;/p&gt;
&lt;p&gt;Due to that, diagnosis tools are a must. On each single service. You need both shallow check that ensure it is working, and deep checks that ensure its dependencies are working. Also for the 90, 95 and 99 percentiles. This will help you find the source of a problem and detect issues as they start to creep in.&lt;/p&gt;
&lt;p&gt;Any distributed system needs to embrace failure. You have network partitions, latency spikes, etc. Timeouts can be problematic, use with care. Standardised administration interfaces and alerting tools may help mitigate the consequences. &lt;/p&gt;
&lt;p&gt;Also, what happens when developers get bored of the service? Developers are always building a future legacy service. How do you manage the handover? Who pays for the support of that service? In the end, Conway&amp;#39;s Law is not about engineering teams, but about the full organisation. It affects the budget, SLAs, recruitment needs and other factors. &lt;/p&gt;
&lt;p&gt;So, as a result, Operation teams should act as consultants. Anything developers need which is new has an additional front cost to be paid before the green light: automation and documentation. This way the pioneer pays the cost and the rest of the team benefits from it. While Ops keeps some control.&lt;/p&gt;
&lt;h2 id=&quot;the-end&quot;&gt;The End&lt;/h2&gt;
&lt;p&gt;And that&amp;#39;s the summary of the talks I attended. I&amp;#39;ve done a very high level summary of what I understood were key ideas, any omissions or mistakes are my own. In any case, I recommend you to watch the videos once they are released, they were worth it.&lt;/p&gt;
&lt;p&gt;If you enjoyed the post, please comment or send us feedback at &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/GumtreeDevTeam&quot;&gt;@gumtreeDevTeam&lt;/a&gt;.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html';
		window.disqus_identifier = '2015-03-07-qcon-london-day-3';
		window.disqus_title = 'QCon London 2015 - Day 3';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Integrating Hystrix</title>
			<link href="http://www.gumtree.com/devteam//2015-01-06-integrating-hystrix.html"/>
			<updated>2015-01-06T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2015-01-06-integrating-hystrix.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Integrating Hystrix - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Jan 6th, 2015&lt;/span&gt;
				&lt;h1&gt;Integrating Hystrix&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Last September Gumtree went &lt;a target=&quot;_blank&quot; href=&quot;http://blog.gumtree.com/your-new-look-gumtree/&quot;&gt;responsive&lt;/a&gt;. This has been a long project with a heavy Front-end component, as you could expect. But plenty of changes were done behind the scenes. One of them, as you can guess by the title, was integrating &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/Netflix/Hystrix&quot;&gt;Hystrix&lt;/a&gt;. Let&amp;#39;s see why and how.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-we-had&quot;&gt;What we had&lt;/h2&gt;
&lt;p&gt;Before I go into details let me explain our starting point. The service now running the responsive website is one of many we have. Originally this service&amp;#39;s task was to serve our mobile traffic and it consisted of a minimalistic &lt;a target=&quot;_blank&quot; href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/mvc.html&quot;&gt;Spring MVC&lt;/a&gt; application. Given that we wanted to move to responsive as soon as possible, using this existing codebase was ideal as it would save us time on component integration, monitoring and other tasks. So we built on top of it, enhancing as needed. &lt;/p&gt;
&lt;p&gt;While developing the project we looked at improving api call management. What may look simple, like a &lt;a target=&quot;_blank&quot; href=&quot;http://www.gumtree.com/search?q=&amp;amp;search_category=cars-vans-motorbikes&amp;amp;search_location=TW91EH&amp;amp;tl=&amp;amp;distance=0.5&quot;&gt;search for cars&lt;/a&gt;, becomes complex in the backend through several calls to other services. These extra calls mean that, as the &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Fallacies_of_distributed_computing&quot;&gt;fallacies of distributed computing&lt;/a&gt; explain, errors are inevitable. But, if possible, we don&amp;#39;t want to serve &amp;#39;500 error&amp;#39; pages to our customers as that would make for a horrible user experience. So we needed a way to manage these errors in an elegant way. Enter &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/Netflix/Hystrix&quot;&gt;Hystrix&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;why-hystrix&quot;&gt;Why Hystrix&lt;/h2&gt;
&lt;p&gt;Netflix has become the poster-boy of microservices and resilience, mostly through their &lt;a target=&quot;_blank&quot; href=&quot;http://netflix.github.io/#repo&quot;&gt;open source contributions&lt;/a&gt; which give developers access to the same tools they use in production. Hystrix can be defined as a compartmentation tool that isolates a service from errors coming form external sources. It implements patterns like &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Circuit_breaker_design_pattern&quot;&gt;circuit breaker&lt;/a&gt;, fallback mechanisms, and parallel execution. By grouping all this in one library, and providing exhaustive metrics on what&amp;#39;s going on under the hood, you get a fantastic template you can build upon to manage calls to external services.&lt;/p&gt;
&lt;p&gt;You could argue that by using framework X or language Y we would get all this for free. And you may be right. But sometimes it doesn&amp;#39;t make sense to rewrite something for the sake of rewriting if you have other valid options. We feel the big benefit of Hystrix is not only what it gives you (which is a lot) but the fact that, as a Java library with very few dependencies, you can integrate it with most of your JVM legacy applications. &lt;/p&gt;
&lt;p&gt;The immediate benefit of this integration is that your component becomes much more resilient, in exchange of a minimal amount of coding. Not only that, through the use of &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/ReactiveX/RxJava/wiki/Observable&quot;&gt;Observable&lt;/a&gt; you can reduce blocking class in your system, thus increasing total throughput. These are not just empty words: we have implemented it, and we saw big benefits from that. That is why we want to share how we did it.&lt;/p&gt;
&lt;h2 id=&quot;how-does-hystrix-work&quot;&gt;How does Hystrix work&lt;/h2&gt;
&lt;p&gt;I won&amp;#39;t replicate the great &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/Netflix/Hystrix/wiki/How-it-Works&quot;&gt;documentation&lt;/a&gt; Hystrix provides on its internals. Suffice to say that, from the point of view of a developer, you only care about creating &lt;em&gt;Commands&lt;/em&gt;. A Hystrix Command is a class that extends &lt;em&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://netflix.github.io/Hystrix/javadoc/index.html?com/netflix/hystrix/HystrixCommand.html&quot;&gt;HystrixCommand&lt;/a&gt;&lt;/em&gt; and implements the logic of your call plus some (optional) utility methods. Let&amp;#39;s see an example:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SearchAdsCommand&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HystrixCommand&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;SearchResult&lt;/span&gt;&amp;gt; &lt;/span&gt;{

    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; SearchAdsCommand(String name, ...) {
        &lt;span class=&quot;comment&quot;&gt;// Constructor code&lt;/span&gt;
    }

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; SearchResult run() &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception {
        SearchBuilder builder = searchRequest.build(request);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; builder.search();
    }

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; SearchResult getFallback() {
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SearchResult();
    }

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; String getCacheKey() {
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; String.valueOf(searchRequest.hashCode());
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code above is based on one of our commands, used to do a search in the system. I&amp;#39;ve removed boilerplate and irrelevant code. &lt;/p&gt;
&lt;p&gt;As you can see, the class extends &lt;em&gt;HystrixCommand&lt;T&gt;&lt;/em&gt; and sets &lt;em&gt;T&lt;/em&gt; to be &lt;em&gt;SearchResult&lt;/em&gt;, which will be the result expected when running this Command. &lt;/p&gt;
&lt;p&gt;The class has 3 methods, of which only &lt;em&gt;run&lt;/em&gt; is mandatory. This contains the call to a 3rd party service and is the method Hystrix manages when checking for circuit breaker status and all the other functionalities it provides.&lt;/p&gt;
&lt;p&gt;The method &lt;em&gt;getFallback&lt;/em&gt; is an optional method which, if provided, gives a default value to return if there is an issue while executing the command, be it an exception, timeout or that the circuit breaker is open. If you don&amp;#39;t provide a fallback method then the corresponding exception will propagate by the stack.&lt;/p&gt;
&lt;p&gt;The last method, &lt;em&gt;getCacheKey&lt;/em&gt;, is used to provide a key to cache the result of the command during the request, so repeated calls don&amp;#39;t go across the network again. It is important to remember this cache is only &lt;strong&gt;per request&lt;/strong&gt;, that is, once the user receives the response the value will not be cached anymore.&lt;/p&gt;
&lt;p&gt;Once you have defined your command, using it is a simple as creating an instance of the class and calling &lt;em&gt;execute&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;r&quot;&gt;SearchAdsCommand command = new SearchAdsCommand(&lt;span class=&quot;keyword&quot;&gt;...&lt;/span&gt;);
SearchResult result = command.execute();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hystrix provides 3 methods to run a command:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;execute&lt;/em&gt; runs the command synchronously, blocking until we receive the response&lt;/li&gt;
&lt;li&gt;&lt;em&gt;queue&lt;/em&gt; returns a Future&lt;T&gt; with the result. It can be sued for asynchronous calls to the command &lt;/li&gt;
&lt;li&gt;&lt;em&gt;observe&lt;/em&gt; returns an Observable&lt;T&gt;, doing asynchronous and reactive execution. &lt;em&gt;Observables&lt;/em&gt; are a complex topic outside the scope of this post, but suffice to say they allow you to work with the response (filter, merge, map) in an asynchronous way, something that Futures lack (in Java). &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple, isn&amp;#39;t it? Your command contains all the logic to interact with a 3rd party service, and provides some handy helpers to manage fallbacks and asynchronous calls.&lt;/p&gt;
&lt;h2 id=&quot;benefits-of-hystrix&quot;&gt;Benefits of Hystrix&lt;/h2&gt;
&lt;p&gt;We have seen implementing a Hystrix command is simple enough, but the question remains: is it worth it?&lt;/p&gt;
&lt;p&gt;Now that we have seen an example of a command we can evaluate some of the benefits mentioned above. For example, I mentioned in the introduction that Hystrix implements the &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Circuit_breaker_design_pattern&quot;&gt;circuit breaker&lt;/a&gt;. This pattern skips an expensive network call if we know the service will most likely fail. Implementing it correctly is not a simple feat, more so when you consider concurrency. By using a Hystrix Command, you focus on the logic (inside the &lt;em&gt;run&lt;/em&gt; method) and forget about the complexities involved in circuit breaker. Hystrix will automatically wrap the &lt;em&gt;run&lt;/em&gt; method and do all necessary checks for you.&lt;/p&gt;
&lt;p&gt;Another relevant question when calling an external service is what to do if there&amp;#39;s an exception. In many cases you want to return a default value, which means checking the exceptions raised during execution and managing the error. By suing the command all this is simplified into the &lt;em&gt;fallback&lt;/em&gt; method, which you can use to define the default value to return. Again, focussing in the logic not in the boilerplate of error management.&lt;/p&gt;
&lt;p&gt;But the most powerful tool Hystrix gives you is the execution methods. The same command you defined in one class can be called both synchronously or asynchronously, depending on your needs in a given context. This flexibility may not seem necessary at first, but promotes code reuse and you will find yourself using it more often than you would expect now.&lt;/p&gt;
&lt;h2 id=&quot;adding-hystrix-to-your-existing-application&quot;&gt;Adding Hystrix to your existing application&lt;/h2&gt;
&lt;p&gt;As I mentioned above, we integrated Hystrix into an existing codebase. More often than not integrating big libraries into existing codebases can be very painful. You may be glad to know that integrating Hystrix was quite painless, with most of the issues relating to when to use synchronous vs asynchronous calls due to the existing flow of the code.&lt;/p&gt;
&lt;p&gt;Given each codebase is a world in itself, I can&amp;#39;t give you a generic template on how to integrate Hystrix, but there are some things you should consider hen doing so:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;limit what the &lt;em&gt;run&lt;/em&gt; method does. Ideally it should only contain a call to an external service, nothing else. Any post-processing of that data should be done outside the command, to free the instance in the pool.&lt;/li&gt;
&lt;li&gt;do a call per command, don&amp;#39;t chain calls to external services inside the same command. It may seem inefficient, but you will get more granular metrics and better understanding on what&amp;#39;s going on under the hood.&lt;/li&gt;
&lt;li&gt;provide a fallback every time you can. It simplifies your code a lot (I get something, even if it is a 0 value) and reduces error management on your logic.&lt;/li&gt;
&lt;li&gt;don&amp;#39;t abuse Observable. Although very powerful it can be hard to grasp, better start with synchronous calls and tweak as required.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We followed these guidelines and we are very happy with the results, having more than 20 commands implemented in this particular service alone. &lt;/p&gt;
&lt;h2 id=&quot;hystrix-and-memory&quot;&gt;Hystrix and Memory&lt;/h2&gt;
&lt;p&gt;Sometimes even seasoned developers forget something about the JVM: threads use their own stacks in memory, which are allocated outside the Heap space reserved by the JVM. Usually this is not a big deal, as the default size of the stack goes from 256Kb to 1Mb, depending on your system. &lt;/p&gt;
&lt;p&gt;Hystrix can use a lot of threads for each command. And you can use many commands in an application, which compounds things quickly. If you have 20 Hystrix commands with an average of 10 threads each, we may be talking of another 200Mb of RAM usage, besides Heap. &lt;/p&gt;
&lt;p&gt;Yes, 200Mb doesn&amp;#39;t seem like a lot until you start looking at it from a SiteOps point of view: if you are using virtual machines with tailored amounts of RAM and no swap space (to reduce the impact I/O has in these virtual environments) 200Mb become important, as it may cause issues in production. So speak to your SiteOps/DevOps team and let them know you are going to integrate Hystrix, as well as the calculated increase on RAM consumption. And, obviously, test it properly before moving to production.&lt;/p&gt;
&lt;h2 id=&quot;success&quot;&gt;Success&lt;/h2&gt;
&lt;p&gt;Yes, it was that simple. Granted, we have only scratched the surface of all Hystrix offers as I have not mentioned things like metrics, automatically provided to the delight of SiteOps, but at this stage I hope the benefits of using Hystrix are crystal clear. If you have legacy JVM code that does external calls, it is in your best interest to start using Hystrix. Once you try you will understand :)&lt;/p&gt;
&lt;p&gt;If you enjoyed the ideas or the post, please comment or send us feedback at &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/GumtreeDevTeam&quot;&gt;@gumtreeDevTeam&lt;/a&gt;.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html';
		window.disqus_identifier = '2015-01-06-integrating-hystrix';
		window.disqus_title = 'Integrating Hystrix';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Pull Requests (what could be a good process)</title>
			<link href="http://www.gumtree.com/devteam//2015-01-05-pull-requests-good-process.html"/>
			<updated>2015-01-05T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2015-01-05-pull-requests-good-process.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Pull Requests (what could be a good process) - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Jan 5th, 2015&lt;/span&gt;
				&lt;h1&gt;Pull Requests (what could be a good process)&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Esther Saimpou&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;blockquote&gt;
&lt;p&gt;I hear people saying it and I say it my self very often lately...
Nothing should be released without a Pull Request!
The thing is that even I don’t raise them anymore
And yes, I say that with shame...&lt;/p&gt;
&lt;p&gt;-- myself :)
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I found myself constantly saying we should enforce them, but the truth is no one can force us to do anything. Thinking about it though made me realise that it is our responsibility to make sure we have a Code Quality Assurance, as we have a Product Quality Assurance. We wouldn’t add features or bug fixes in stable and release it without going through QA. So how and why do we accept going through without Code QA? (yes I am referring to a Code Review)  :)&lt;/p&gt;
&lt;p&gt;Apart from code quality though there’s another great benefit in Pull Requests. They are a great way of sharing knowledge in the team of what’s going on in our code base. I have found myself going through a merged and closed PR, just because I wanted to know what is the new feature and how is it achieved. Saying that, expanding our knowledge is another benefit from PRs. &lt;/p&gt;
&lt;p&gt;I do expect some booing here but I’ll say it anyway. These are some of the benefits you can achieve with pair programming and perhaps with more freedom. I am not suggesting it’s equivalent or should replace pair programming! Just stating some of high level reasons that came to mind of why we want to do and we like Code Reviews.&lt;/p&gt;
&lt;p&gt;Being a member till recently of a very big team of 6 FE developers and we had to have a good system. (Here I have to say we were very lucky our FE lead introduced them and had implemented a mergeable through Github Pull Request that made the process very easy and automated)  We were all doing so much work in the exact same files and we were changing the codebase so fast and so often, that I don’t think we could have achieved so much without Pull Requests and Code Reviews. We prevented wrong methods to be used and we were able to maintain our code neat and and with minimal duplication.&lt;/p&gt;
&lt;p&gt;The next question now is what are the reasons that even though we want to we do not actually do them? (At least not always).&lt;/p&gt;
&lt;p&gt;Well my experience in the team was that the process yes it is great BUT it has it’s own challenges. So when the team was later divided in to smaller teams we just stopped doing them with a feeling that now we can sneak code in production without any criticism.&lt;/p&gt;
&lt;p&gt;Some of the challenges to list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pull Requests were raised and they were not reviewed and merged for days even weeks in some cases.&lt;/li&gt;
&lt;li&gt;The above resulting in the developer responsible for the branch to have to maintain the branch and going through the pain of conflicts again again.&lt;/li&gt;
&lt;li&gt;To lose his/her code at the end cause the main codebase has changed so much that the conflicts wire not making any sense anymore.&lt;/li&gt;
&lt;li&gt;Huge Pull Requests with hundreds lines of code to review that no one could actually be bothered to review.&lt;/li&gt;
&lt;li&gt;Code Reviews that were leading to an unresolvable argument of the approach resulting again in non merged branches that remained there for ages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are only a few reasons just on the top of my head that we do not like Pull Requests and Code Reviews. Now these reason’s can be solved perhaps by setting some rules. I will make a few suggestions and I would love to hear more, or better solutions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In our current way of workflow small branches should be opened for each ticket raised against an Epic branch that is to be released.&lt;/li&gt;
&lt;li&gt;The developer’s raising the PR should have the responsibility to create a small request easy for colleagues to check.&lt;/li&gt;
&lt;li&gt;Small single tickets in small single branches. That’s why we have small tickets to divide the workflow properly! Even tiny changes can go in as a separate branch (meaning a separate PR). Perhaps there could be an exclusion where in one PR there are a couple 4 max, tiny, like single line changes, each very clearly stated in the raised PR. On the other hand perhaps even that should be avoided, if it&amp;#39;s proven people don’t know where to draw a line.&lt;/li&gt;
&lt;li&gt;The developer’s raising the PR should have the responsibility to find a person to review his/her code. If no one prompts to do it, the developer could nominate someone and ask them to!&lt;/li&gt;
&lt;li&gt;Then the person nominated would have the responsibility to do the Code Review within the day or the latest early the next day if the PR is raised late in the afternoon.&lt;/li&gt;
&lt;li&gt;If the person nominated is extremely busy should still have the responsibility to find someone else to the Code Review instead.&lt;/li&gt;
&lt;li&gt;In the worst case if it can’t be done by no one soon, communicate, coordinate and come to an agreement for when it can be done. In any case do not leave it for more than a day or two, it’s supposed to be a small Pull Request in the first place.&lt;/li&gt;
&lt;li&gt;If the Pull request is too complex and has more that one features/bugfixes implemented, the person nominated could deny to do it, and the developer should cherry pick and divide it’s branch into two or more, as needed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Perhaps at some point we should try finding a way to merge from a raised PR with a fast forward so that we can cherry pick easily, remove and leave for later each small ticket. Otherwise do a manual merge and achieve the same.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html';
		window.disqus_identifier = '2015-01-05-pull-requests-good-process';
		window.disqus_title = 'Pull Requests (what could be a good process)';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Creating a treeview using react.js</title>
			<link href="http://www.gumtree.com/devteam//2014-12-12-creating-a-treeview-using-reactjs.html"/>
			<updated>2014-12-12T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-12-12-creating-a-treeview-using-reactjs.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Creating a treeview using react.js - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Dec 12th, 2014&lt;/span&gt;
				&lt;h1&gt;Creating a treeview using react.js&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Alex Riolo&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;At Gumtree we decided to use facebook&amp;#39;s &lt;a target=&quot;_blank&quot; href=&quot;http://facebook.github.io/react/&quot;&gt;react.js&lt;/a&gt; framework for some of our administrative tasks that we performed on a regular basis. For one of the task it was creating a system for modifying the categories that users post classifieds on. Being a fairly new framework creating this tree view proved a bit of a challenge, initially drawing out the whole tree on load and then collapsing everything proved to be a really slow task (even using react.js), possibly due to the size of Gumtree&amp;#39;s category tree. We also knew that it would be a recursive call as a node may have children and they may have children etc.&lt;/p&gt;
&lt;!-- Read more --&gt;

&lt;p&gt;Here we will assume that our tree structure looks something like this (simplified for our example):&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;{
  &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,
  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;All Categories&quot;&lt;/span&gt;,
  &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
    {
      &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;For Sale&quot;&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Audio &amp;amp; Stereo&quot;&lt;/span&gt;
        },
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Baby &amp;amp; Kids Stuff&quot;&lt;/span&gt;
        },
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Music, Films, Books &amp;amp; Games&quot;&lt;/span&gt;
        }
      ]
    },
    {
      &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Motors&quot;&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Car Parts &amp;amp; Accessories&quot;&lt;/span&gt;
        },
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Cars&quot;&lt;/span&gt;
        },
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10016&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Motorbike Parts &amp;amp; Accessories&quot;&lt;/span&gt;
        }
      ]
    },
    {
      &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Jobs&quot;&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Accountancy&quot;&lt;/span&gt;
        },
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Financial Services &amp;amp; Insurance&quot;&lt;/span&gt;
                },
        {
          &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,
          &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Bar Staff &amp;amp; Management&quot;&lt;/span&gt;
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;loading-the-data&quot;&gt;Loading the data&lt;/h2&gt;
&lt;p&gt;First thing we want to do is load the tree (or at least have the tree stored somewhere in JSON or as an object).&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; CategoryTree = React.createClass({
    getInitialState: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {data: {}};
    },
    componentWillMount: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        $.ajax({
            url: &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.url,
            dataType: &lt;span class=&quot;string&quot;&gt;'json'&lt;/span&gt;,
            success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(data)&lt;/span&gt; {&lt;/span&gt;
                &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState({data: data});
            }.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)
        });
    },
    render: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
            &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;panel panel-default&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;panel-body&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;category-tree&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--Tree nodes will go here--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
        );
    }

});
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We load the category tree using &lt;em&gt;componentWillMount&lt;/em&gt; and its called before the render method is. We inform react that the component needs to be redrawn by calling the &lt;em&gt;setState&lt;/em&gt; method.&lt;/p&gt;
&lt;h2 id=&quot;create-the-tree-nodes&quot;&gt;Create the Tree Nodes&lt;/h2&gt;
&lt;p&gt;We want to create the tree nodes as needed and we want to start with a collapsed tree to start with.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;undefined&quot;&gt;var TreeNode = React.createClass({
    render: function () {
        if (!this.state.children) this.state.children = [];
        var classes = React.addons.classSet({
            'has-children': (this.props.data.children ? true : false),
            'open': (this.state.children.length ? true : false),
            'closed': (this.state.children ? false : true),
            'selected': (this.state.selected ? true : false)
        });
        return (
            &amp;lt;li ref=&quot;node&quot; className={classes}&amp;gt;
                &amp;lt;a data-id={this.props.data.id}&amp;gt;
                    {this.props.data.name}
                &amp;lt;/a&amp;gt;
                &amp;lt;ul&amp;gt;
                    {this.state.children.map(function(child) {
                        return &amp;lt;TreeNode key={child.id} data={child}/&amp;gt;;
                    }.bind(this))}
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
        );
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here the render method needs to draw the state of the node. For each of the children in state.children a new treeNode is returned drawn with its data being the child data of the parent. This will continue till all children of children are done. Note that the &lt;em&gt;key=someId&lt;/em&gt; is important for react to identify that object as there will be more than one of the same object.&lt;/p&gt;
&lt;p&gt;The classes that the node contains is where most of the work is done. The nodes children will be placed in &lt;em&gt;this.props.data.children&lt;/em&gt;. If the node contains this then it means that there should be a small ‘+’ sign that appears next to it (done in the form of the class has-children). When the node is open (its displaying its children) then it will contain children in its state.children var (we will look in depth at how this works later). if its closed then it won&amp;#39;t have any children set. A node is selected when it has the state of being selected.&lt;/p&gt;
&lt;h2 id=&quot;tree-node-expansion&quot;&gt;Tree Node expansion&lt;/h2&gt;
&lt;p&gt;We will need an onclick event placed on each of the tree nodes this will toggle the show/hide of each of the child nodes (if it contains some). &lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;undefined&quot;&gt;var TreeNode = React.createClass({
    onChildDisplayToggle: function (ev) {
        if (this.props.data.children) {
            if (this.state.children &amp;amp;&amp;amp; this.state.children.length) {
                this.setState({children: null});
            } else {
                this.setState({children: this.props.data.children});
            }
        }
        ev.preventDefault();
        ev.stopPropagation();
    },
    render: function () {
        if (!this.state.children) this.state.children = [];
        var classes = React.addons.classSet({
            'has-children': (this.props.data.children ? true : false),
            'open': (this.state.children.length ? true : false),
            'closed': (this.state.children ? false : true),
            'selected': (this.state.selected ? true : false)
        });
        return (
            &amp;lt;li ref=&quot;node&quot; className={classes} 
                    onClick={this.onChildDisplayToggle}&amp;gt;
                &amp;lt;a data-id={this.props.data.id}&amp;gt;
                    {this.props.data.name}
                &amp;lt;/a&amp;gt;
                &amp;lt;ul&amp;gt;
                    {this.state.children.map(function(child) {
                        return &amp;lt;TreeNode key={child.id} data={child}/&amp;gt;;
                    }.bind(this))}
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
        );
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the &amp;lt;li&amp;gt; is clicked the onChildDisplay method is called. Here we check if the children are not already set. If they are they are set to null and all child nodes are removed when redrawn otherwise they are added. An important thing to note is the stopPropagation call is necessary otherwise all parent nodes will toggle when clicked.&lt;/p&gt;
&lt;h2 id=&quot;handling-node-selection&quot;&gt;Handling node selection&lt;/h2&gt;
&lt;p&gt;Finally and most importantly we want to detect when a node has been selected. We need to show that it has been selected and we also are going to want to perform some action.&lt;/p&gt;
&lt;p&gt;We want to pass each node a function that stores the selected node and sets its selected state. Each node will have a pointer to this method and will pass it itself when called.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;undefined&quot;&gt;var TreeNode = React.createClass({
    onCategorySelect: function (ev) {
        if (this.props.onCategorySelect) {
            this.props.onCategorySelect(this);
        }
        ev.preventDefault();
        ev.stopPropagation();
    },
    onChildDisplayToggle: function (ev) {
        if (this.props.data.children) {
            if (this.state.children &amp;amp;&amp;amp; this.state.children.length) {
                this.setState({children: null});
            } else {
                this.setState({children: this.props.data.children});
            }
        }
        ev.preventDefault();
        ev.stopPropagation();
    },
    render: function () {
        if (!this.state.children) this.state.children = [];
        var classes = React.addons.classSet({
            'has-children': (this.props.data.children ? true : false),
            'open': (this.state.children.length ? true : false),
            'closed': (this.state.children ? false : true),
            'selected': (this.state.selected ? true : false)
        });
        return (
            &amp;lt;li ref=&quot;node&quot; className={classes} 
                    onClick={this.onChildDisplayToggle}&amp;gt;
                &amp;lt;a onClick={this.onCategorySelect} 
                        data-id={this.props.data.id}&amp;gt;
                    {this.props.data.name}
                &amp;lt;/a&amp;gt;
                &amp;lt;ul&amp;gt;
                    {this.state.children.map(function(child) {
                        return &amp;lt;TreeNode key={child.id} 
                                data={child} 
                                onCategorySelect={this.props.onCategorySelect}/&amp;gt;;
                    }.bind(this))}
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
        );
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally in the category tree object we want to create the method that is being passed to on category select.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; CategoryTree = React.createClass({
    onSelect: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(node)&lt;/span&gt; {&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.selected &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.selected.isMounted()) {
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.selected.setState({selected: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;});
        }
        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState({selected: node});
        node.setState({selected: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;});
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.onCategorySelect) {
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.onCategorySelect(node);
        }
    },
    render: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
            &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;panel panel-default&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;panel-body&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;category-tree&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TreeNode&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;key&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{this.state.data.id}&lt;/span&gt; 
                                &lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{this.state.data}&lt;/span&gt; 
                                &lt;span class=&quot;attribute&quot;&gt;onCategorySelect&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{this.onSelect}&lt;/span&gt; /&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
        );
    }
});
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The onSelect method checks that there isn’t already a selected node and if so its deselected, the new node is set as the current selected node and its selected state is set to true. &lt;/p&gt;
&lt;p&gt;If you wish to see a demo of it all together please have a look &lt;a target=&quot;_blank&quot; href=&quot;http://codepen.io/anon/pen/Ftkln&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;unit-testing&quot;&gt;Unit testing&lt;/h2&gt;
&lt;p&gt;How can all this be tested? React.js comes with some test utilities that make it really easy to test your code. The “react with addons” packages contains the React test utils. &lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactTestUtils;

describe(&lt;span class=&quot;string&quot;&gt;&quot;Tree Node tests&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;{&lt;/span&gt;
    beforeEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        ReactTestUtils = React.addons.ReactTestUtils;
    });

    &lt;span class=&quot;comment&quot;&gt;/* Tests go here */&lt;/span&gt;

});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets write a test to ensure that the tree structure is correctly generated. &lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;it(&lt;span class=&quot;string&quot;&gt;&quot;Test treeNode structure to be generated correctly&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = {
    &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Healthcare&quot;&lt;/span&gt;
    &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Biotechnology &amp;amp; Pharmaceutical&quot;&lt;/span&gt;
            },
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Doctors&quot;&lt;/span&gt;
            },
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Occupational Therapy&quot;&lt;/span&gt;
            }
        ]
    };
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; treeNode = &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TreeNode&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{data}&lt;/span&gt; /&amp;gt;&lt;/span&gt;;&lt;/span&gt;
    ReactTestUtils.renderIntoDocument(treeNode);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; li = ReactTestUtils.scryRenderedDOMComponentsWithTag(
            treeNode, &lt;span class=&quot;string&quot;&gt;&quot;li&quot;&lt;/span&gt;);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; anchors = ReactTestUtils.scryRenderedDOMComponentsWithTag(
            treeNode, &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;);
    expect(li.length).toEqual(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);
    expect(anchors.length).toEqual(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we create the structure and we can expect that there will only be one &amp;lt;li&amp;gt; and &amp;lt;a&amp;gt; as all the others will be closed &lt;/p&gt;
&lt;p&gt;Now lets write a test for when the tree is clicked&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;it(&lt;span class=&quot;string&quot;&gt;&quot;Check the tree opens child nodes when clicked&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = {
    &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Healthcare&quot;&lt;/span&gt;
    &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Biotechnology &amp;amp; Pharmaceutical&quot;&lt;/span&gt;
            },
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Doctors&quot;&lt;/span&gt;
            },
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Occupational Therapy&quot;&lt;/span&gt;
            }
        ]
    };
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; treeNode = &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TreeNode&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{data}&lt;/span&gt; /&amp;gt;&lt;/span&gt;;&lt;/span&gt;
    ReactTestUtils.renderIntoDocument(treeNode);

    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; li = ReactTestUtils.findRenderedDOMComponentWithTag(
            treeNode, &lt;span class=&quot;string&quot;&gt;'li'&lt;/span&gt;);
    expect(li).toBeDefined();
    ReactTestUtils.Simulate.click(li);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; allLi = ReactTestUtils.scryRenderedDOMComponentsWithTag(
            li, &lt;span class=&quot;string&quot;&gt;&quot;li&quot;&lt;/span&gt;);
    expect(allLi.length).toEqual(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After clicking there should be 4 elements on the page&lt;/p&gt;
&lt;p&gt;Now to test that the correct callback is called when we select a node &lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;it(&lt;span class=&quot;string&quot;&gt;&quot;Ensure callback is called when selected&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = {
        callback: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(value)&lt;/span&gt; {&lt;/span&gt;
            value;
        }
    };
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = {
    &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Healthcare&quot;&lt;/span&gt;
    &lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;: [
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Biotechnology &amp;amp; Pharmaceutical&quot;&lt;/span&gt;
            },
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Doctors&quot;&lt;/span&gt;
            },
            {
                &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,
                &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Occupational Therapy&quot;&lt;/span&gt;
            }
        ]
    };
    spyOn(obj, &lt;span class=&quot;string&quot;&gt;'callback'&lt;/span&gt;);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; treeNode = &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;TreeNode&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{data}&lt;/span&gt; 
            &lt;span class=&quot;attribute&quot;&gt;onCategorySelect&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;{obj.callback}&lt;/span&gt; /&amp;gt;&lt;/span&gt;;&lt;/span&gt;
    ReactTestUtils.renderIntoDocument(treeNode);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; anchor = ReactTestUtils.findRenderedDOMComponentWithTag(
            treeNode, &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;);
    ReactTestUtils.Simulate.click(anchor);
    expect(obj.callback).toHaveBeenCalledWith(treeNode);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So here you have some basic functionality for a tree display.&lt;/p&gt;
&lt;p&gt;A few problems that we learned the hard way was that react requires a key for each of its objects. Especially when the same object is repeated more than once.&lt;/p&gt;
&lt;p&gt;This functionality can be extended further to suit your needs. For example having an always open functionality or reloading parts of the tree without refreshing the whole display. Hopefully this gives an idea of how the basics work. I really quite liked the recursiveness of this method.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html';
		window.disqus_identifier = '2014-12-12-creating-a-treeview-using-reactjs';
		window.disqus_title = 'Creating a treeview using react.js';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>The closing day of JAX London 2014</title>
			<link href="http://www.gumtree.com/devteam//2014-11-07-jax-london-day3.html"/>
			<updated>2014-11-07T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-11-07-jax-london-day3.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;The closing day of JAX London 2014 - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Nov 7th, 2014&lt;/span&gt;
				&lt;h1&gt;The closing day of JAX London 2014&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Juliana Lourenco&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;In October I attended the last of the three-day JAX London 2014 Conference. In this post, I will briefly write about the talks that took place in the main room (the Auditorium) and share the links to the speakers&amp;#39; material.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The day started with Chris Richardson&amp;#39;s keynote on &lt;strong&gt;Developing applications with a micro-service architecture&lt;/strong&gt;. In this talk Chris gave us some good insight on what constitutes a good micro-services approach without getting lost in a bunch of components.&lt;/p&gt;
&lt;p&gt;If the monolithic world may sometimes be simpler to develop and deploy, it can be challenging to include new technologies and scale. Microservices on the other hand, push development to a modular, polyglot architecture where technologies can be chosen in accordance to the problem in hand.
It seems a very good idea, but it increases dramatically the complexity of development and that cannot be ignored.&lt;/p&gt;
&lt;p&gt;To tackle this inconvenience, Chris presented some strategies. We could work with two basic layers: the service layer (the internal architecture of each service) and the system layer (that acts as an inter-service glue).
This includes the usage of the Single Responsibility Principle (taking special care not to end up with too many services and a potential risk of excessive network hops) and the usage of the API gateway as a single entry point between front-end and back-end.
He also encouraged the use of service deployment options with tools like Docker.&lt;/p&gt;
&lt;p&gt;Amongst the real life examples of success he presented an interesting &lt;a target=&quot;_blank&quot; href=&quot;http://www.addsimplicity.com/downloads/eBaySDForum2006-11-29.pdf&quot;&gt;&lt;strong&gt;eBay post&lt;/strong&gt;&lt;/a&gt; that is worth reading.&lt;/p&gt;
&lt;p&gt;It is always good to be able to get a glimpse of  what people like Chris - with tons of experience - think and do on the matter. If you are curious, the material to his keynote can be found &lt;a target=&quot;_blank&quot; href=&quot;http://www.slideshare.net/chris.e.richardson/jaxlondon-keynote-developing-applications-with-a-microservice-architecture&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;He returned to the auditorium a bit later for a second talk, &lt;strong&gt;Building microservices with Scala, functional domain models and Spring Boot&lt;/strong&gt;, in which he went into a bit more detail on microservices architecture combined with a functional and event oriented approach.&lt;/p&gt;
&lt;p&gt;In this talk he demonstrated, through a simplified banking application scenario, that event sourcing can solve key data consistency problems when dealing with a micro-service architecture and partitioned or NoSQL databases. He also demonstrated that Spring and Scala can work very well together and that Spring Boot can be a valuable tool to build microservices for a production environment.&lt;/p&gt;
&lt;p&gt;If you are interested in working with a similar tech stack, I definitely recommend that you take a look at his material &lt;a target=&quot;_blank&quot; href=&quot;http://www.slideshare.net/chris.e.richardson/jaxlondon-building-microservices-with-scala-functional-domain-models-and-spring-boot&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The day also had Samir Talwar&amp;#39;s talk on &lt;strong&gt;Design Patterns in the 21st Century&lt;/strong&gt;.
Samir started his talk by asking us to stop using Design Patterns. But before any of us had a heart attack, he explained himself: &amp;quot;we should stop doing it as if it was 1999&amp;quot;.&lt;/p&gt;
&lt;p&gt;With the advent of lambda expressions in Java 8, we now have a powerful tool that allow us to get rid of the verbosity of inner classes in cases where just a function would be a lot simpler to deal with.&lt;/p&gt;
&lt;p&gt;If you&amp;#39;re new to lambda expressions, the most basic and general idea is that, code that once was written like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./jax-london-2014/p1.png&quot; alt=&quot;Lambda&quot; title=&quot;Lambda&quot;&gt;&lt;/p&gt;
&lt;p&gt;can now be written like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./jax-london-2014/p2.png&quot; alt=&quot;Lambda&quot; title=&quot;Lambda&quot;&gt;&lt;/p&gt;
&lt;p&gt;GoF&amp;#39;s Design Patterns was written in order to be a catalogue of good solutions to well known problems in development. The efficient idioms they&amp;#39;ve proposed were successfully used in various languages for many years.&lt;/p&gt;
&lt;p&gt;Samir walked us through three of the extensive collection of these patterns, one of each category: AbstractFactory from the creational collection of patterns, Adapter from the structural collection and the Chain of Responsibility pattern from the behavioural list.&lt;/p&gt;
&lt;p&gt;You can check Samir&amp;#39;s complete talk &lt;a target=&quot;_blank&quot; href=&quot;http://talks.samirtalwar.com/design-patterns-in-the-21st-century.html&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;, if you&amp;#39;d like to go through each of his examples.
You&amp;#39;ll see that we can indeed improve the writing of design patterns by approaching them with a functional mindset. In the end, the main gain may not necessarily be how many lines of code you end up with, but the possibility to concentrate more on our domain and less on language-implementation details.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The auditorium was also the stage for Sandro Mancuso&amp;#39;s &lt;strong&gt;Crafted Design&lt;/strong&gt; talk.
Mancuso talked about the feeling that many (if not all) of us have experienced when joining a new company. As soon as we have our IDE configured and have the chance to take a look at the code we&amp;#39;ll be working on, we start looking through the files trying to figure out what the application is about and, of course,  where to place a new feature.&lt;/p&gt;
&lt;p&gt;More often than not we find ourselves staring at packages with names that tell us very little about what the application actually does. We can figure out a few things like &amp;quot;it is a web application with MVC pattern&amp;quot; but a good package structure could actually give us a lot more information than that.&lt;/p&gt;
&lt;p&gt;As Mancuso says, we&amp;#39;ve been using MVC but not necessarily in a good way. In his own words, many applications end up with &amp;quot;an anemic domain, flat controllers and strictly coupled to a MVC framework&amp;quot;.&lt;/p&gt;
&lt;p&gt;He shares with us his view of what a good MVC application is and how DDD with minor changes can solve this for good. More about his ideas can be found &lt;a target=&quot;_blank&quot; href=&quot;http://www.slideshare.net/sandromancuso/crafted-design-geecon-2014&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The last talk was Richard Warburton&amp;#39;s &lt;strong&gt;Performance from Predictability&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The author of  the &lt;a target=&quot;_blank&quot; href=&quot;http://www.amazon.co.uk/gp/product/1449370772/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=1634&amp;amp;creative=19450&amp;amp;creativeASIN=1449370772&amp;amp;linkCode=as2&amp;amp;tag=insiglogic-21&quot;&gt;&lt;em&gt;Java 8 Lambdas book&lt;/em&gt;&lt;/a&gt; did not talk about lambdas this time.
Instead, he demonstrated that a bit of low level knowledge in CPU branch prediction, memory access and storage can help us to improve our application&amp;#39;s performance.&lt;/p&gt;
&lt;p&gt;As he said, &amp;quot;performance is not solved only with product solutions (a framework, library or tool) or purely by an adequate architecture. It can actually be accomplished with the help of some methodologies and fundamentals&amp;quot;.&lt;/p&gt;
&lt;p&gt;The general idea is that we can, while coding, make some choices that will improve the way CPU branch prediction works, as well as the way memory (both CPU&amp;#39;s cache levels and hard disk) is accessed.&lt;/p&gt;
&lt;p&gt;Since CPUs are super-pipelined and superscalar and branching causes stalls (which kills performance), we should simplify our code.
Some of the things that we can do, for instance, is to use smaller data types, avoid &amp;quot;big holes&amp;quot; in our data and make access as linear as possible when performance is an issue.&lt;/p&gt;
&lt;p&gt;He pointed that, being able to measure for cache hit/miss rates and correlate that with other data we have can be very helpful. As hard-disk access will always be slower than L1, L2 and L3 caches, when performance is an issue, we  could benefit from simple, sequential memory access patterns and always have in mind that fragmentation is our enemy.&lt;/p&gt;
&lt;p&gt;He finished his talk stating that we should generally prefer principles over tools (gather knowledge and apply them to your problems/reality instead of relying on a tool to solve your issues), chose simplicity over complexity and ensure that we use predictable access over random access whenever possible.&lt;/p&gt;
&lt;p&gt;His talk&amp;#39;s slides can be found &lt;a target=&quot;_blank&quot; href=&quot;http://www.slideshare.net/RichardWarburton/performance-and-predictability-1&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The closing keynote was given by Markus Voelter.
His talk, entitled &lt;strong&gt;Introducing Language-Oriented Business Applications&lt;/strong&gt;, was about how to allow domain experts (banking, insurance, travelling, etc.) to manipulate their data without help from developers.&lt;/p&gt;
&lt;p&gt;In other words, it was about the idea that domain-specific languages (DSLs) can enable domain experts to program what they need without having to rely on a complex system that only developers can understand and evolve.&lt;/p&gt;
&lt;p&gt;The idea is not by any means new but, as IDEs are now more powerful than ever, they can actually be used as a platform for the creation and usage of language-oriented business applications.&lt;/p&gt;
&lt;p&gt;During his talk he showed us some examples of what can be accomplished with the tools available nowadays.
I couldn&amp;#39;t find the slides used in this particular talk, but more information can be found &lt;a target=&quot;_blank&quot; href=&quot;http://www.slideshare.net/schogglad&quot;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html';
		window.disqus_identifier = '2014-11-07-jax-london-day3';
		window.disqus_title = 'The closing day of JAX London 2014';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Jax London summary</title>
			<link href="http://www.gumtree.com/devteam//2014-10-29-Jax-London.html"/>
			<updated>2014-10-29T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-10-29-Jax-London.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Jax London summary - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Oct 29th, 2014&lt;/span&gt;
				&lt;h1&gt;Jax London summary&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Piotr Dorobisz&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-29-Jax-London.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;On the 14th October 2014 I attended JAX London conference. The talks mainly focused on Java-related technologies but there were other topics as well.
In this post I&amp;#39;d like to give brief summary of few talks I attended.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h3 id=&quot;finding-your-way-in-the-midst-of-the-nosql-haze-by-abdelmonaim-remani-&quot;&gt;Finding Your Way In the Midst of the NoSQL Haze (by Abdelmonaim Remani)&lt;/h3&gt;
&lt;p&gt;This talk was a short introduction to NoSQL databases. Speaker discussed pros and cons of different solutions (plain files, relational databases etc.) and problems one can meet while using them (e.g. famous O/R impedance mismatch for relational databases). Then he focused on NoSQL databases and how they are different from what we are used to when we’re coming from world of relational databases. I think that this table presented by him quickly summarises differences:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;relational database&lt;/th&gt;
&lt;th&gt;NoSQL database&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;single machine&lt;/td&gt;
&lt;td&gt;cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CA (Consistency, Availability)&lt;/td&gt;
&lt;td&gt;CA/AP/CP (two of: Consistency, Availability, Partition tolerance)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;full indexes&lt;/td&gt;
&lt;td&gt;key only indices&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rigid schema&lt;/td&gt;
&lt;td&gt;changeable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complex queries possible&lt;/td&gt;
&lt;td&gt;complex queries are difficult&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Then he described different types of NoSQL databases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Key-Value data stores, e.g. MongoDB&lt;/li&gt;
&lt;li&gt;Columnar data stores - fast column operations (aggregation), e.g. Cassandra&lt;/li&gt;
&lt;li&gt;Graph data stores - their limitation is that they don’t scale horizontally, e.g. Neo4j&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end he also mentioned polyglot approach to persistence. Basically they idea is that we store different aspects of data in different types of databases. For example let’s consider application that stores tweets. We could store tweets content in DynamoDB (key-value datastore) but relations between them could be stored in Neo4j (graph datastore).&lt;/p&gt;
&lt;h3 id=&quot;understanding-real-time-event-processing-through-football-by-senaka-fernando-&quot;&gt;Understanding Real Time Event Processing through Football (by Senaka Fernando)&lt;/h3&gt;
&lt;p&gt;In this talk Senaka Fernando from WSO2 discussed example application that processes real-time data from a football match. Every player has sensors in their shoes and there are also sensors in ball what gives us about million events per second. Application was built using WSO2’s Complex Event Processor (CEP) which is high performant event processing engine. CEP is able to filter and join event streams and process data in real-time.&lt;/p&gt;
&lt;h3 id=&quot;the-art-of-destroying-software-by-greg-young-&quot;&gt;The Art of Destroying Software (by Greg Young)&lt;/h3&gt;
&lt;p&gt;The idea presented in this talk was interesting and very different to what we’re usually taught. Normally, when developing new features, we constantly refactor and extend already existing code. However, sometimes it can be a real pain - architecture is very complex and adding even a simplest feature can be a nightmare. Instead of struggling to extend already existing code base Greg recommended to throw away existing code and implement everything from scratch. Basically the idea is that we shouldn’t have code which we wouldn’t be able to rewrite in 1 week. This requirement can help us also to reduce complexity of source code.
In my opinion this concept is very similar to Sacrificial Architecture recently posted by Martin Fowler on his &lt;a target=&quot;_blank&quot; href=&quot;http://martinfowler.com/bliki/SacrificialArchitecture.html&quot;&gt;blog&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;testing-the-enterprise-layers-the-a-b-c-s-of-integration-testing-by-aslak-knutsen-&quot;&gt;Testing the Enterprise layers - The A, B, C’s of integration testing (by Aslak Knutsen)&lt;/h3&gt;
&lt;p&gt;In his talk Asiak presented &lt;a target=&quot;_blank&quot; href=&quot;http://arquillian.org/&quot;&gt;Arquillian testing platform&lt;/a&gt;. Arquillian can manage various containers (e.g. Tomcat, JBoss) and automatically deploy application to them during tests. It can be used with various testing frameworks (e.g. JUnit, TestNG). Arquillian can help us making tests portable because we can easily verify application against various containers.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-29-Jax-London.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-10-29-Jax-London.html';
		window.disqus_identifier = '2014-10-29-Jax-London';
		window.disqus_title = 'Jax London summary';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Big Data &amp; Analytics Innovation Summit</title>
			<link href="http://www.gumtree.com/devteam//2014-10-27-big-data-analytics-summit-london.html"/>
			<updated>2014-10-27T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-10-27-big-data-analytics-summit-london.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Big Data &amp;amp; Analytics Innovation Summit - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Oct 27th, 2014&lt;/span&gt;
				&lt;h1&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Andy Summers&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;On the 16th and 17th October 2014 I attended the Big Data &amp;amp; Analytics Innovation Summit in London, hosted by Innovation Enterprise. There were 18 different speakers each with a 30 minute presentation-slot.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The talks focused on a range of different areas where big data is concerned. Some presenters were technologists, some were data analysts, some were company directors. The different talks on big data can roughly be categorised into the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data collection&lt;/li&gt;
&lt;li&gt;Aggregation framework&lt;/li&gt;
&lt;li&gt;Tools for analysis&lt;/li&gt;
&lt;li&gt;Effective use of results&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-best-talks&quot;&gt;The best talks&lt;/h2&gt;
&lt;p&gt;I could go through the 9 pages of notes I made which covered every talk, however that would make a rather long blog post. Instead I will concentrate on a few that stood out for me.&lt;/p&gt;
&lt;h3 id=&quot;expedia&quot;&gt;Expedia&lt;/h3&gt;
&lt;p&gt;As a technologist, my personal favourite talk was on the first morning by Andrea Eakin, Tech Lead at Expedia. She described how there are 1 trillion route possibilities for a flight from New York to London, and Expedia gets 60 million unique users per month. Previously all of this data - and it was from a variety of sources - was aggregated by a rather cumbersome batch process. Data would take between 1-3 days to process and this of course made many things very difficult - A/B test results couldn&amp;#39;t be found quickly enough, the health of the data was impossible to monitor and fix in time.&lt;/p&gt;
&lt;p&gt;Part of the solution was to unify the data sources into expanded web logs, and feed this into a Storm cluster via Kestrel MQ. Aggregated data would be held in a PostgreSql database with a bunch of triggers and another Storm cluster behind it. The dashboard for results would then query Postgres. After this phase 1, they found however that Postgres was rather slow to perform lookups and do calculations. Dynamo DB was chosen to provide a simple key/value store for the calculation results, then as the team&amp;#39;s knowledge of Storm grew more of the Postgres trigger logic was moved there instead. What they have now is a much better &amp;#39;realtime&amp;#39; processing architecture which allows for faster feedback, fault tolerance, and healthier data.&lt;/p&gt;
&lt;h3 id=&quot;badoo&quot;&gt;Badoo&lt;/h3&gt;
&lt;p&gt;Probably the highlight of day 1 for most people was the afternoon talk by Edward Kibardin, of Badoo. He has his own &lt;a target=&quot;_blank&quot; href=&quot;http://www.datarefiner.com&quot;&gt;framework&lt;/a&gt; (can I call it that?) which produces topological/diagrammatical analysis of large datasets.&lt;/p&gt;
&lt;p&gt;One example he gave was, say you are Netflix and you have a large table describing which users have watched which movies. Using the data refiner tool it is possible to produce a network where each node is a movie and the links between them represent users who watched both. The more users who watched both, the stronger the link. From this as well the tool can group strongly-linked movies into clusters, and these might roughly equate to genres. It is then possible to see which users prefer which genres, which genres are closely linked together, and so on.&lt;/p&gt;
&lt;p&gt;Being a social network, Badoo has a number of similar concerns to Gumtree, so this was very interesting for us. Using the Data Refiner they are able to get help on a wide range of business problems - in particular trust and safety.&lt;/p&gt;
&lt;h3 id=&quot;king-com&quot;&gt;King.com&lt;/h3&gt;
&lt;p&gt;The first talk on the second morning was by Vince Darley, of King.com (they make Candy Crush Saga and similar famous games, in case you weren&amp;#39;t sure where you&amp;#39;d heard of them). Their Big Data platform is centred around predictive analytics for player behaviour. They have 2 Petabytes of player data, and this is all stored in Hadoop. Initially they were using the classic Hive for ETL to analyse the data, however over time they found this to be too slow, so they have introduced &lt;a target=&quot;_blank&quot; href=&quot;http://www.exasol.com/en/&quot;&gt;ExaSolution&lt;/a&gt; which works alongside Hive in a hybrid architecture. This has helped them a lot as their data can now be crunched in 1 hour.&lt;/p&gt;
&lt;p&gt;This platform is doing everything in a batch way, solving the realtime challenge is a bridge they are still crossing. What they have learnt from using ExaSol so far is that it could be a good possibility for realtime processing, and they are also looking at Kafka to feed data in.&lt;/p&gt;
&lt;h3 id=&quot;twitter&quot;&gt;Twitter&lt;/h3&gt;
&lt;p&gt;Straight after Vince was Anirudh Todi of Twitter. Some readers will already be familiar with the range of open source big data technologies that Twitter have blessed us with, such as &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/twitter/scalding&quot;&gt;Scalding&lt;/a&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/nathanmarz/storm&quot;&gt;Storm&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/twitter/summingbird&quot;&gt;Summingbird&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Scalding is built for traditional batch aggregation in Hadoop, and is a library that allows Hadoop Map-Reduce jobs to be written in Scala.&lt;/p&gt;
&lt;p&gt;Storm is a powerful distributed realtime aggregation system, that allows users to design their own topology of &amp;#39;spouts&amp;#39; and &amp;#39;bolts&amp;#39; for realtime computation.&lt;/p&gt;
&lt;p&gt;Summingbird is an interface to both, allowing you to write an aggregation job once and it will be converted to both a Scalding version and a Storm version.&lt;/p&gt;
&lt;p&gt;This gives rise to a Lambda architecture, where each event to be aggregated is processed twice, once by the batch system and once by the realtime system. What the user sees as the end result is a combination of the results of both systems.&lt;/p&gt;
&lt;p&gt;Twitter have built their own wrapper around all of this, called &lt;a target=&quot;_blank&quot; href=&quot;https://blog.twitter.com/2014/tsar-a-timeseries-aggregator&quot;&gt;Tsar - TimeSeries Aggregator&lt;/a&gt;. However Tsar is currently quite tied to Twitter&amp;#39;s implementation and business model, so as such it is not open source itself (even though it wraps around all the aforementioned open source technologies).&lt;/p&gt;
&lt;h2 id=&quot;main-lessons-in-conclusion&quot;&gt;Main lessons in conclusion&lt;/h2&gt;
&lt;p&gt;This is more a collection of random things I wrote down during the talks that seemed important.&lt;/p&gt;
&lt;p&gt;Presenting analysis results to business/stakeholders is hard to get right. It takes more effort to say less, using the dashboard analogy people engage when they are able to digest the key information without any brain power. If you&amp;#39;re writing reports rather than a dashboard, structure it like a news report with a headline.&lt;/p&gt;
&lt;p&gt;Many businesses face the &amp;#39;cold start&amp;#39; problem - that is, how do you recommend things to brand new users who have no history with you? You can only go off their registration data and/or info about their device/location. Sometimes that is enough.&lt;/p&gt;
&lt;p&gt;If you rely on &amp;#39;local experts&amp;#39; to drive your product you could end up with a &lt;a target=&quot;_blank&quot; href=&quot;http://simpsons.wikia.com/wiki/The_Homer&quot;&gt;&amp;#39;Homer&amp;#39;&lt;/a&gt;. Companies are slowly realising that they need to be more data driven, and by that it means using your customer&amp;#39;s behaviour to define where you should go next.&lt;/p&gt;
&lt;p&gt;One challenge faced though is, once you build a big data tool that crunches numbers, and this replaces an &amp;#39;old way&amp;#39; that your company used previously, how do you make it easy for your analysts to start using it? Hand-offs are not the answer, nor is having one expert analyst to do everything. Sometimes you need big data to analyse the success of your big data system, by tracking the behaviour of your analysts. Sometimes it seems most sensible to produce a user interface that appears the same as the old way - one such example in use was actually a Microsoft Excel interface that performed aggregations in the background.&lt;/p&gt;
&lt;p&gt;Technology-wise there are many open-source and even enterprise solutions out there, but use the right tool for the right job and let things evolve, much like your company&amp;#39;s product. &lt;/p&gt;
&lt;p&gt;A/B testing does have some caveats, especially where revenue is concerned - what if your A/B test was for total revenue, but only a small percentage of your users are spending money?&lt;/p&gt;
&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;I would like to acknowledge the following people, whose ideas are exposed in this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Philip Clarkson of Hailo&lt;/li&gt;
&lt;li&gt;Richard Mapes of YPlan&lt;/li&gt;
&lt;li&gt;Mike Hyde of Skype&lt;/li&gt;
&lt;li&gt;Brian Hills of Skyscanner&lt;/li&gt;
&lt;li&gt;Paul Joyce of Geckoboard&lt;/li&gt;
&lt;li&gt;Andrea Eakin of Expedia&lt;/li&gt;
&lt;li&gt;Paul Johnson of VLDB Solutions&lt;/li&gt;
&lt;li&gt;Andy McMurtrie of Royal Mail&lt;/li&gt;
&lt;li&gt;Edward Kibardin of Badoo&lt;/li&gt;
&lt;li&gt;Alpesh Doshi of Redcliffe Capital&lt;/li&gt;
&lt;li&gt;Vince Darley of King.com&lt;/li&gt;
&lt;li&gt;Anirudh Todi of Twitter&lt;/li&gt;
&lt;li&gt;Jeff Wood of Essex Council&lt;/li&gt;
&lt;li&gt;Ewan Nicolson of Skyscanner&lt;/li&gt;
&lt;li&gt;Mishal Patel of NHS&lt;/li&gt;
&lt;li&gt;Justin Lyon of Simudyne&lt;/li&gt;
&lt;li&gt;Manu Kumar of Vodafone&lt;/li&gt;
&lt;li&gt;Scott Dettman of Manpower&lt;/li&gt;
&lt;/ul&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html';
		window.disqus_identifier = '2014-10-27-big-data-analytics-summit-london';
		window.disqus_title = 'Big Data &amp; Analytics Innovation Summit';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Hackathon 2014</title>
			<link href="http://www.gumtree.com/devteam//2014-10-13-hackathon-2014.html"/>
			<updated>2014-10-13T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-10-13-hackathon-2014.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Hackathon 2014 - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Oct 13th, 2014&lt;/span&gt;
				&lt;h1&gt;Hackathon 2014&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Gumtree Dev Team&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;And it&amp;#39;s over! After an intense week, Gumtree&amp;#39;s Hackathon 2014 ended last Friday. People from all over the business voted with their feet (literally!) and two very interesting projects shared the victory.&lt;/p&gt;
&lt;p&gt;But before we rush to the end, let’s explain how we organised and run this event.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;
&lt;p&gt;To be honest, this was the second time that we tried to run a hackathon this year. Initially scheduled for August, our &lt;a target=&quot;_blank&quot; href=&quot;http://blog.gumtree.com/see-the-new-gumtree/&quot;&gt;responsive&lt;/a&gt; project got into its final, critical stages and management decided to delay the event a few weeks. Given the amazing feedback we have been receiving about the new site, it was the right decision :)&lt;/p&gt;
&lt;p&gt;So, how did we prepare for this Hackathon? The first step was to agree on how long it should be. There&amp;#39;s plenty of Hackathons which only last 24-48 hours, where the teams pull an all-nighter trying to squeeze out every single bit of functionality from an idea. And they can be fun! But sleep deprivation is &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Effects_of_sleep_deprivation_on_cognitive_performance&quot;&gt;not a good idea&lt;/a&gt; and, besides, 2 days may not be enough for some projects. So Gumtree decided to run the hack for a full week.&lt;/p&gt;
&lt;p&gt;Coordinating an event like this within our team (30-ish developers) is not easy, less so when you include holidays. We created a doodle with possible dates in which we could do the hackathon, and after a period of voting we chose the best week where the majority could participate. We are sorry for those who couldn&amp;#39;t join us, but hopefully they will be available for the next one.&lt;/p&gt;
&lt;p&gt;At this stage, knowing the week and who was available, all we needed were ideas. Enter &lt;a target=&quot;_blank&quot; href=&quot;https://trello.com/&quot;&gt;Trello&lt;/a&gt;, a tool we use a lot, and a great fit for this task. We created a board with several lists, each list representing a facet of the business (SEO, revenue or search were some examples, and there were several lists). Each person with an idea would add a card with the title of the project and a description. &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/oblackwood13&quot;&gt;Oliver Blackwood&lt;/a&gt; helped to streamline this process by running a SurveyMonkey poll (and adding its results to Trello) to ensure people not belonging to the technical team had their say.&lt;/p&gt;
&lt;p&gt;With the Trello board full of proposals (more than 40 in total) we started a period in which everybody could vote for the ideas they liked the most. After the voting was over, we organised teams around the most popular ones and ended up with 8 different teams. Then, the week could start.&lt;/p&gt;
&lt;h2 id=&quot;hackathon-2014-starts-&quot;&gt;Hackathon 2014 starts!&lt;/h2&gt;
&lt;p&gt;On the first day of the hackathon, teams were mostly ready, although some people had been on holidays during the project discussion and we had a couple of new starters (what a way to join the company!), so we organised a quick meeting to assign any stragglers. &lt;a target=&quot;_blank&quot; href=&quot;http://www.krispykreme.co.uk/&quot;&gt;Krispy Kreme&lt;/a&gt; made an appearance to provide sugary fuel for the developers, and the hackathon started, at last.&lt;/p&gt;
&lt;p&gt;There&amp;#39;s not much to say from the week itself. Teams self-organised, handing QA environments to each other as was necessary, and everything ran pretty smoothly. Even although we were in the hackathon, there was always time to fix a couple of issues on the site (nothing serious). We also had a few company events in the middle, including the visit from &lt;a target=&quot;_blank&quot; href=&quot;http://www.ebayclassifiedsgroup.com/&quot;&gt;ECG&lt;/a&gt; management team, nothing that would distract us, though.&lt;/p&gt;
&lt;h2 id=&quot;time-to-shine&quot;&gt;Time to Shine&lt;/h2&gt;
&lt;p&gt;After a week of planning and coding the hardest part started: demo time! The whole of Gumtree, both the technology and commercial teams, came together to see the results. Each team was allocated a time-slot and they showed what they had built to the company.&lt;/p&gt;
&lt;p&gt;The presence of non-technical people already makes communicating the details of what you have done slightly harder (if you want them to appreciate the technical prowess of your team), but to make it more exciting we added an extra challenge in the form of ‘issues’ with both network connectivity and screen resolution on the projector. You know, to make the demo more &amp;#39;interesting&amp;#39;.&lt;/p&gt;
&lt;h2 id=&quot;the-winners&quot;&gt;The Winners&lt;/h2&gt;
&lt;p&gt;To decide the winners, we positioned the teams across the room and we asked people to move near the team who presented their favourite project. As we said, people were literally voting with their feet.&lt;/p&gt;
&lt;p&gt;It was a close vote, and in the end we had two winners, one for a project about a ‘Gumtree Inbox’ and one which looked at helping the safety of our users. All projects deserved great merit, and the teams displayed great skill in ensuring a bunch of fully functioning solutions in less than 5 days. &lt;/p&gt;
&lt;p&gt;The winning teams won a dinner at &lt;a target=&quot;_blank&quot; href=&quot;http://www.gauchorestaurants.co.uk/restaurants/restaurant.php?id=richmond&quot;&gt;Gaucho Richmond&lt;/a&gt; plus bragging rights, which are worth a lot by themselves!&lt;/p&gt;
&lt;p&gt;But more importantly, the winner&amp;#39;s projects have since been added to the Product roadmap. Because of this goal, teams made a conscious effort to produce high-quality code instead of the standard &amp;#39;hackathon-style&amp;#39; code you can see sometimes. It may still need some polish, but not a full rewrite. If you are a developer, you understand how impressive this is when you factor in time constraints and the end results.&lt;/p&gt;
&lt;p&gt;And thus, the week ended. It has been an extremely fun event, and we are already thinking on when to organise the next one. Given the sheer amount of great ideas the team proposed and the final results, we’re sure that management are as eager as we are ;)&lt;/p&gt;
&lt;p&gt;If you enjoyed the ideas or the post, please comment or send us feedback at &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/GumtreeDevTeam&quot;&gt;@gumtreeDevTeam&lt;/a&gt;.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html';
		window.disqus_identifier = '2014-10-13-hackathon-2014';
		window.disqus_title = 'Hackathon 2014';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Building Badass Products – Mind the Product Best Bits</title>
			<link href="http://www.gumtree.com/devteam//2014-10-06-Mind-the-product-best-bits.html"/>
			<updated>2014-10-06T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-10-06-Mind-the-product-best-bits.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Building Badass Products – Mind the Product Best Bits - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Oct 6th, 2014&lt;/span&gt;
				&lt;h1&gt;Building Badass Products – Mind the Product Best Bits&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Polly Howden&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;I went to Mind the Product for the first time last month. They had some super-duper speakers!&lt;/p&gt;
&lt;p&gt;My #1 favourite was &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/seriouspony&quot;&gt;&lt;strong&gt;Kathy Sierra&lt;/strong&gt;&lt;/a&gt;. In her compelling presentation &lt;a target=&quot;_blank&quot; href=&quot;http://vimeo.com/106659444&quot;&gt;&amp;quot;Building Badass Users&amp;quot;&lt;/a&gt; which covered the following;
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Be better at the context&amp;quot; - It&amp;#39;s not about whether the product is amazing, it&amp;#39;s about whether it helps the user feels amazing and can do what they want to do. This makes me think of Instagram that successfully helps millio&lt;a target=&quot;_blank&quot; href=&quot;http://livemocha.com/ns&quot;&gt;http://livemocha.com/ns&lt;/a&gt; of users make and share beautiful images by giving them all the tools to be the author / photographer of their lives. &lt;/li&gt;
&lt;li&gt;&amp;quot;Reduce cognitive leaks&amp;quot; - User tasks take ability + willpower and any friction or hidden information leads to &amp;quot;cognitive leaks&amp;quot;. The user&amp;#39;s willpower is used up, this creates more &amp;quot;leaks&amp;quot;, and the poor person&amp;#39;s energy and focus is zapped and they won&amp;#39;t go on. Yes, we all kind of know we should reduce friction but this psychology experiment she mentioned is a reminder it&amp;#39;s a &amp;quot;must have&amp;quot; tenet of product development. Providing trusted defaults and hints are a great start.&lt;/li&gt;
&lt;li&gt;&amp;quot;Your brain is a drama queen!&amp;quot; - Once the brain starts to worry about something it can&amp;#39;t let it go. This creates more cognitive leaks and distractions. Give the brain a reason to feel confident &amp;quot;we&amp;#39;ve got it handled&amp;quot; and shut down worries. So always tell the user &amp;quot;we&amp;#39;ve got it handled&amp;quot; and (echoing Android design principles &amp;quot;it&amp;#39;s not your fault&amp;quot;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;./mind-the-product/image_1.png&quot; alt=&quot;Via Buffersocial&quot; title=&quot;Via Buffersocial&quot;&gt;&lt;/p&gt;
&lt;p&gt;I also enjoyed &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/davewascha&quot;&gt;&lt;strong&gt;Dave Wascha&lt;/strong&gt;&lt;/a&gt;&amp;#39;s sweet synopsis of &lt;strong&gt;&amp;quot;Product Manager AntiPatterns&amp;quot;&lt;/strong&gt; we should all take care to avoid:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inertia - doing things the way they&amp;#39;ve always been done&lt;/li&gt;
&lt;li&gt;Propinquity - believing your user is just like you&lt;/li&gt;
&lt;li&gt;Groupthink - clever people making stupid decisions or not taking action when they are together in a group&lt;/li&gt;
&lt;li&gt;The Journalist - observing a problem but not taking real action to fix it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An almost Orwellian warning of the dangers of complacency don&amp;#39;t you think?!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./mind-the-product/image_2.png&quot; alt=&quot;Conformity Hazard by wikimedia.org&quot; title=&quot;Conformity Hazard by wikimedia.org&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/destraynor&quot;&gt;&lt;strong&gt;Des Traynor&lt;/strong&gt;&lt;/a&gt; used the example of our ever over-complicated TV remote to warn against the urge of overly complicated products, and cautioned about saying yes to ideas outside your core feature to avoid swapping short term &amp;quot;wow&amp;quot;, for long term &amp;quot;ow&amp;quot;.&lt;/p&gt;
&lt;p&gt;If it doesn&amp;#39;t answer the following say no:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does it fit your vision?&lt;/li&gt;
&lt;li&gt;Is it reward greater than the effort?&lt;/li&gt;
&lt;li&gt;Does it benefit all customers?&lt;/li&gt;
&lt;li&gt;Will it grow the business?&lt;/li&gt;
&lt;li&gt;Will it matter in five years?&lt;/li&gt;
&lt;li&gt;Is it a forward step?&lt;/li&gt;
&lt;li&gt;Will it generate new engagement?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;./mind-the-product/image_3.png&quot; alt=&quot;There grandma, I fixed it&quot; title=&quot;There grandma, I fixed it&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/nireyal&quot;&gt;&lt;strong&gt;Nir Eyal&lt;/strong&gt;&lt;/a&gt; invited us to go deep into the human psyche with his whistle-stop tour around the key points of his book &amp;quot;Hooked&amp;quot; about building products that create (ideally positive) habits in users to make them highly engaged and valuable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40% of what we do is driven by habit&lt;/li&gt;
&lt;li&gt;Successful business develop habits with internal triggers that bring them back over and over&lt;/li&gt;
&lt;li&gt;Trigger to action requires ability and motivation which can be more or less successful as a result of a variety of factors including time, money, emotional impact&lt;/li&gt;
&lt;li&gt;People wired to be excited by potential reward and variance / novelty of outcome increases that interest&lt;/li&gt;
&lt;li&gt;The best habit forming technologies become more valuable the mere they are used because the user has invested in them (e.g. Becomes more personal, builds a reputation etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;./mind-the-product/image_4.png&quot; alt=&quot;Hooked, by Nir Eyal&quot; title=&quot;Hooked, by Nir Eyal&quot;&gt;&lt;/p&gt;
&lt;p&gt;Product Manager is a multi-faceted role but ultimately it&amp;#39;s about being a caretaker of the customer experience, without which your business won&amp;#39;t thrive. &lt;/p&gt;
&lt;p&gt;I try to stay humble and curious in the face of user feedback, and these speakers give some great reminders and suggestions of how to help with the needs people don&amp;#39;t express or even know they have.&lt;/p&gt;
&lt;p&gt;I hope you found it as interesting as I did! What are your thoughts or responses to the points made?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full Mind the Product summary: &lt;a target=&quot;_blank&quot; href=&quot;http://www.mindtheproduct.com/2014/09/mtpcon-2014-were-doing-the-right-thing/&quot;&gt;http://www.mindtheproduct.com/2014/09/mtpcon-2014-were-doing-the-right-thing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Des Traynor slides &lt;a target=&quot;_blank&quot; href=&quot;https://speakerdeck.com/destraynor&quot;&gt;https://speakerdeck.com/destraynor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kathy Sierra presentation &lt;a target=&quot;_blank&quot; href=&quot;http://vimeo.com/106659444&quot;&gt;http://vimeo.com/106659444&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dave Wascha &lt;a target=&quot;_blank&quot; href=&quot;http://vimeo.com/90117107&quot;&gt;http://vimeo.com/90117107&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nir Eyal &lt;a target=&quot;_blank&quot; href=&quot;http://www.nirandfar.com/&quot;&gt;http://www.nirandfar.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html';
		window.disqus_identifier = '2014-10-06-Mind-the-product-best-bits';
		window.disqus_title = 'Building Badass Products – Mind the Product Best Bits';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Safely running bulk operations on Redis with lua scripts</title>
			<link href="http://www.gumtree.com/devteam//2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html"/>
			<updated>2014-08-19T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Safely running bulk operations on Redis with lua scripts - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Aug 19th, 2014&lt;/span&gt;
				&lt;h1&gt;Safely running bulk operations on Redis with lua scripts&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Alex Forbes&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;If there was one golden rule when working with redis in production, it would be&lt;/p&gt;
&lt;p&gt;&lt;blockquote&gt;&amp;quot;Don&amp;#39;t use KEYS&amp;quot;&lt;/blockquote&gt;
The reason for this is that it blocks the redis event loop until it completes, i.e. while it&amp;#39;s busy scanning its entire keyspace, it can&amp;#39;t serve any other clients.&lt;/p&gt;
&lt;p&gt;Recently, we had a situation where code was storing keys in redis without setting an expiry time, with the result that our keyspace started to grow:&lt;/p&gt;
&lt;p&gt;&lt;!-- Read more --&gt;
&lt;img src=&quot;./redis-lua/redis-memory.png&quot; alt=&quot;Redis Memory&quot; title=&quot;Redis memory&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now 250Mb isn&amp;#39;t a lot of data, but it still represents about a million keys to expire, and it made sense to clean it out given that our normal daily cycle was about 30-50Mb.&lt;/p&gt;
&lt;p&gt;Once we released a code fix on the 19th, the keyspace stopped growing, but because the keys had no TTL set, we would never get the memory back unless we flushed the entire database, or expired them manually.&lt;/p&gt;
&lt;p&gt;Obviously, we preferred the latter option.&lt;/p&gt;
&lt;p&gt;Knowing that you shouldn&amp;#39;t use KEYS (did I mention you shouldn&amp;#39;t use KEYS?), my first attempt used the SCAN command to obtain a list of keys and iterated over them with the EXPIRE command. I started with a script from &lt;a href=&quot;http://stackoverflow.com/questions/4006324/how-to-atomically-delete-keys-matching-a-pattern-using-redis&quot; target=&quot;_blank&quot;&gt;this stackoverflow post&lt;/a&gt;, and modified it because the output didn&amp;#39;t seem to be what it was expecting.&lt;/p&gt;
&lt;p&gt;The result, was &lt;a href=&quot;https://github.com/al4/redis-expire-scripts/blob/master/expire-attempt1.sh&quot; target=&quot;_blank&quot;&gt;this script&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/bash
&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$#&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ]
&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Expire keys from Redis matching a pattern using SCAN &amp;amp; EXPIRE&quot;&lt;/span&gt;
  &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Usage: &lt;span class=&quot;variable&quot;&gt;$0&lt;/span&gt; &amp;lt;host&amp;gt; &amp;lt;port&amp;gt; &amp;lt;pattern&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;

cursor=-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
keys=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-eq&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ]
  &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;
    cursor=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;

  reply=$(redis-cli -h &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; -p &lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt; SCAN &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; MATCH &lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt;)
  cursor=$(expr &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$reply&lt;/span&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;'\([0-9]*[0-9 ]\)'&lt;/span&gt;)

  keys=$(&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$reply&lt;/span&gt; | awk &lt;span class=&quot;string&quot;&gt;'{for (i=2; i&amp;lt;NF; i++) print $i}'&lt;/span&gt;)
  [ -z &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$keys&lt;/span&gt;&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;

  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$keys&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
    redis-cli -h &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; -p &lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt; EXPIRE &lt;span class=&quot;variable&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;a href=&quot;http://redis.io/commands/scan&quot; target=&quot;_blank&quot;&gt;SCAN command&lt;/a&gt; returns a cursor, followed by a list of keys. Or it might return no keys at all. So the script has to separate the keys and cursor from the output (lines 19-22). For each key, we run an expire command (lines 25-27).&lt;/p&gt;
&lt;p&gt;After the first set of keys, we return to the start of the loop and call the scan command again, this time using the cursor that was returned last time. In this way, Redis knows where you were up to and carries on where it left off.&lt;/p&gt;
&lt;p&gt;Redis returns a cursor of 0 when it has iterated over all keys, so when this happens the while loop ends.&lt;/p&gt;
&lt;h2 id=&quot;it-s-a-bit-slow-&quot;&gt;It&amp;#39;s a bit slow...&lt;/h2&gt;
&lt;p&gt;While it worked well, it processed at a rate of about 100 keys per second. With a very small database, this might be fine, and left to its own devices, it would have taken just under 3 hours in our case. I figured we could do better.&lt;/p&gt;
&lt;p&gt;Redis supports server-side scripting in the lua language. Lua is not a language I&amp;#39;ve used much before, but its syntax seems fairly logical.&lt;/p&gt;
&lt;p&gt;To call a server-side script, you basically pass it to the redis EVAL command, along with the number of keys, the keys themselves, and any other arguments. A basic example (stolen from the &lt;a href=&quot;http://redis.io/commands/EVAL&quot; target=&quot;_blank&quot;&gt;redis documentation&lt;/a&gt;), looks like:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;bash&quot;&gt;&amp;gt; &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&quot;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; key1 key2 first second
&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;key1&quot;&lt;/span&gt;
&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;key2&quot;&lt;/span&gt;
&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;
&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&quot;second&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thus if myscript.lua contained:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;lua&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {KEYS[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],KEYS[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;],ARGV[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],ARGV[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could call it with:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;bash&quot;&gt;redis-cli EVAL &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(cat ./myscript.lua)&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; key1 key2 first second
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(quotes around the cat command are essential)&lt;/p&gt;
&lt;p&gt;So building on my first attempt, I modified the bash script to call &lt;a href=&quot;http://redis.io/commands/EVAL&quot; target=&quot;_blank&quot;&gt;EVAL&lt;/a&gt; with a lua script instead:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/bash
&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$#&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ]
&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Expire keys from Redis matching a pattern using SCAN &amp;amp; EXPIRE&quot;&lt;/span&gt;
  &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Usage: &lt;span class=&quot;variable&quot;&gt;$0&lt;/span&gt; &amp;lt;host&amp;gt; &amp;lt;port&amp;gt; &amp;lt;pattern&amp;gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;

cursor=-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
keys=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; [[ &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-ne&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ]]; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-eq&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ]]
  &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;
    cursor=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;

  reply=$(redis-cli -h &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; -p &lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt; SCAN &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; MATCH &lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt; COUNT &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)
  cursor=$(expr &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$reply&lt;/span&gt;&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;'\([0-9]*[0-9 ]\)'&lt;/span&gt;)
  &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Cursor: &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt;&quot;&lt;/span&gt;

  keys=$(&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$reply&lt;/span&gt; | awk &lt;span class=&quot;string&quot;&gt;'{for (i=2; i&amp;lt;NF; i++) print $i}'&lt;/span&gt;)
  [ -z &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$keys&lt;/span&gt;&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;

  keya=( &lt;span class=&quot;variable&quot;&gt;$keys&lt;/span&gt; )
  count=$(&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;${#keya[@]}&lt;/span&gt;)
  redis-cli -h &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; -p &lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt; EVAL &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(cat expire.lua)&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$keys&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/al4/redis-expire-scripts/blob/master/expire-lua.sh&quot; target=&quot;_blank&quot;&gt;github link&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;It requires some extra logic because we need to know the number of keys we&amp;#39;re operating on, so we can feed that to the EVAL command. And scan doesn&amp;#39;t return a consistent number of keys. Thus I convert keys to an array, and count the number of elements. I also added the COUNT parameter to the SCAN command, to increase the number of keys we operated on at a time. The default of 10 doesn&amp;#39;t matter when you&amp;#39;re calling redis-cli for each key, but when each scan is only one eval, multiplying the count by 10 means doing 1/10th the number of round-trips.&lt;/p&gt;
&lt;p&gt;&lt;h2&gt;The Lua script&lt;/h2&gt;
The lua script has to iterate over the keys given, check whether the TTL is -1 and if so, run EXPIRE. You could also just run expire anyway if you don&amp;#39;t care about resetting all ttls.&lt;/p&gt;
&lt;p&gt;Redis stores the keys given in the var KEYS, and arguments in ARGS, but we don&amp;#39;t care about ARGS in this case. So we can just iterate over KEYS:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;lua&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt; modified={};

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i,k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;ipairs&lt;/span&gt;(KEYS) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt; ttl=redis.call(&lt;span class=&quot;string&quot;&gt;'ttl'&lt;/span&gt;, k);
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ttl == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;
        redis.call(&lt;span class=&quot;string&quot;&gt;'EXPIRE'&lt;/span&gt;, k, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;)
        modified[#modified + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = k;
    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; modified;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/al4/redis-expire-scripts/blob/master/expire.lua&quot; target=&quot;_blank&quot;&gt;github link&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I then called the bash script with (ensure the lua script is in the same directory):&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;bash&quot;&gt;bash ./expire-lua.sh &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6379&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'flashMap_*'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where flashMap_* is the prefix we&amp;#39;re searching on.&lt;/p&gt;
&lt;p&gt;With this simple lua script, and operating on blocks of keys courtesy of SCAN, we greatly reduced the number of round trips to redis and processed the keyspace much faster than before (about 3500 keys per second in this case). Or in practical terms, what would have taken 3 hours took less than a minute.&lt;/p&gt;
&lt;p&gt;You can modify the &amp;quot;block size&amp;quot; (the number of keys processed on each EVAL), by altering the input to the SCAN command - the last parameter is a hint to tell redis how many keys it should return each time. e.g. to process 500 keys at a time you could change the line to:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;bash&quot;&gt;reply=$(redis-cli -h &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; -p &lt;span class=&quot;variable&quot;&gt;$2&lt;/span&gt; SCAN &lt;span class=&quot;variable&quot;&gt;$cursor&lt;/span&gt; MATCH &lt;span class=&quot;variable&quot;&gt;$3&lt;/span&gt; COUNT &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first few scans might not return anything close to your hint. With a value of 100 I noticed it took quite a few iterations before it started returning large blocks, but it quickly ramps up.&lt;/p&gt;
&lt;p&gt;Some refinements could be made here. We could combine the shell and lua scripts into one file, and take the block size and TTL to be set as parameters. As it is, usage is a little cumbersome.&lt;/p&gt;
&lt;p&gt;Please feel free to fork and improve, and if you do, post the link in the comments.&lt;/p&gt;
&lt;p&gt;As a final word, I would suggest you don&amp;#39;t use block sizes that are too large. Firstly, you might run into the limits of the number of arguments that lua can process, and secondly, lua scripts in redis are atomic operations and &lt;em&gt;will&lt;/em&gt; block while they run. Thus, you should only run lua scripts that are very fast. In my case, a block size of 100 offered great performance without blocking anything for too long.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html';
		window.disqus_identifier = '2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts';
		window.disqus_title = 'Safely running bulk operations on Redis with lua scripts';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;active&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Cant see the html for the boxes</title>
			<link href="http://www.gumtree.com/devteam//2014-06-23-Cant-see-the-html-for-the-boxes.html"/>
			<updated>2014-06-23T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-06-23-Cant-see-the-html-for-the-boxes.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Cant see the html for the boxes - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Jun 23rd, 2014&lt;/span&gt;
				&lt;h1&gt;Cant see the html for the boxes&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Paul Rudge&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-06-23-Cant-see-the-html-for-the-boxes.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-06-23-Cant-see-the-html-for-the-boxes.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;One of the things I am most passionate about is CSS Architecture, and our latest
project is making a lot of use of the concepts in &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/stubbornella/oocss/tree/master/oocss&quot;&gt;OOCSS&lt;/a&gt; (Object Orientated CSS)
with a little bit of &lt;a target=&quot;_blank&quot; href=&quot;http://smacss.com/&quot;&gt;SMACSS&lt;/a&gt; (Scalable modular architecture in CSS) thrown in for good measure. It&amp;#39;s been
an amazing experience to work with these 2 ideologies and it has really helped to boost the quality of our code, but one area that
has begin to suffer is our automated tests, more precisely the css selectors within our selenium tests.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The main idea behind concepts like OOCSS is to make your CSS more scalable, easier to maintain and easier to work with. OOCSS has 2 main principles:&lt;/p&gt;
&lt;h3 id=&quot;separate-structure-and-skin&quot;&gt;Separate structure and skin&lt;/h3&gt;
&lt;p&gt;This means to define repeating visual features (like background and border styles) as separate “skins” that you can 
mix-and-match with your various objects to achieve a large amount of visual variety without much code. See the module 
object and its skins.&lt;/p&gt;
&lt;h3 id=&quot;separate-container-and-content&quot;&gt;Separate container and content&lt;/h3&gt;
&lt;p&gt;Essentially, this means “rarely use location-dependent styles”. An object should look the same no matter where you put it. 
So instead of styling a specific &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; with &lt;code&gt;.myObject h2 {...}&lt;/code&gt;, create and apply a class that describes the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; 
in question, like &lt;code&gt;&amp;lt;h2 class=&amp;quot;category&amp;quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So how does this cause us problems, first we need to go into how we normally target things using selenium:&lt;/p&gt;
&lt;h2 id=&quot;selenium&quot;&gt;Selenium&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s start with a simple example, on our item pages we generally will have an area that contains seller information
and call to actions.&lt;/p&gt;
&lt;p&gt;Pre OOCSS often you would see markup like the following:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;sellerprofile&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Paul Rudge&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;reply-button&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
       More about this seller
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The selenium targeting to get all the elements in this area would then be the same as what we would be using in the css to style it, this direct relationship makes it very
easy to write the tests:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;class&quot;&gt;.sellerprofile&lt;/span&gt;
&lt;span class=&quot;class&quot;&gt;.sellerprofile&lt;/span&gt; &amp;gt; &lt;span class=&quot;tag&quot;&gt;h2&lt;/span&gt;
&lt;span class=&quot;class&quot;&gt;.sellerprofile&lt;/span&gt; &amp;gt; &lt;span class=&quot;tag&quot;&gt;reply-button&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When we start looking at this from an OOCSS prespective taking into account the design of the rest of the page we start to notice
that there are a lot of reusable patterns that we can start making use of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The design of the seller profile box as a container is repeated a lot, we can create a new reusable style/component called .box&lt;/li&gt;
&lt;li&gt;The h2 style is always the same in every .box, but does not look the same as our default h2, so we create .box-title&lt;/li&gt;
&lt;li&gt;The button is the main button we use everywhere, so we create a new style/component .btn-primary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This changes the markup to look like this:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box-title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Paul Rudge&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
       More about this seller
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And here is where the problem emerges, all of a sudden the user profile box is marked up with reusable styles, which could appear
multiple times on the same page, simply targeting &lt;code&gt;.box &amp;gt; .box-title&lt;/code&gt; really is not specific enough for our test to
be useful. The test would not be able to tell the difference between this and a completely different area of the site using the same
styles.&lt;/p&gt;
&lt;p&gt;At this point we could resort to xpath or an xpath like css selector allowing us to very specifically pick 
the element we wanted:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;erlang&quot;&gt;//html/body/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]/main/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]/section[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]/h2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The problem with this, apart from the fact it&amp;#39;s difficult to read, is now our test is very tightly coupled with our html code, any small change to the structure, any
variation in layout would cause the test to fail. Every little change to the code requires a high level of test maintenance,
it becomes too much of an effort to keep tests passing and you stop writing new ones, stop maintaining older ones.&lt;/p&gt;
&lt;p&gt;Really we want to be able to move components around a page quickly and easily, reorder how they appear
and have a test that is clever enough to understand the changes like we would have got pre the days of box.&lt;/p&gt;
&lt;p&gt;We could at this point decide the easiest solution would be to add something to the element to allow us to hook onto it.
Why not just re-add the reply-panel class or an id? &lt;a target=&quot;_blank&quot; href=&quot;http://csswizardry.com/&quot;&gt;Harry Roberts&lt;/a&gt; suggested something very
similar when discussing &lt;a target=&quot;_blank&quot; href=&quot;http://csswizardry.com/2014/03/naming-ui-components-in-oocss/&quot;&gt;Adding the semantics back into OOCSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This involved adding &lt;code&gt;data-ui-component=&amp;quot;seller-profile&amp;quot;&lt;/code&gt; in place of where we used to have the seller profile class. We can
then use this to target the elements within this component.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-ui-component&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;seller-profile&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box-title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Paul Rudge&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
       More about this seller
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this does solve the problem, and in some circumstances might be the best solution, it felt wrong in some ways to 
add markup with the sole purpose of being hooks for selenium tests.&lt;/p&gt;
&lt;p&gt;This left us with a difficult challenge to solve, how to markup our code so that we can target it with tests without having
to always revert to adding code specifically for the tests.&lt;/p&gt;
&lt;h2 id=&quot;our-solution&quot;&gt;Our solution&lt;/h2&gt;
&lt;p&gt;So what kind of things do we need to do with our selenium tests, after looking through our existing tests we broke it down 
to the following 3 areas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read some data on the page&lt;/li&gt;
&lt;li&gt;Page navigation and interactive elements &lt;/li&gt;
&lt;li&gt;Inputting data into forms&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking at the first requirement we realised we needed a way to be more descriptive with our data. The first
thing that came to mind was can micro data help in this situation and that led to the idea of using &lt;a target=&quot;_blank&quot; href=&quot;www.schema.org&quot;&gt;schema.org&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;schema-org&quot;&gt;Schema.org&lt;/h3&gt;
&lt;p&gt;So what is &lt;a target=&quot;_blank&quot; href=&quot;www.schema.org&quot;&gt;Schema.org&lt;/a&gt;? It describes itself in the following way:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;This site provides a collection of schemas that webmasters can use to markup HTML pages in ways recognized by major search providers, 
and that can also be used for structured data interoperability (e.g. in JSON). Search engines including Bing, Google, Yahoo! and Yandex 
rely on this markup to improve the display of search results, making it easier for people to find the right Web pages.&lt;/p&gt;
&lt;p&gt;Many sites are generated from structured data, which is often stored in databases. When this data is formatted into HTML, it becomes 
very difficult to recover the original structured data. Many applications, especially search engines, can benefit greatly from direct 
access to this structured data. On-page markup enables search engines to understand the information on web pages and provide richer 
search results in order to make it easier for users to find relevant information on the web. Markup can also enable new tools and 
applications that make use of the structure.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is essentially a way to markup your html that exposes the original data model that produced it. &lt;/p&gt;
&lt;p&gt;This not only allows search engines to understand the data on your pages better but hopefully soon will do the same 
for screen readers. &lt;/p&gt;
&lt;p&gt;This is why some results in google will have things like star ratings or how when searching for &amp;quot;my neighbour totoro&amp;quot; you
get so much more information in the right hand side panel. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./schemaSelenium/googleSchema.jpg&quot; alt=&quot;Example of schema being used on google search&quot; title=&quot;Test page of the sample app&quot;&gt;&lt;/p&gt;
&lt;p&gt;So what does our markup look like after applying schema:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemtype&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schema.org/Person&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box-title&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;name&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Paul Rudge&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
       More about this seller
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the tests:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/Person&quot;]&lt;/span&gt;
&lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/Person&quot;]&lt;/span&gt; &lt;span class=&quot;attr_selector&quot;&gt;[itemprop=&quot;name&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your selector now actually starts to describe exactly what it is you are trying to do, the test becomes very readable and you are
accessing the data in a way that should make the test far more stable. Any rearranging of this page should have no effect on
the tests ability to check this component for the users name.&lt;/p&gt;
&lt;p&gt;What about interaction, can schema.org help us with this? In the case of our example yes:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemtype&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schema.org/Person&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;url&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
       More about this seller
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What about other links that could appear within a seller profile box, let&amp;#39;s try a reply link.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;box&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemtype&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schema.org/Person&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;potentialAction&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemtype&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://schema.org/ReplyAction&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;url&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
           Reply
        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example has some flaws, it either involves one very long line or involves adding an additional element to add the 
schema to. Now you may already have structure in place that allows for this but it&amp;#39;s not necessarily going to be the case.
When it comes to this level of targetting it might be worth looking at the value your getting from the schema itself in
this location and if the test could be simplified by just using seleniums abilty to target items based on containing text.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/Person&quot;]&lt;/span&gt; &lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/ReplyAction&quot;]&lt;/span&gt; &lt;span class=&quot;attr_selector&quot;&gt;[itemprop=&quot;url&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or since you are already filtered:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/Person&quot;]&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;attr_selector&quot;&gt;[contains(text(),'Reply')]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Schema won&amp;#39;t always be able to solve your problem, the things you want to interact with on the page, these could be items
that are simply not data driven like main navigation or they could be things that are not currently covered by schema.org
as it stands.&lt;/p&gt;
&lt;p&gt;For the things that are not currently in schema.org there is an option, &lt;a target=&quot;_blank&quot; href=&quot;http://schema.org/docs/extension.html&quot;&gt;extending schema&lt;/a&gt;.
Essentially you can add new item types and item properties simply by following the naming convention, and any that gain
popularity could end up becoming part of the official spec.&lt;/p&gt;
&lt;p&gt;We could for example extend the &lt;code&gt;Person&lt;/code&gt; schema to have the new property &lt;code&gt;twitterAccount&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/Person&quot;]&lt;/span&gt; &lt;span class=&quot;attr_selector&quot;&gt;[itemprop=&quot;twitterAccount&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or we could add a completely new item type where we want something inbetween a &lt;code&gt;Person&lt;/code&gt; and an &lt;code&gt;Organisation&lt;/code&gt; and create
&lt;code&gt;PrivateSeller&lt;/code&gt;, which we can then use more oganisation style props on such as &lt;code&gt;product&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;attr_selector&quot;&gt;[itemtype=&quot;http://schema.org/Person/PrivateSeller&quot;]&lt;/span&gt; &lt;span class=&quot;attr_selector&quot;&gt;[itemprop=&quot;product&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;what-about-forms&quot;&gt;What about forms&lt;/h2&gt;
&lt;p&gt;Well it turns out the final problem is simple, we already do it, it&amp;#39;s already part of the html spec. Our rules around
forms is simply the following 2 rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unique name on all forms&lt;/li&gt;
&lt;li&gt;Unique name per form on all form elements&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;unique-form-name&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;number&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;unique-input-name&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;So what benefits to we take away from this as a technique:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have made your tests more descriptive&lt;/li&gt;
&lt;li&gt;You have not added markup just for tests&lt;/li&gt;
&lt;li&gt;Tests should start breaking for test failures, not redesigns&lt;/li&gt;
&lt;li&gt;Tests are now affected by data and interaction rather than look and feel&lt;/li&gt;
&lt;li&gt;As it grows you get accessibility benefits for free&lt;/li&gt;
&lt;li&gt;Your SEO team are gonna love you&lt;/li&gt;
&lt;li&gt;You are gonna look great on Google search!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Though you do have the following downsides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You may be required to add more html to your markup&lt;/li&gt;
&lt;li&gt;Some of your html tags will start to get a little heavy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is still a work in progress for us as a technique but is so far proving to be successful.&lt;/p&gt;
&lt;p&gt;It would be great to hear feedback on this so we can continue to develop and judge this as a practice.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-06-23-Cant-see-the-html-for-the-boxes.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-06-23-Cant-see-the-html-for-the-boxes.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-06-23-Cant-see-the-html-for-the-boxes.html';
		window.disqus_identifier = '2014-06-23-Cant-see-the-html-for-the-boxes';
		window.disqus_title = 'Cant see the html for the boxes';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Meetup: Building a Developer Centred Company Culture</title>
			<link href="http://www.gumtree.com/devteam//2014-06-19-building-developer-centred-company-culture.html"/>
			<updated>2014-06-19T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-06-19-building-developer-centred-company-culture.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Meetup: Building a Developer Centred Company Culture - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Jun 19th, 2014&lt;/span&gt;
				&lt;h1&gt;Meetup: Building a Developer Centred Company Culture&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-06-19-building-developer-centred-company-culture.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-06-19-building-developer-centred-company-culture.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Today I attended a meetup in &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/stackcareers&quot;&gt;StackCareers&lt;/a&gt; office in London. I&amp;#39;ve attended a few meetups (less than I&amp;#39;d like!) since I came to the City and joined Gumtree, but I consider this one to be one of the best. The subject was &lt;a target=&quot;_blank&quot; href=&quot;http://londontechnologyweek.co.uk/2014/06/building-developer-centred-company-culture/&quot;&gt;Building a Developer Centred Company Culture&lt;/a&gt;, which is of particular interest to me, but the speakers did good presentations and the ideas they shared captured my attention more than other events I&amp;#39;ve attended.&lt;/p&gt;
&lt;p&gt;I took notes during the talks and I&amp;#39;d like to share a summary of the main points, as it is a relevant subject for many developers.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;First of all a disclaimer: the text below tries to be a raw summary of what I understood. Any errors are mine and of my transcription. That said, I hope I could capture the more relevant parts.&lt;/p&gt;
&lt;p&gt;There were three speakers so I created a section per speaker: the heading of the section explains who the speaker was and the content the main points of their presentation.&lt;/p&gt;
&lt;h2 id=&quot;emre-baran-cto-qubit&quot;&gt;Emre Baran - CTO, Qubit&lt;/h2&gt;
&lt;p&gt;The first speaker was Emre Baran, who over the course of working 4 years at Google and 5 years as consultant with some big companies, has learned a lot about company culture.&lt;/p&gt;
&lt;p&gt;His first rule is that he doesn&amp;#39;t hire developers, he hires engineers. The difference is the approach: developers do what they are told, engineers are challenged with a problem and find a way to solve it. The culture of engineering is a culture of long term, where he invests in the future of the engineer, helping them to grow, and that effort and selection bias is repaid. As a consequence, he doesn&amp;#39;t deal with contractors as you can&amp;#39;t invest in the long term growth of a contractor.&lt;/p&gt;
&lt;p&gt;An important part of this culture is a very careful hiring process, with a low percentage of hires relative to applicants. The culture of hire fast and fire fast is contrary to long term growth, but to find a good fit for the team and their culture, they take time in the hiring process, which is (in his own words) slow and careful.&lt;/p&gt;
&lt;p&gt;They look for self-starters, in fact the first question to a prospective applicant is always: &amp;quot;Have you ever built something, besides school tasks or work assignments?&amp;quot; They look for self starters, doers, people that will own and drive their own projects. Another question asked during the selection process, this time to people who interview a candidate, is: &amp;quot;Would you like to report to him in 6 months?&amp;quot;. &lt;/p&gt;
&lt;p&gt;Talking about engineering management, Emre describes it as anarchy. Technology is anarchy, prone to constant change (new releases, tools, frameworks, innovation). They acknowledge that and are not averse to change, they embrace it and adapt. This makes them faster. &lt;/p&gt;
&lt;p&gt;As an example, they are using &lt;a target=&quot;_blank&quot; href=&quot;http://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; in production environment. It&amp;#39;s a scary approach in the short term, but it pays off big in the long term. It enables teams to have and own new ideas, removes constraints and fear. In the company, they consider that a happy engineer means a happy product. They know they will break things, it&amp;#39;s normal, they just work with that in mind.&lt;/p&gt;
&lt;p&gt;Another particularity of his company is that engineers don&amp;#39;t report to a team lead on any HR related matter, they report directly to an engineering manager which has regular 1-on-1 with the engineers and works on the feedback received. This separation of powers helps people to speak their minds.&lt;/p&gt;
&lt;p&gt;The final topic was frugality, something Emre believes VC don&amp;#39;t promote. He mentioned that having an engineer maintaining legacy code 10% of the time means that after 10 projects, the engineer is maintaining legacy 100% of the time - a write off. To avoid this, they have a 0 tech-debt practice and 0 QA - engineers own the code and test it. The company has only 1 SiteOps person, who spends most of the time benchmarking new stuff. They achieve this via automation, they choose to be frugal and they innovate to stay that way, automating everything possible and reducing the need to waste time on those processes and getting more time for new features.&lt;/p&gt;
&lt;p&gt;As a summary he mentioned that investing in engineers, in people, pays off.&lt;/p&gt;
&lt;p&gt;There were a few questions at the end:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;About compensation: he explained they give salary (based on experience and skills), bonus (one based on company performance, another on individual performance) and equity&lt;/li&gt;
&lt;li&gt;About communicating their culture: Emre acknowledged it&amp;#39;s a challenge and they have not done much until now, but they want to improve this area due to changes coming with their relation to third party developers&lt;/li&gt;
&lt;li&gt;On the reporting to the engineering manager: he clarified that this is only for HR issues and affects 26 engineers, and it may have to be slightly modified (more layers) if they grow much more&lt;/li&gt;
&lt;li&gt;The interview process was summarised as 6 steps: head hunting and selection of candidates, an initial phone interview, and a second phone interview with a senior member to check for culture fit, next there is a technical challenge for the applicant followed by an on-site interview with 2 or 3 members. The last step is a meeting to ensure everybody involved agrees with the hire.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that was it. Short but interesting talk that gave a glimpse on the internals of a modern company.&lt;/p&gt;
&lt;h2 id=&quot;douglas-squirrel-cto-secretsales-com-osper-com&quot;&gt;Douglas Squirrel - CTO, SecretSales.com/Osper.com&lt;/h2&gt;
&lt;p&gt;Douglas started by announcing he is leaving Secret Sales and joining Osper.com. He explained a bit about his professional history and explained he thinks there are 3 key characteristics to a good culture.&lt;/p&gt;
&lt;p&gt;The first is &amp;quot;being humble&amp;quot;. He told us how when he joined as CTO he was taking some tasks to free developers time and allow them to focus on what was important. The idea is that no job is beneath you, if there is an issue to solve (and that has to be solved, an important detail) and you can do it, you do it. Even if it means cleaning the bathroom before a visit of an important client (a situation he mentioned). Douglas also said that people must have all the information, even about uncomfortable things like the areas where they need clear improvement. &lt;/p&gt;
&lt;p&gt;The second characteristic, and key to attracting people, is a &amp;quot;secret sauce&amp;quot;. This means something different and unique that nobody else does. As an example, he explained that in Tim Group they were doing pair programming and continuous integration back in 2005 when this was not so popular. In Secret Sales they were doing continuous deployment (5 times a day) in 2008. In his new company the sauce is Microservices.&lt;/p&gt;
&lt;p&gt;There was a small technical detour when he spoke about Microservices and how they go to the level of releasing even components (like a report) several times a day. But not only releasing, also killing them even if they have been alive only for one day. Douglas mentioned that in this environment you don&amp;#39;t want many unit tests, you rely more on A/B testing, metrics and monitoring to avoid problems in your application.&lt;/p&gt;
&lt;p&gt;The third and last characteristic is to &lt;em&gt;not&lt;/em&gt; create a developer centric culture. This seemed like a contradiction with the theme of the day, but he explained that if your company doesn&amp;#39;t have a full technology focus, it doesn&amp;#39;t make sense to focus only on that. People who runs the business must understand why we do what we do, and business issues must guide the decisions. If something is not a problem for the business, however technically interesting or challenging it may be, just don&amp;#39;t do it.&lt;/p&gt;
&lt;p&gt;As an example he mentioned pair programming: in an environment like finance codebase where an error can cost millions, pair programming is a business need. When doing a non critical component, it is not necessary. In general, Douglas considers overselling technology-related stuff to be bad in the long term. It&amp;#39;s better to closely integrate technology and business. &lt;/p&gt;
&lt;p&gt;There were no questions (it was pizza time, people were probably hungry). Probably the talk I liked the most as it gave an uncommon point of view.&lt;/p&gt;
&lt;h2 id=&quot;joel-spolsky-ceo-and-co-founder-stack-overflow&quot;&gt;Joel Spolsky - CEO and Co-Founder, Stack Overflow&lt;/h2&gt;
&lt;p&gt;The last speaker was Joel Spolsky, who doesn&amp;#39;t need much of an introduction in the developer world. He started by mentioning that the phrase &amp;quot;culture fit&amp;quot; is hard to explain, and too often is used as a reason to not hire somebody. &lt;/p&gt;
&lt;p&gt;Joel explained that the motivation to found Fog Creek was the lack of a place that put developers first in New York City. Microsoft, Facebook and many other successful companies have succeeded due to the quality of their staff. So he founded a company with no product in mind, where a developer is not an appliance but the key piece of the company. The have been asking themselves again and again &amp;quot;How to make this a great place to work for a developer?&amp;quot; and they act to keep it like that.&lt;/p&gt;
&lt;p&gt;He also mentioned that they focus on developers even if the change is not optimal for non-developers. This strategy has borne fruit. &lt;/p&gt;
&lt;p&gt;For example, in the early days, they gave every developer private offices. It is justified given how hard is to recover from an interruption, which equates to wasted time and productivity. Giving an office reduces interruptions and promotes more productive ways of work (asynchronous communication, looking for the answer yourself, etc). It has a downside though, there is a certain lack of flexibility related to adding more developers to the team.&lt;/p&gt;
&lt;p&gt;The solution to that lack of flexibility has been remote working. For years Joel thought it was an inferior option, given all the prominent outsourcing failures in the industry. But, as it happens, the failures were due to the way remote working was approached. You can&amp;#39;t consider remote working to be a black box, this will fail. The open source community had been showing (for years) that it is possible to develop complex software remotely. We just had to learn from them.&lt;/p&gt;
&lt;p&gt;Joel explains the way they work in Stack Overflow: they are on Google Hangouts all the time, they have chat rooms, they require some overlap between developers (for meeting purposes, everybody is online during New York afternoon time), and they are extremely picky on audio quality, to the point of shipping $XXX headsets to developers to ensure proper sound quality. All these together make the developers &amp;quot;live in the cloud&amp;quot;, on a virtual environment that is (work wise) no different from an office.&lt;/p&gt;
&lt;p&gt;Meetings are one major concern for managers implementing remote working. He said that he wanted to talk about pro and cons, but he could only find pros. Developers have a computer accessible during the meeting, they can lurk while getting things done if the subject is not relevant and side-comments don&amp;#39;t interrupt the flow of the meeting. The key part is to avoid conference rooms, as they remove the benefits of a real remote meeting. And this goes back to the need of private offices: you don&amp;#39;t want a developer speaking to interrupt the flow of another developer in the same room.&lt;/p&gt;
&lt;p&gt;They also organise social face-to-face meetings every 6 or 12 months, to build a stronger sense of community between the workers.&lt;/p&gt;
&lt;p&gt;One benefit of remote workers has been finding talent. Joel explained how they had an issue with some legacy code (Fog Creek) as it was hard to find people in New York that wanted to work with a 14-year old codebase. Once they went remote, suddenly they found a pool of senior people with very high skills that were ok with working in legacy code in exchange of getting the freedom remote working provides. The quality of the developers they can hire has increased substantially.&lt;/p&gt;
&lt;p&gt;After that there were some questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;About how does he measure productivity: the answer was that he knows it when he sees it. Joel explained how supervision of a remote worker is a legitimate fear, but it&amp;#39;s much easier to judge when you don&amp;#39;t see the person but the effects of their work (commits, delivery, etc). In the end, it is all about judgement, as any measurement can be gamed (and good developers are great at gaming stats)&lt;/li&gt;
&lt;li&gt;On how are tasks assigned to remote workers: he explained that everything was quite ad hoc. Some teams lean more towards Scrum, other go other paths. But they try to avoid real code ownership, as ownership implies ego, and ego is bad for development.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A good talk with a good view on how Stack Overflow operates.&lt;/p&gt;
&lt;h2 id=&quot;my-conclusions&quot;&gt;My Conclusions&lt;/h2&gt;
&lt;p&gt;Recently, there has been a surge in talks about engineering culture, or at least it seems so. Things like this meetup or the &lt;a target=&quot;_blank&quot; href=&quot;http://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/&quot;&gt;Spotify&lt;/a&gt; engineering culture video are trying to make developers aware of how they work internally.&lt;/p&gt;
&lt;p&gt;When you think about it, the reason seems obvious: good developers are hard to hire, and showing an appealing culture will make them more eager to join the company. But if you go with this initial impression, it&amp;#39;s telling that only good companies have good developer cultures. As the speakers mentioned (all of them), there is a direct correlation between the success of a company that relies on technology at its core and how happy their developers are. And happiness comes from a good culture that cares about the employees.&lt;/p&gt;
&lt;p&gt;So it&amp;#39;s not just a consequence of &amp;quot;the IT Bubble&amp;quot; or VC money turning developers into spoiled hipsters. It&amp;#39;s a business decision with business consequences, very important ones.  But that doesn&amp;#39;t need to be expensive: a developer may not be happier for having an expensive chair, maybe they just need a more flexible schedule. The key is to understand what they need, and act on it as if your companies depends on it. It does. &lt;/p&gt;
&lt;p&gt;Now I should probably say something about Gumtree&amp;#39;s culture. But we are busy releasing stuff before getting ready for the summer party tomorrow at &lt;a target=&quot;_blank&quot; href=&quot;http://www.ascot.co.uk/&quot;&gt;Royal Ascot&lt;/a&gt;. Is that enough? ;)&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-06-19-building-developer-centred-company-culture.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-06-19-building-developer-centred-company-culture.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-06-19-building-developer-centred-company-culture.html';
		window.disqus_identifier = '2014-06-19-building-developer-centred-company-culture';
		window.disqus_title = 'Meetup: Building a Developer Centred Company Culture';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Enabling MongoDB replica set</title>
			<link href="http://www.gumtree.com/devteam//2014-06-04-enabling-mongodb-replica-set.html"/>
			<updated>2014-06-04T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-06-04-enabling-mongodb-replica-set.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Enabling MongoDB replica set - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Jun 4th, 2014&lt;/span&gt;
				&lt;h1&gt;Enabling MongoDB replica set&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Javier Rivas Rodriguez&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-06-04-enabling-mongodb-replica-set.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-06-04-enabling-mongodb-replica-set.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Lately some of us have been working on a few projects with MongoDB. 
In this article, I am going to give some tips on how to enable replicas from a MongoDB instance in a Java web application. &lt;/p&gt;
&lt;p&gt;In this example, I will be using the module &lt;a target=&quot;_blank&quot; href=&quot;http://projects.spring.io/spring-data-mongodb/&quot;&gt;Spring Data Mongo&lt;/a&gt; to help me to communicate from the application to the MongoDB database. 
&lt;!-- Read more --&gt;
As you know in Spring you can declare Application Contexts based on an XML config file or a Java implementation config class. Here I am going to give an example on how to do both, as the approach changes slightly depending on the Application Context strategy used for implementation.&lt;/p&gt;
&lt;p&gt;As usual, &lt;a target=&quot;_blank&quot; href=&quot;http://spring.io/guides/tutorials/data/&quot;&gt;Spring documentation&lt;/a&gt; has been extremely helpful, so I would recommend having an in depth look at some of the concepts discussed here for a better understanding.&lt;/p&gt;
&lt;h2 id=&quot;problem-context&quot;&gt;Problem Context&lt;/h2&gt;
&lt;p&gt;I have decided to write this short guide since I have not found much online, related to the differences in implementation between an XML based Application Context and a Java Class based Application Context in regards to enabling replica hosts in order to implement a failover strategy.&lt;/p&gt;
&lt;p&gt;If you are happy with having only one MongoDB instance on your production system, then these recipes do not apply well, so feel free to leave now. However, if your DevOps team comes to you saying, “Eh, you! developer! - you know how they talk - we need several instances of that MongoDB database you are using, since we want to be able to replicate the data and enable a failover strategy!” then you are in the right place, please stay.&lt;/p&gt;
&lt;p&gt;For those who do not know &lt;em&gt;what&lt;/em&gt; I am talking about, generally the MongoDB failover strategy consists of pinging all the hosts specified in the mongo bean definition in order to determine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Which one is the primary host (the one receiving the write operations) and whether it is up and running.&lt;/li&gt;
&lt;li&gt;Which ones are the replicas (the ones receiving read operations and replicating the primary) and whether they are up and running.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If something unexpected happens with the primary host, the connections with the repository can gracefully failover to any of the replica hosts specified, renaming a new primary between all the replica candidates.&lt;/p&gt;
&lt;p&gt;The concept is not complex to understand but if you want more information about the way replication works on MongoDB I recommend this &lt;a target=&quot;_blank&quot; href=&quot;http://docs.mongodb.org/master/MongoDB-replication-guide.pdf&quot;&gt;article&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;problem-solution&quot;&gt;Problem Solution&lt;/h2&gt;
&lt;h3 id=&quot;xml-configuration&quot;&gt;XML Configuration&lt;/h3&gt;
&lt;p&gt;So, let’s say our  config file looks like this:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;beans&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;xmlns&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;

&lt;span class=&quot;attribute&quot;&gt;xmlns:xsi&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
       &lt;span class=&quot;attribute&quot;&gt;xmlns:mongo&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/data/mongo&quot;&lt;/span&gt;
       &lt;span class=&quot;attribute&quot;&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/data/mongo
                           http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mongo:mongo&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;mongo&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;replica-set&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;localhost:27017,localhost:27018,192.156.93:27017&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;
        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;mongo:options
&lt;/span&gt;                &lt;span class=&quot;attribute&quot;&gt;connections-per-host&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;20&quot;&lt;/span&gt;
                &lt;span class=&quot;attribute&quot;&gt;threads-allowed-to-block-for-connection-multiplier&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;5&quot;&lt;/span&gt;
                &lt;span class=&quot;attribute&quot;&gt;slave-ok&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;true&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;mongo:mongo&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Two things to notice here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The mandatory properties host and port declared for a single MongoDB instance disappear. We need to add the attribute replica-set instead.&lt;/li&gt;
&lt;li&gt;We also need to specify the host followed by the port separated by a colon. We add the secondary hosts separated by commas.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that is really it! We have our MongoDB instance ready to test the replication system.&lt;/p&gt;
&lt;h3 id=&quot;java-class-configuration&quot;&gt;Java Class Configuration&lt;/h3&gt;
&lt;p&gt;So let’s say our Java Config class looks like this:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;annotation&quot;&gt;@EnableMongoRepositories&lt;/span&gt;({&lt;span class=&quot;string&quot;&gt;&quot;com.foo.repository&quot;&lt;/span&gt;})
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MongoRepositoryConfig&lt;/span&gt;&lt;/span&gt;{

    &lt;span class=&quot;annotation&quot;&gt;@Value&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;localhost:27017, localhost:27018&quot;&lt;/span&gt;)
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ServerAddress[] serverAddressList;

&lt;span class=&quot;annotation&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Mongo mongo() &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception {
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Mongo(Arrays.asList(serverAddressList));
    }

&lt;span class=&quot;annotation&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; CustomEditorConfigurer customEditorConfigurer(){
        CustomEditorConfigurer configurer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CustomEditorConfigurer();
        configurer.setPropertyEditorRegistrars(
                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PropertyEditorRegistrar[]{&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerAddressPropertyEditorRegistrar()});
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; configurer;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will also need the class:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.data.mongodb.config;

&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerAddressPropertyEditorRegistrar&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PropertyEditorRegistrar&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; registerCustomEditors(PropertyEditorRegistry registry) {
        registry.registerCustomEditor(ServerAddress[].&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerAddressPropertyEditor&lt;/span&gt;());
    }
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a bit more complex than the XML config, so there are several things to take note of here.&lt;/p&gt;
&lt;p&gt;In this case we need to create a Spring custom property editor so that Spring can convert from a comma separated String to an array of ServerAddress objects. &lt;/p&gt;
&lt;p&gt;As it can be noticed, we are using a ServerAddressPropertyEditor instance provided by the Spring Data MongoDB library. If you don&amp;#39;t like or have some restrictions about using that library, don&amp;#39;t worry, you can always implement your own CustomPropertyEditor. You would only have to implement the interface PropertyEditorSupport and register it in your CustomPropertyEditorRegistrar. More info about how to do that can be found &lt;a target=&quot;_blank&quot; href=&quot;http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/validation.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That should be it! After applying these changes to your code your application will be aware of the existence of a primary MongoDB instance and of the different replicas you have installed so it will start using them straight away.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-06-04-enabling-mongodb-replica-set.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-06-04-enabling-mongodb-replica-set.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-06-04-enabling-mongodb-replica-set.html';
		window.disqus_identifier = '2014-06-04-enabling-mongodb-replica-set';
		window.disqus_title = 'Enabling MongoDB replica set';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Simple CSRF Protection with Spring MVC</title>
			<link href="http://www.gumtree.com/devteam//2014-04-16-simple-csrf-protection.html"/>
			<updated>2014-04-16T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-04-16-simple-csrf-protection.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Simple CSRF Protection with Spring MVC - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Apr 16th, 2014&lt;/span&gt;
				&lt;h1&gt;Simple CSRF Protection with Spring MVC&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Andy Summers&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-16-simple-csrf-protection.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-16-simple-csrf-protection.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Cross-Site Request Forgery (CSRF, also known as XSRF) is one of the most common security vulnerabilities found in websites that involve user authentication in order to view or manipulate sensitive data.&lt;/p&gt;
&lt;p&gt;Most web-savvy readers will be &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;familiar with what CSRF is&lt;/a&gt; and how it works. For those who aren&amp;#39;t, here is the briefest of outlines.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;Say you log into your favourite website, your bank for example, and you tick the option for them to remember you so that next time you visit you don&amp;#39;t have to re-login again. Usually this is achieved with cookies, so that any request to that site sends the cookies with it and that&amp;#39;s how they know who you are. That website may have particular URLs, such that sending a request directly to them could perform some action such as sending money or changing your details.&lt;/p&gt;
&lt;p&gt;Now say you are on a different website, and there is a link that you are encouraged to click. The author of this other website could have been sneaky and made it so that clicking this link actually fires a particular request at one of the aforementioned URLs on the other website you&amp;#39;d logged in on. And in doing so you&amp;#39;ve just inadvertently sent money to the bad guys, or deactivated your account on that site, or reset your password, or similar.&lt;/p&gt;
&lt;p&gt;If your web application is written with Spring MVC, there is the &lt;a target=&quot;_blank&quot; href=&quot;http://projects.spring.io/spring-security&quot;&gt;very comprehensive security module&lt;/a&gt; which provides a framework for authentication, as well as &lt;a target=&quot;_blank&quot; href=&quot;http://docs.spring.io/spring-security/site/docs/3.2.2.RELEASE/reference/htmlsingle/#csrf-configure&quot;&gt;built-in safeguard for CSRF&lt;/a&gt; among many other things. It is an excellent library which will probably suit the needs of most Spring web applications. If however you don&amp;#39;t wish to integrate this library - maybe your login model doesn&amp;#39;t fit well, or you have no use for the large platter of features it provides, then read on.&lt;/p&gt;
&lt;p&gt;There are a few different ways to deal with CSRF, and one is by &lt;a target=&quot;_blank&quot; href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet#General_Recommendation:_Synchronizer_Token_Pattern&quot;&gt;using a temporary token&lt;/a&gt; which means a submitted request (intended or otherwise) must include with it a token which is checked before letting the request proceed.&lt;/p&gt;
&lt;p&gt;The solution I would like to outline assumes the page you would like to protect from CSRF follows the pattern of having a page which is displayed via a GET method, then submitted via a POST.&lt;/p&gt;
&lt;h3 id=&quot;step-1-write-annotation-and-a-request-interceptor&quot;&gt;Step 1. Write annotation and a request interceptor&lt;/h3&gt;
&lt;p&gt;Annotation&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;javadoc&quot;&gt;/**
 * Annotation to mark a controller handler as requiring secure token checking
 */&lt;/span&gt;
&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;({ElementType.METHOD, ElementType.TYPE})
&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; SecureToken {
    String TOKEN_PARAMETER_NAME = &lt;span class=&quot;string&quot;&gt;&quot;secureToken&quot;&lt;/span&gt;;

    String value();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interceptor&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SecureTokenInterceptor&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandlerInterceptorAdapter&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SecureTokenService secureTokenService;

    &lt;span class=&quot;javadoc&quot;&gt;/**
     * Constructor.
     *
     *&lt;span class=&quot;javadoctag&quot;&gt; @param&lt;/span&gt; secureTokenService - service to store/retrieve tokens
     */&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; SecureTokenInterceptor(
            SecureTokenService secureTokenService) {
        this.secureTokenService = secureTokenService;
    }

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; preHandle(HttpServletRequest req,
                             HttpServletResponse resp,
                             Object handler) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception {
        HandlerMethod method = (HandlerMethod) handler;
        SecureToken secureToken =
                method.getMethodAnnotation(SecureToken.&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);

        &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;secureToken&lt;/span&gt; != &lt;span class=&quot;title&quot;&gt;null&lt;/span&gt;
                &amp;amp;&amp;amp; &lt;span class=&quot;title&quot;&gt;RequestMethod&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;POST&lt;/span&gt;
                    == &lt;span class=&quot;title&quot;&gt;RequestMethod&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;valueOf&lt;/span&gt;(&lt;span class=&quot;title&quot;&gt;req&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;getMethod&lt;/span&gt;())) &lt;/span&gt;{
            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; checkValidToken(req, resp, secureToken);
        }

        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;
    }

    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; checkValidToken(HttpServletRequest req,
                                    HttpServletResponse resp,
                                    SecureToken secureToken)
            &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, ModelAndViewDefiningException {
        String tokenValue =
                req.getParameter(SecureToken.TOKEN_PARAMETER_NAME);

        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (StringUtils.isEmpty(tokenValue)) {
            resp.sendError(&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;);
            &lt;span class=&quot;comment&quot;&gt;// Bad page setup or someone is messing with us&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;
        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!secureTokenService.checkToken(
                secureToken.value(), tokenValue)) {
            ModelAndView mav = 
                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelAndView(&lt;span class=&quot;string&quot;&gt;&quot;redirect:/page-expired&quot;&lt;/span&gt;);
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelAndViewDefiningException(mav);
        }

        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;
    }

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; postHandle(HttpServletRequest req, 
                           HttpServletResponse resp,
                           Object handler, 
                           ModelAndView modelAndView) 
                           &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception {
        HandlerMethod method = (HandlerMethod) handler;
        SecureToken secureToken = 
            method.getMethodAnnotation(SecureToken.&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);

        &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;secureToken&lt;/span&gt; != &lt;span class=&quot;title&quot;&gt;null&lt;/span&gt;) &lt;/span&gt;{
            String tokenValue = secureTokenService
                   .getOrGenerateToken(secureToken.value());
            modelAndView.addObject(
                SecureToken.TOKEN_PARAMETER_NAME, tokenValue);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&amp;#39;ll see the interceptor refers to a SecureTokenService to store/retrieve the tokens. This can use whatever you want really - a database, some kind of cache, or session (&lt;a target=&quot;_blank&quot; href=&quot;http://www.gumtree.com/devteam/2013-11-21-sticky-sessions.html&quot;&gt;though at Gumtree we prefer to avoid using sessions&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;step-2-wire-the-interceptor-in-via-spring-config&quot;&gt;Step 2. Wire the interceptor in via spring config&lt;/h3&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SellerWebsiteInterceptorsConfig&lt;/span&gt; 
                 &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WebMvcConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;annotation&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SecureTokenService secureTokenService;

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; addInterceptors(InterceptorRegistry registry) {
        &lt;span class=&quot;comment&quot;&gt;// Put your other interceptors here too ….&lt;/span&gt;
        registry.addInterceptor(secureTokenInterceptor());
    }

    &lt;span class=&quot;annotation&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; HandlerInterceptor secureTokenInterceptor() {
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SecureTokenInterceptor(secureTokenService);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;step-3-annotate-your-controller-methods&quot;&gt;Step 3. Annotate your controller methods&lt;/h3&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;annotation&quot;&gt;@RequestMapping&lt;/span&gt;(PAGE_PATH)
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DangerousPageController&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;annotation&quot;&gt;@SecureToken&lt;/span&gt;(value = VIEW_NAME)
    &lt;span class=&quot;annotation&quot;&gt;@RequestMapping&lt;/span&gt;(method = RequestMethod.GET)
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String showPage() {
        &lt;span class=&quot;comment&quot;&gt;// Show the page…&lt;/span&gt;
    }

    &lt;span class=&quot;annotation&quot;&gt;@SecureToken&lt;/span&gt;(value = VIEW_NAME)
    &lt;span class=&quot;annotation&quot;&gt;@RequestMapping&lt;/span&gt;(method = RequestMethod.POST)
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String submitPage() {
        &lt;span class=&quot;comment&quot;&gt;// Process the submit&lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;step-4-put-the-token-in-the-page&quot;&gt;Step 4. Put the token in the page&lt;/h3&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;...&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;method&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;post&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;secureToken&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;${secureToken}&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;#39;s it really. If you feel this is not foolproof enough there are further steps you can take, such as encrypting the token based on who the user is, or mixing up the name of the token parameter - again you could use some encryption technique for this, or just periodically change it. Either way, doing this gives your web application at least some level of safety against the bad guys.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-16-simple-csrf-protection.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-16-simple-csrf-protection.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-04-16-simple-csrf-protection.html';
		window.disqus_identifier = '2014-04-16-simple-csrf-protection';
		window.disqus_title = 'Simple CSRF Protection with Spring MVC';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>React.conf - Review</title>
			<link href="http://www.gumtree.com/devteam//2014-04-15-React-conf-review.html"/>
			<updated>2014-04-15T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-04-15-React-conf-review.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;React.conf - Review - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Apr 15th, 2014&lt;/span&gt;
				&lt;h1&gt;React.conf - Review&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-15-React-conf-review.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-15-React-conf-review.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;One week has gone since the end of &lt;a target=&quot;_blank&quot; href=&quot;http://reactconf.com/&quot;&gt;React.conf&lt;/a&gt; talks. The videos are being released &lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/user/reactconf/videos&quot;&gt;in this Youtube channel&lt;/a&gt;. In the meantime you can check the notes we took on &lt;a target=&quot;_blank&quot; href=&quot;./2014-04-08-React-conf-day-1.html&quot;&gt;day 1&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;./2014-04-08-React-conf-day-2.html&quot;&gt;day 2&lt;/a&gt;. &lt;/p&gt;
&lt;!-- Read more --&gt;

&lt;p&gt;The event was great. There were some areas that can be improved (chairs, venue size and distribution) but I met great people, and listening to the speakers sharing their expertise was very useful. the only downside is the amount of time I may need to process all that information! &lt;/p&gt;
&lt;p&gt;That said, I think not all talks were at the same level, it felt like if there were 3 tiers of talks: amazing, good and the rest. I want to revisit the talks and add my personal comments on them. You may disagree, comments are open below for that ;)&lt;/p&gt;
&lt;h2 id=&quot;reactive-service-levels&quot;&gt;Reactive Service Levels&lt;/h2&gt;
&lt;p&gt;Let me start by this talk by &lt;em&gt;Ben Christensen&lt;/em&gt; (@benjchristensen) from Netflix. If I had to choose only one talk from the event, this would be it. &lt;/p&gt;
&lt;p&gt;Ben did a great job speaking, but the most impressive part was seeing the way Netflix works behind the curtain. Some things have been talked about before (the Simian army) but getting to know the way they use real traffic for testing or their release process was very interesting. Obviously Netflix works at a massive scale and not all companies need all those tools, but enlightening anyway.&lt;/p&gt;
&lt;h2 id=&quot;-reactive-design-language-and-paradigms&quot;&gt;(Reactive) Design, Language, and Paradigms&lt;/h2&gt;
&lt;p&gt;This talk by &lt;em&gt;Dean Wampler&lt;/em&gt; (@deanwamplerr) was the first of the second day. &lt;/p&gt;
&lt;p&gt;He analysed several paradigms and how well they resonated with Reactive concepts. His claims on DDD were surprising giving all the effort you can see online towards integrating actors and DDD, but the explanations made quite a lot of sense. An interesting theoretical exercise.&lt;/p&gt;
&lt;h2 id=&quot;what-does-it-mean-to-be-reactive-&quot;&gt;What does it mean to be Reactive?&lt;/h2&gt;
&lt;p&gt;The first talk of the event, by &lt;em&gt;Erik Meijer&lt;/em&gt; (@headinthebox). Very funny and totally worth watching, he surprised by requesting we kill reactive (the word) due to the danger of it becoming just a buzzword.&lt;/p&gt;
&lt;p&gt;During the talk he explained how getters and setters are equivalent to Observables and Enumerators without a correct signature. He also made us aware on how many method definitions are incorrect as they don&amp;#39;t make some issues explicit, like latency (Futures) or empty values (Option).&lt;/p&gt;
&lt;h2 id=&quot;responsive-trait-responding-in-a-timely-manner-&quot;&gt;Responsive Trait - Responding in a Timely Manner.&lt;/h2&gt;
&lt;p&gt;A talk by &lt;em&gt;Martin Thompson&lt;/em&gt; (@mjpt777). I found it eye opening as he went over common performance issues companies find on the wild and that, at first, seem to contradict &amp;#39;common assumptions&amp;#39; about how they don&amp;#39;t really improve performance (wrong, as he explained). &lt;/p&gt;
&lt;p&gt;The main point across the talk was that we are too isolated from the lower layers, but that means that we live a lie as we are all dependent on the details.&lt;/p&gt;
&lt;h2 id=&quot;stuff-i-learned-building-reactive-systems&quot;&gt;Stuff I learned building reactive systems&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Joe Armstrong&lt;/em&gt; (@joeerl), principal inventor of Erlang, gave this talk focused on protocols and implementation. &lt;/p&gt;
&lt;p&gt;He covered core concepts that shaped Erlang and any kind of reactive system. At the end he explained how his talk showed that functional programming is here because it is necessary, the challenges we have can&amp;#39;t be tackled without it.&lt;/p&gt;
&lt;h2 id=&quot;oh-it-s-reactive-may-i-touch-it-&quot;&gt;Oh! It&amp;#39;s reactive! May I touch it?&lt;/h2&gt;
&lt;p&gt;The closing talk by &lt;em&gt;Dave Thomas&lt;/em&gt;. The talk was entertaining with some pretty funny moments. &lt;/p&gt;
&lt;p&gt;He made a good summary of the previous talks and raised some relevant issues around current technologies (like UI). He also pointed back to the origin of Actors and how all this has been done before, we have a lot to learn from previous research in the area.&lt;/p&gt;
&lt;h2 id=&quot;scalable-trait-reactive-supply-to-changing-demand&quot;&gt;Scalable Trait - Reactive Supply to Changing Demand&lt;/h2&gt;
&lt;p&gt;A talk by &lt;em&gt;Jonas Bonér&lt;/em&gt; (@jboner). It focussed on scalability and it had a bit of overlap with &lt;em&gt;Martin Thompson&lt;/em&gt; talk at the start.&lt;/p&gt;
&lt;p&gt;An interesting part of the talk was his discussion on consistency, CAP theorem and share nothing. You could also see how he has been a key person shaping Akka, as his ideas (from an abstract point of view) are most, if not all, implemented in Akka.&lt;/p&gt;
&lt;h2 id=&quot;event-driven-the-only-way-it-s-gonna-fly-&quot;&gt;Event-Driven - The Only Way (It’s Gonna) Fly!&lt;/h2&gt;
&lt;p&gt;The last talk of the first day, by &lt;em&gt;Todd L. Montgomery&lt;/em&gt; (@toddlmontgomery). &lt;/p&gt;
&lt;p&gt;The talk had a strong focus on state machines and protocols, which was good to understand limitations and why the reactive way is superior. A particularly interesting point was the evolution of REST from request-response to the future HTTP 2.0 based implementations. Lots of goodness coming soon to our web apps :)&lt;/p&gt;
&lt;h2 id=&quot;reactive-data-management&quot;&gt;Reactive Data Management&lt;/h2&gt;
&lt;p&gt;A talk by *Andrew Stewart. He focussed on working with data, as that&amp;#39;s the main issue his company, a forex platform, has.&lt;/p&gt;
&lt;p&gt;For me the most relevant point of his talk was about the importance of measuring things and how crucial it may be to include that into your design, otherwise it may be too late or too costly. His explanation on different life stages of data was ok, but I felt it was too coupled to his own business, not something that applies generally. Some parts can be relevant for many people, others can be a bit less.&lt;/p&gt;
&lt;h2 id=&quot;event-driven-user-interfaces&quot;&gt;Event Driven User Interfaces&lt;/h2&gt;
&lt;p&gt;By &lt;em&gt;Lee Campbell&lt;/em&gt; and &lt;em&gt;Matt Barrett&lt;/em&gt;, it was basically a demo of their own application.&lt;/p&gt;
&lt;p&gt;It raised interesting issues on working with UI in a reactive style, but it was a bit too long due to the &amp;#39;demo&amp;#39; factor. &lt;/p&gt;
&lt;h2 id=&quot;querying-event-streams-for-fun-and-profit&quot;&gt;Querying Event Streams For Fun and Profit&lt;/h2&gt;
&lt;p&gt;By &lt;em&gt;Greg Young&lt;/em&gt; (@gregyoung). It seemed an interesting talk at the beginning but somehow it become very hard to focus on the topic he was talking about. Unfortunately I can&amp;#39;t point towards a single issue that caused that feeling, but it was the less enjoyable talk of the event.&lt;/p&gt;
&lt;h2 id=&quot;event-main-points&quot;&gt;Event Main Points&lt;/h2&gt;
&lt;p&gt;Across all talks there were some underlying themes that seemed to appear over and over across talks. The list is not complete, but some of the main ideas I took from the event are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share nothing. Architecture that isolates data performs better, behaves better, is easier to work with. Just do it.&lt;/li&gt;
&lt;li&gt;Internet of things is coming and will force a revolution on software architecture. Maybe you don&amp;#39;t expect your website to be used in a fridge, but the potential increase in connections to an endpoint, and the magnitude of that increase, means we need to change our mindset.  &lt;/li&gt;
&lt;li&gt;Currently, actor plus Rx libraries seem to be our best bet to have decent code&lt;/li&gt;
&lt;li&gt;Monitoring is becoming more and more important, at the same level (or greater) than unit testing&lt;/li&gt;
&lt;li&gt;Law of leaky abstractions is real, and forces you to know the details. Physics, protocols, GC pauses... reactive is more than just using a library.&lt;/li&gt;
&lt;li&gt;Graceful degradation had become a core concept. Your app can&amp;#39;t show an error to the user, it must work as well as it can with both data and resources available. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that&amp;#39;s it. As mentioned, this is purely my personal opinion. Some people may like other talks more, my recommendation is to watch &lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/user/reactconf/videos&quot;&gt;the videos&lt;/a&gt; and, seriously, do your best to attend the conference next year. It is worth it.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-15-React-conf-review.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-15-React-conf-review.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-04-15-React-conf-review.html';
		window.disqus_identifier = '2014-04-15-React-conf-review';
		window.disqus_title = 'React.conf - Review';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>React.conf - Day 2</title>
			<link href="http://www.gumtree.com/devteam//2014-04-08-React-conf-day-2.html"/>
			<updated>2014-04-09T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-04-08-React-conf-day-2.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;React.conf - Day 2 - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Apr 9th, 2014&lt;/span&gt;
				&lt;h1&gt;React.conf - Day 2&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-2.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-2.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Day 2 of &lt;a target=&quot;_blank&quot; href=&quot;http://reactconf.com/&quot;&gt;React.conf&lt;/a&gt; is over. Pretty good day although personally I&amp;#39;ve not liked all the talks. As I did &lt;a target=&quot;_blank&quot; href=&quot;./2014-04-08-React-conf-day-1.html&quot;&gt;yesterday&lt;/a&gt;, what follows is a quick and dirty summary of the talks. I&amp;#39;ll write a follow up post with comments on the event and content later on this week.&lt;/p&gt;
&lt;!-- Read more --&gt;

&lt;h2 id=&quot;the-good&quot;&gt;The Good&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The level of the speakers has been very high all the event&lt;/li&gt;
&lt;li&gt;The post-event party after day 1. Nice atmosphere &lt;/li&gt;
&lt;li&gt;The coffee!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-bad&quot;&gt;The Bad&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The chairs have been really uncomfortable for the event. First day I didn&amp;#39;t notice so much, but at the end of the second day it was sore.&lt;/li&gt;
&lt;li&gt;I missed a second Q&amp;amp;A round after day 2. I understand the schedule constraints, but the idea was very good and 1 talk less wouldn&amp;#39;t have mattered much&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-talks&quot;&gt;The Talks&lt;/h2&gt;
&lt;p&gt;This second day there were 6 talks. Let&amp;#39;s summarise the main points about the talks.&lt;/p&gt;
&lt;h3 id=&quot;talk-1&quot;&gt;Talk 1&lt;/h3&gt;
&lt;p&gt;First talk was by &lt;em&gt;Dean Wampler&lt;/em&gt; (@deanwamplerr), who commented on how appropriate may some paradigms be for reactive applications. Good talk. &lt;/p&gt;
&lt;p&gt;The title was: (Reactive) Design, Language, and Paradigms&lt;/p&gt;
&lt;p&gt;He started with a disclaimer: good people can make any approach work, even if it is suboptimal&lt;/p&gt;
&lt;p&gt;4 pillars of reactive programming:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;responsive&lt;/li&gt;
&lt;li&gt;resilient&lt;/li&gt;
&lt;li&gt;scalable&lt;/li&gt;
&lt;li&gt;event driven &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The 4 pillars we want systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;asynchronous, non blocking, facts as events are pushed&lt;/li&gt;
&lt;li&gt;loose coupled, composable, distributed, that consider network problems first class citizens&lt;/li&gt;
&lt;li&gt;must respond when errors occur&lt;/li&gt;
&lt;li&gt;redefine errors, isolates components for exceptions, considers failure as a first class concept, recovery is an event&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reactive Manisfesto calls out some relevant points. Importantly: networks. They are unreliable. We must redefine known problems in the system, raise awareness of these elements (network, etc)&lt;/p&gt;
&lt;p&gt;Object Oriented Programming&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OOP is good for event driven, bad for scalability and resilience, ok for responsive&lt;/li&gt;
&lt;li&gt;in OOP state and behaviour are joined&lt;/li&gt;
&lt;li&gt;you end up mapping the world in code. That is a big mistake: the implicit notion that you should implement your domain model is wrong. Not the simplest thing that can work&lt;/li&gt;
&lt;li&gt;simplest way: just transform data, don&amp;#39;t care about &amp;quot;person&amp;quot; or &amp;quot;domain concepts&amp;quot;. Sometimes domain concepts are useful, but many times are drawbacks, it impacts scalability due to overhead&lt;/li&gt;
&lt;li&gt;state mutation is considered good in OOP. A bad idea when running in parallel, think thread safety. Bad parallelism means bad scalability, state mutation makes it harder to achieve resiliency&lt;/li&gt;
&lt;li&gt;mutation happens, but the idea is to Share Nothing, hide mutation. UI/services/processes don&amp;#39;t mutate, modules have hidden mutation, persistence makes  mutations visible&lt;/li&gt;
&lt;li&gt;There are OOP reactive systems (20 years old example already called reactive programming at that time) AI robotics&lt;/li&gt;
&lt;li&gt;Alan Keys: OOP to me means only messaging, local retention and protection, hiding state process and extreme late binding of all things. Note: this defines the actor model!&lt;/li&gt;
&lt;li&gt;Alan Kay: I made up the term OOP and I can tell you I didn&amp;#39;t have C++ in mind&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DDD&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;system level design of OOP&lt;/li&gt;
&lt;li&gt;improves a little bit, but not optimal. Better at resilience than OOP as they model errors/recovery&lt;/li&gt;
&lt;li&gt;First idea: model your domain. But then implement the model, which may be overhead.&lt;/li&gt;
&lt;li&gt;Anti-pattern: anemic model (in DDD). Counter claim: models should be anemic. FP gives you better flexibility when you separate data and behaviour&lt;/li&gt;
&lt;li&gt;(off side - in big data you can afford the overhead of turning rows of numbers into objects)&lt;/li&gt;
&lt;li&gt;Claim: many of the DDD terms can be replaced by better FP concepts&lt;/li&gt;
&lt;li&gt;Claim: some terms are helpful, other are ill-defined or encourage the wrong emphasis&lt;/li&gt;
&lt;li&gt;Ubiquitous language: seems a great idea for communication. But we should not implement that language, as it bloats and increases coupling instead of giving us minimal working thing&lt;/li&gt;
&lt;li&gt;DDD does something important: forces to understand domain, but you should not implement the model but the minimal thing that will work&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Perfect fit for reactive programming&lt;/li&gt;
&lt;li&gt;Mathematics. Gives us structures and tools to reason about problems with rigour&lt;/li&gt;
&lt;li&gt;FP builds a state machine, each event changes state&lt;/li&gt;
&lt;li&gt;Function composition: OO was supposed to give us reusable components. It failed. Objects are at a too high abstraction level, which makes reusability hard. Function composition solves that. But needs modules to limit what we expose for public consumption.&lt;/li&gt;
&lt;li&gt;Immutability. Avoid concurrency issues, Easier to scale, more resilient&lt;/li&gt;
&lt;li&gt;Referential transparency. Lack of side effects. Easier to test.&lt;/li&gt;
&lt;li&gt;Separate state and behaviour. Implement some domain object, with some minimal validation. The rest is data transformation. &lt;/li&gt;
&lt;li&gt;Claim: Sw systems are just data processing systems. &lt;/li&gt;
&lt;li&gt;Example: word count in hadoop map reduce. In Java aPI, lot of boilerplate and ceremony. On Spark, just 10 lines of code. Spark doesn&amp;#39;t use intermediate objects, just transforms data&lt;/li&gt;
&lt;li&gt;By turning it into a data transform process we can just unit test, no need to have a full QA acceptance process for it.&lt;/li&gt;
&lt;li&gt;Most compelling argument: World is a data processing world, FP is the perfect match&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Functional reactive programming&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports time-varying values as first class&lt;/li&gt;
&lt;li&gt;Derived expressions are automatically updated&lt;/li&gt;
&lt;li&gt;Deterministic, fine grained, concurrent&lt;/li&gt;
&lt;li&gt;It&amp;#39;s a data-flow system&lt;/li&gt;
&lt;li&gt;Scala.React (paper: &lt;a target=&quot;_blank&quot; href=&quot;http://infoscience.epfl.ch/record/176887/files/DeprecatingObservers2012.pdf&quot;&gt;Deprecating observer pattern with scala.react&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Solves a lot of issues with callback programming&lt;/li&gt;
&lt;li&gt;Currently FRP mostly used in Js UI event loop&lt;/li&gt;
&lt;li&gt;Not so great for scalability due to focus on 1 single event loop&lt;/li&gt;
&lt;li&gt;Not good facilities for error handling&lt;/li&gt;
&lt;li&gt;Encapsulates evolving mutations of state&lt;/li&gt;
&lt;li&gt;Single thread, non sustainable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rx&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Composable, event based&lt;/li&gt;
&lt;li&gt;Observables, asynchronous data streams&lt;/li&gt;
&lt;li&gt;Schedulers, parameterize concurrency in streams&lt;/li&gt;
&lt;li&gt;Example: LINQ&lt;/li&gt;
&lt;li&gt;Observable consumes events from stream, operates on data consumed, and sends them to destination&lt;/li&gt;
&lt;li&gt;Quite good for reactive/event driven programming. Slightly lacking on error handling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Callbacks&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;imperative&lt;/li&gt;
&lt;li&gt;On 2008 Adobe said 1/3 of the code in their desktop apps was devoted to event handling, 1/2 of errors in that area&lt;/li&gt;
&lt;li&gt;Rx vs Callbacks: Rx inverses control&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reactive streams&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rx with back pressure. Bounded queues (see notes on day 1, they are critical).&lt;/li&gt;
&lt;li&gt;Back pressure is important missing piece in Rx&lt;/li&gt;
&lt;li&gt;Help responsiveness, still slightly lacking on resilience due to error management&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Futures&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scatter/Gather, a data flow model&lt;/li&gt;
&lt;li&gt;Futures are great for scalability and responsive, but not extremely resilient by themselves (need external recovery method)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actors&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;best of breed error handling via supervisors&lt;/li&gt;
&lt;li&gt;a first class concept in Erlang!&lt;/li&gt;
&lt;li&gt;Fits perfectly reactive, stronger fit due to great error handling. Best option?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conclusions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;perfection achieved not when there is nothing left to add, but when there is nothing left to remove&lt;/li&gt;
&lt;li&gt;do minimal working implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;talk-2&quot;&gt;Talk 2&lt;/h3&gt;
&lt;p&gt;Second talk was by &lt;em&gt;Greg Young&lt;/em&gt; (@gregyoung). Personally, I didn&amp;#39;t like the talk must. It started ok, but at some point it stopped resonating and didn&amp;#39;t like it much.&lt;/p&gt;
&lt;p&gt;The talk was: Querying Event Streams For Fun and Profit &lt;/p&gt;
&lt;p&gt;Core idea: saving and querying events is valuable. &lt;/p&gt;
&lt;p&gt;CEP (complex event processing) is the big new things. Querying events needs to consider time as a factor in the query. We want real time querying too.&lt;/p&gt;
&lt;p&gt;Stream DB: takes events from a point in time and tries to turn them into SQL. Not a good idea&lt;/p&gt;
&lt;p&gt;Event Sourcing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rebuild state by replaying events&lt;/li&gt;
&lt;li&gt;only store events&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data and event rate has grown a lot, still growing. On 2006 (year) doing 2000 tps was a lot, nowadays is trivial.&lt;/p&gt;
&lt;p&gt;Conceptually&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our event stream starts at event 0 and we play events from there&lt;/li&gt;
&lt;li&gt;Many queries are hard to do. But if you consider series of events, things are simpler.&lt;/li&gt;
&lt;li&gt;Example: user that does X, then later at some point does Y, then later does Z with some outcome. SQL for that is non manageable&lt;/li&gt;
&lt;li&gt;Querying events is a time machine, you can go forward and backwards in time&lt;/li&gt;
&lt;li&gt;Append model, traverse the road&lt;/li&gt;
&lt;li&gt;An event is a function: f(state, event) -&amp;gt; state&lt;/li&gt;
&lt;li&gt;A stream of events is stream of function calls&lt;/li&gt;
&lt;li&gt;A query on events is defining the body of what the function means.&lt;/li&gt;
&lt;li&gt;You ask for the event that given an event returns a certain state&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Querying events is doing a left fold on previous behaviours&lt;/p&gt;
&lt;p&gt;Move code to data, not data to code. Use queries where my events live, not the other way. Better performance.&lt;/p&gt;
&lt;h3 id=&quot;talk-3&quot;&gt;Talk 3&lt;/h3&gt;
&lt;p&gt;Third talk was by &lt;em&gt;Lee Campbell&lt;/em&gt; and &lt;em&gt;Matt Barrett&lt;/em&gt;. Their talk was mostly a demo of a reactive application they have built. The talk had some insightful ideas, but I found it a bit too long for a demo.&lt;/p&gt;
&lt;p&gt;The title was: Event Driven User Interfaces&lt;/p&gt;
&lt;p&gt;Managing reactive ui complexity is hard. UI are shared mutable state, clashes with reactive core concepts&lt;/p&gt;
&lt;p&gt;Reactive trader (code in github)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forex trading platform, want fast and accurate trade response, real time trade history&lt;/li&gt;
&lt;li&gt;challenges: responsive, resilient, predictable latency (even more important than just low latency), consistent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to stream data&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;request-response cycle not good enough&lt;/li&gt;
&lt;li&gt;long polling is wasteful&lt;/li&gt;
&lt;li&gt;push solutions the only reasonable way&lt;/li&gt;
&lt;li&gt;choice: &lt;a target=&quot;_blank&quot; href=&quot;http://signalr.net&quot;&gt;signalR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Single threaded UI&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;don&amp;#39;t block UI, it&amp;#39;s bad&lt;/li&gt;
&lt;li&gt;multicore has 0 impact, is still 1 thread&lt;/li&gt;
&lt;li&gt;as app grows more contention on thread&lt;/li&gt;
&lt;li&gt;avoid I/O&lt;/li&gt;
&lt;li&gt;avoid complex computation&lt;/li&gt;
&lt;li&gt;avoid enumerating long lists of data&lt;/li&gt;
&lt;li&gt;avoid mapping/translating&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Concurrency is not free&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creating threads is not free&lt;/li&gt;
&lt;li&gt;moving stack context has a cost&lt;/li&gt;
&lt;li&gt;threadpool starvation can hurt&lt;/li&gt;
&lt;li&gt;single thread is simpler, too much concurrency can hurt performance, raise bugs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Favour functional&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;immutable&lt;/li&gt;
&lt;li&gt;side effects free&lt;/li&gt;
&lt;li&gt;framework support for monadic programming (async/await, Rx)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Non-happy path&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;server failures: errors, network timeouts, etc.&lt;/li&gt;
&lt;li&gt;turn technical failure into non-technical events&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How many updates can your server produce, UI show, users handle? User needs less data, reduce events!&lt;/p&gt;
&lt;p&gt;Conflation: price has a delay between ui receiving price and it being shown to user. In the meantime price 2 and 3 have arrived. After showing price 1, should I start processing price 2 or 3? Explicitly limit throughput, introduces predictable latency.&lt;/p&gt;
&lt;p&gt;Latency&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;congestion on UI&lt;/li&gt;
&lt;li&gt;on the wire (physics)&lt;/li&gt;
&lt;li&gt;not all old data is the same, some old data is better than another&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Games have a good solution: constant refresh rating (60 fps) rendering is driven by UI at fixed rate, doesn&amp;#39;t matter how many events you get&lt;/p&gt;
&lt;p&gt;Error conditions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assume silence in channel as an error, UI automatically updates showing &amp;quot;data not available&amp;quot;. Once stream restored, show data again.&lt;/li&gt;
&lt;li&gt;server replays events on client crash so client shows the exact same state as before crash&lt;/li&gt;
&lt;li&gt;UI waits for server if server crashes, once server is up UI picks up where it was and continues rendering events. Failure as an event&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Asynchrony&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;introduce concurrency via api. makes it testable, discoverable, teachable&lt;/li&gt;
&lt;li&gt;querying with concurrency: use observable to observe the threadpool and subscribe to the threadpool so we get the error/result wen done&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Single model of async&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;force async into that model asap, to avoid different api and be observable asap&lt;/li&gt;
&lt;li&gt;any interaction with user is async &lt;/li&gt;
&lt;li&gt;user and i/o events should be observable&lt;/li&gt;
&lt;li&gt;functional types work to you stream advantage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Async everywhere&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;system initialisation&lt;/li&gt;
&lt;li&gt;eager or lazy loading of data&lt;/li&gt;
&lt;li&gt;system availability and health&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Everything is a stream&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Static data doesn&amp;#39;t really exist, data usually changes at some point in live&lt;/li&gt;
&lt;li&gt;config, reference data, data entry... all streams&lt;/li&gt;
&lt;li&gt;the status of the app (on/off) is part of the stream of events. No need to check a flag in a loop to wait for a condition to do something, just listen to the stream&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rich domain models&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;makes a complex api discoverable&lt;/li&gt;
&lt;li&gt;can present errors at proper times and locations&lt;/li&gt;
&lt;li&gt;difficult to implement over unsympathetic API&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;talk-4&quot;&gt;Talk 4&lt;/h3&gt;
&lt;p&gt;Fourth talk was by &lt;em&gt;Andrew Stewart&lt;/em&gt;. He gave relevant insights on a real time trading platform and how do they classify data. Classifying data is important to work with it in the correct way.&lt;/p&gt;
&lt;p&gt;The title was: Reactive Data Management &lt;/p&gt;
&lt;p&gt;He started by describing his product, LMAX (a forex platform). In 1 week they have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1000s client&lt;/li&gt;
&lt;li&gt;100,000s trades&lt;/li&gt;
&lt;li&gt;100,000,000 million price updates&lt;/li&gt;
&lt;li&gt;10 billion price updates to clients forced because tcp/ip has no multicast, enforces use of parallel unicast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reliable latency is better than low latency, but you want both&lt;/p&gt;
&lt;p&gt;Early life data&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bursts of frantic activity that most of the time results in nothing&lt;/li&gt;
&lt;li&gt;you have expectations about response time, accuracy&lt;/li&gt;
&lt;li&gt;working set: highly reactive, mutating&lt;/li&gt;
&lt;li&gt;millions data points&lt;/li&gt;
&lt;li&gt;milliseconds lifetime&lt;/li&gt;
&lt;li&gt;highly contended&lt;/li&gt;
&lt;li&gt;most aggressive reactive requirements&lt;/li&gt;
&lt;li&gt;custom persistence solution due to requirements at that time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Managing data through early life&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;single thread for persistence, all deterministic, data broken into pieces (kinda messages)&lt;/li&gt;
&lt;li&gt;potentially processing millions of events per second&lt;/li&gt;
&lt;li&gt;being in memory is not enough: memory contention, GC, thread wake up, etc. More things impact performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Post-mortem data&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;immediately after early life&lt;/li&gt;
&lt;li&gt;you die. once data is processed, it&amp;#39;s a fact it&amp;#39;s history. done&lt;/li&gt;
&lt;li&gt;looking at static data that won&amp;#39;t change anymore&lt;/li&gt;
&lt;li&gt;different model that for early life, as requirements (amount of data, speed  of queries) are quite different&lt;/li&gt;
&lt;li&gt;highly structured, analysis is exact&lt;/li&gt;
&lt;li&gt;search/partition keys are predictable&lt;/li&gt;
&lt;li&gt;model evolves at similar pace than behaviour&lt;/li&gt;
&lt;li&gt;access to arbitrary and unlimited history&lt;/li&gt;
&lt;li&gt;you could use 1 single db for this, no need for much more. Data doesn&amp;#39;t change, is an archive, just an index. Insert/select, nothing else needed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ageing gracefully&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;need to move from one state to the other&lt;/li&gt;
&lt;li&gt;transactions are a way to do this&lt;/li&gt;
&lt;li&gt;we have been spoiled by managed transactions, we don&amp;#39;t reason about them properly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;History&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;analysis is statistical but exact&lt;/li&gt;
&lt;li&gt;abstracted, structured, aggregated&lt;/li&gt;
&lt;li&gt;search keys less predictable but contained&lt;/li&gt;
&lt;li&gt;model evolves at similar pace than domain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Difficult data (audit trail)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;large to huge volumes&lt;/li&gt;
&lt;li&gt;loosely structured&lt;/li&gt;
&lt;li&gt;analysis statistical, approximate&lt;/li&gt;
&lt;li&gt;search key unpredictable&lt;/li&gt;
&lt;li&gt;model evolves and mutates rapidly&lt;/li&gt;
&lt;li&gt;migration unaffordable&lt;/li&gt;
&lt;li&gt;NoSQL - my data is not in table shape, not the solution&lt;/li&gt;
&lt;li&gt;3 approaches: time series problems, document shaped data and frenzy data (time series meet media)&lt;/li&gt;
&lt;li&gt;document problems: loosely structured, content sensitive, structure evolves faster than pattern of use, data loss is negotiable&lt;/li&gt;
&lt;li&gt;time series: faults, gauges, performance metrics. Volumes can be staggering. Need to capture enough to know what you don&amp;#39;t need to capture&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Forensics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TIVO for data. play, rewind, go back, fast forwards, etc&lt;/li&gt;
&lt;li&gt;time series meet video&lt;/li&gt;
&lt;li&gt;fire hose data feed, 150k/s&lt;/li&gt;
&lt;li&gt;analysis is complex, but after the fact&lt;/li&gt;
&lt;li&gt;data lose is business damaging&lt;/li&gt;
&lt;li&gt;analysis running continually plus adhoc analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Problems are never the ones we are looking for. Ask yourself how are you going to measure things in your system before development. Will influence your design.&lt;/p&gt;
&lt;h3 id=&quot;talk-5&quot;&gt;Talk 5&lt;/h3&gt;
&lt;p&gt;Fifth talk was by &lt;em&gt;Ben Christensen&lt;/em&gt; (@benjchristensen) from Netflix, who showed us how Netflix uses reactive.&lt;/p&gt;
&lt;p&gt;The title was: Reactive Service Levels &lt;/p&gt;
&lt;p&gt;Explosive growth of software has added greatly to systems interactive complexity. With software, all possible states a system can be at are countless&lt;/p&gt;
&lt;p&gt;Netflix&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 regions of AWS, USA east, USA west, Europe&lt;/li&gt;
&lt;li&gt;decoupled of each other&lt;/li&gt;
&lt;li&gt;each region has X00s of clusters&lt;/li&gt;
&lt;li&gt;each cluster has dozens-hundreds of machines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chaos Monkey&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tool to ensure reliability&lt;/li&gt;
&lt;li&gt;in prod environment goes to cluster, picks a box, kills it&lt;/li&gt;
&lt;li&gt;ensures software reacts to failure and is resilient&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chaos Gorilla&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wipes out a full AWS availability zone&lt;/li&gt;
&lt;li&gt;ensures we fallback to another zone without problem, traffic redirected&lt;/li&gt;
&lt;li&gt;resilience to network spikes, network partitions, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chaos Kong&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tests disaster recovery plan by removing a full AWS region&lt;/li&gt;
&lt;li&gt;more on the tools &lt;a target=&quot;_blank&quot; href=&quot;http://techblog.netflix.com/2011/07/netflix-simian-army.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Internal tools&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eureka - instance discovery&lt;/li&gt;
&lt;li&gt;Karyon - base server with instance registration, metrics, heartbeat, etc&lt;/li&gt;
&lt;li&gt;Ribbon - rpc client with load balancing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;User request blocked by latency in single network call. At high volume all request threads can block in seconds due to this latency.&lt;/p&gt;
&lt;p&gt;With dozen of dependencies, one going bad takes everything down. Compounding 99,9% reliabilities reduces the global reliability, easily 2+ hours downtime per month&lt;/p&gt;
&lt;p&gt;Constraints to fix issues mentioned above&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;speed of iteration&lt;/li&gt;
&lt;li&gt;client libraries, optimise for consumers of libraries&lt;/li&gt;
&lt;li&gt;mixed environment, polyglot (jvm, python, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We want to isolate failing requests, at least share load. Network traffic interaction points are isolated.&lt;/p&gt;
&lt;p&gt;Overt catastrophic failure occurs when small failures join to create a systemic accident. Can&amp;#39;t comprehend complex systems, trying is a waste of time. &lt;/p&gt;
&lt;p&gt;Systems operations are dynamic, failing and being replaced continually. Embrace it. Let things fail and move forward.&lt;/p&gt;
&lt;p&gt;Options&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;restrict input via tryable semaphore&lt;/li&gt;
&lt;li&gt;rejects calls it cannot fulfil&lt;/li&gt;
&lt;li&gt;timeouts on network calls&lt;/li&gt;
&lt;li&gt;Tryable semaphores for non blocking clients and fallbacks&lt;/li&gt;
&lt;li&gt;separate threads for blocking clients&lt;/li&gt;
&lt;li&gt;aggressive timeouts&lt;/li&gt;
&lt;li&gt;circuit breakers as release valve. In the time that this activates you are saturated and toast, is just to relieve pressure, not a fix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;System degradation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;better to make experience slightly worse but process critical path than to say &amp;#39;come back later&amp;#39;&lt;/li&gt;
&lt;li&gt;basic thing - log errors and notify user&lt;/li&gt;
&lt;li&gt;next best thing: fail silently (empty list of videos, etc)&lt;/li&gt;
&lt;li&gt;static fallback: default value when can process value&lt;/li&gt;
&lt;li&gt;stubbed fallback: give default representation of interface to allow command to process&lt;/li&gt;
&lt;li&gt;fallback via network: fallback to most recently cached data in same group&lt;/li&gt;
&lt;li&gt;fallback via network then local - more external cache&lt;/li&gt;
&lt;li&gt;fail fast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In complex systems, decision maker is local rather than globally rational. Local actions can have global results&lt;/p&gt;
&lt;p&gt;Auditing via simulation. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inject latency to a service artificially to find side effects&lt;/li&gt;
&lt;li&gt;do tests in controlled times and environment so we can find bugs&lt;/li&gt;
&lt;li&gt;another test, increase latency from 125ms to 1500m. Massive increase of fallbacks, just 1 exception per second to user -&amp;gt; good issue management&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Constantly changing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zuul routing layer (Netflix tool)&lt;/li&gt;
&lt;li&gt;routes traffic according to properties of traffic/user&lt;/li&gt;
&lt;li&gt;some traffic to test environments other to production&lt;/li&gt;
&lt;li&gt;phased deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full tracking in Github and commits/releases. Each commit: tests failed, passed, gone to production, etc&lt;/p&gt;
&lt;p&gt;Canary &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is a prerelease environment, if a box metrics are ok then is pushed to production&lt;/li&gt;
&lt;li&gt;In this environment test is meaningless to ensure production ready due to so many factors, only way is to use real traffic in controlled manner as test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Squeeze&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;another environment, like Canary, behind Zuul&lt;/li&gt;
&lt;li&gt;forces boxes until they break, so we know if performance is degrading or not&lt;/li&gt;
&lt;li&gt;we know how many rps can a machine handle, info can be used to resize production environment&lt;/li&gt;
&lt;li&gt;can we decide is machine should be fixed or we will pay extra temporally until fixed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coalmine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;different type of canary&lt;/li&gt;
&lt;li&gt;same code as production fleet&lt;/li&gt;
&lt;li&gt;additional monitoring via java agents&lt;/li&gt;
&lt;li&gt;captures NIO, IO, etc&lt;/li&gt;
&lt;li&gt;displays non expected network traffic&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Production&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;main target of traffic from Zuul&lt;/li&gt;
&lt;li&gt;traffic is very predictable, 6x peak to low&lt;/li&gt;
&lt;li&gt;weekends higher peaks&lt;/li&gt;
&lt;li&gt;huge spikes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scryer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;as model is so predictive, this tool resizes fleet periodically to match demand&lt;/li&gt;
&lt;li&gt;better than reactive traffic as prediction can cover anomalies and ignore them&lt;/li&gt;
&lt;li&gt;reduces average load as we have resources we need in advance&lt;/li&gt;
&lt;li&gt;more accurate allocation, saves money in PaaS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;100s of customers A/B tests&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tiring for engineers&lt;/li&gt;
&lt;li&gt;become platform of web services, UI teams build their own endpoints&lt;/li&gt;
&lt;li&gt;code comes from Cassandra, it was already there and gives cluster replication for free&lt;/li&gt;
&lt;li&gt;all code is asynchronous, UI engineers shouldn&amp;#39;t worry about concurrency, threads, etc&lt;/li&gt;
&lt;li&gt;we adopt RxJava&lt;/li&gt;
&lt;li&gt;move from blocking api to observable&lt;/li&gt;
&lt;li&gt;this model allows us to optimise endpoints&lt;/li&gt;
&lt;li&gt;every device custom builds their own WS to what they need, they deploy their own endpoints&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Failure happens&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;monitoring in real time via Hystrix (failure management service)&lt;/li&gt;
&lt;li&gt;isolate failure, cluster adapts&lt;/li&gt;
&lt;li&gt;have massive dashboard that shows real state of all services in near real time&lt;/li&gt;
&lt;li&gt;dashboards are mission critical&lt;/li&gt;
&lt;li&gt;a team devoted to real time metrics&lt;/li&gt;
&lt;li&gt;aim: at any point in time, inspect anywhere across the globe and interact/react &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Complex systems work as broken systems, they work due to the redundancies it contains, despite the presence of many flaws&lt;/p&gt;
&lt;h3 id=&quot;talk-6&quot;&gt;Talk 6&lt;/h3&gt;
&lt;p&gt;Sixth and last talk was by &lt;em&gt;Dave Thomas&lt;/em&gt;. He did a bit of summary and commented on some of the ideas exposed during the conference.&lt;/p&gt;
&lt;p&gt;The title was: Oh! It&amp;#39;s reactive! May I touch it?&lt;/p&gt;
&lt;p&gt;Seeds of reactive computing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the idea is quite old&lt;/li&gt;
&lt;li&gt;with more machines, newer cpu, now is more viable&lt;/li&gt;
&lt;li&gt;decision tables, transition tables, etc very flexible and powerful.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reactive - a traits perspective&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;comments on previous talks in the conference&lt;/li&gt;
&lt;li&gt;Erik - reactive is just dual enumerable + futures for push/pull + high order futures&lt;/li&gt;
&lt;li&gt;Martin - responsive design is essential successful reactive solutions, batching, no share state, mechanical sympathy non optional&lt;/li&gt;
&lt;li&gt;Jonas - scalability, scale up, out, actors, reactive can help, no shared state&lt;/li&gt;
&lt;li&gt;Joe - resilience requires isolation, messaging, protocols and simple out of band handling of failure, wire format is essential, protocol is stronger than message type&lt;/li&gt;
&lt;li&gt;Todd - protocols are essential to composable systems, protocols best defined by state machines,  http evolving beyond sync text to two way async binary&lt;/li&gt;
&lt;li&gt;Dean - overview on reactive computing&lt;/li&gt;
&lt;li&gt;Greg - event sourcing as alternative model, support for pushing streams of data&lt;/li&gt;
&lt;li&gt;Lee and Matt - example and design practices, offload ui thread, conflation, streams&lt;/li&gt;
&lt;li&gt;Andrew - responsive and reliable data, data life cycle, journaling (event source)&lt;/li&gt;
&lt;li&gt;Ben - use of reactive to provide a common interface to 800 different services at scale&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do I design reactive apps?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reactive design patterns book&lt;/li&gt;
&lt;li&gt;introduction to rx book&lt;/li&gt;
&lt;li&gt;state machines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Protocol/Sessions types are not just API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;they specify content and wire format of data&lt;/li&gt;
&lt;li&gt;specify message content and types&lt;/li&gt;
&lt;li&gt;specify behaviour (FSM)&lt;/li&gt;
&lt;li&gt;protocols are much harder than API and most people can&amp;#39;t do API...&lt;/li&gt;
&lt;li&gt;REST is so easy anyone can do it wrong&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Debugging of reactive apps?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;can&amp;#39;t use normal debugging way&lt;/li&gt;
&lt;li&gt;reactive debugging requires reactive debugger, new tools&lt;/li&gt;
&lt;li&gt;query the event stream&lt;/li&gt;
&lt;li&gt;future computing will be writing queries, most programs will be queries. Use map, select, project, etc. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hazards&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;actors, hidden queues, reasoning and structures around them&lt;/li&gt;
&lt;li&gt;state machines are very good but can grow a lot easily&lt;/li&gt;
&lt;li&gt;protocols: services often most easily consumed as simple calls&lt;/li&gt;
&lt;li&gt;large STM very difficult&lt;/li&gt;
&lt;li&gt;reactive cost less than value it provides?&lt;/li&gt;
&lt;li&gt;reactive UI challenging due to broken browser model&lt;/li&gt;
&lt;li&gt;lazy pull not always ideal, mix of eager and lazy challenging to deal with&lt;/li&gt;
&lt;li&gt;STM and thread safe implementations need to be isolated from &amp;#39;normal&amp;#39; app code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Actors comes from economic theory of contracts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Known since 1977. Lots of work on them&lt;/li&gt;
&lt;li&gt;sharing, supervisors, async messages, etc&lt;/li&gt;
&lt;li&gt;Coordination: Erlang OTP, critical for correct usage of actors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Batch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDB + HDB&lt;/li&gt;
&lt;li&gt;Ticker plant: listens at the frequency you want, useful for realtime alerts or reports at specific intervals&lt;/li&gt;
&lt;li&gt;batch processing and pub-sub for certain things &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hostage to the UI event model&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Callbacks...&lt;/li&gt;
&lt;li&gt;Let the app handle the events&lt;/li&gt;
&lt;li&gt;Elements should be active objects that react to events&lt;/li&gt;
&lt;li&gt;current architecture comes from legacy badly designed architecture that has been copied and replicated&lt;/li&gt;
&lt;li&gt;UI should be all actor objects, all event driven&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data dependencies are still complicated&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Streams help a lot&lt;/li&gt;
&lt;li&gt;Smalltalk mvc used broadcasting, not enough&lt;/li&gt;
&lt;li&gt;reactive addresses ability to push/pull data but leaves the challenge of complex dependencies which are essential to reactive UIs&lt;/li&gt;
&lt;li&gt;FB React.js may help to fix issue, as can Clojure OM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Long term costs of no schema and text&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;every query becomes a program&lt;/li&gt;
&lt;li&gt;every query requires a parser&lt;/li&gt;
&lt;li&gt;can&amp;#39;t detect schema changes&lt;/li&gt;
&lt;li&gt;object serialisation sucks&lt;/li&gt;
&lt;li&gt;blobs are wrong&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What about HW&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;device drivers have been a plague of OS devs for years&lt;/li&gt;
&lt;li&gt;IO programming could be mapped to memory, simplifying the abstraction&lt;/li&gt;
&lt;li&gt;do FSM and queue support belong to HW? &lt;/li&gt;
&lt;li&gt;we can transfer data from network card to memory, why do we need OS to interfere?&lt;/li&gt;
&lt;li&gt;Do we always need Paxos? How much do you need consistency? &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that&amp;#39;s all. I&amp;#39;m not attending the workshop today, so there will be no report. I believe hte best compliment I can give to the conference is that I&amp;#39;m eagerly waiting for the next edition. A &amp;#39;must attend&amp;#39;.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-2.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-2.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-04-08-React-conf-day-2.html';
		window.disqus_identifier = '2014-04-08-React-conf-day-2';
		window.disqus_title = 'React.conf - Day 2';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>React.conf - Day 1</title>
			<link href="http://www.gumtree.com/devteam//2014-04-08-React-conf-day-1.html"/>
			<updated>2014-04-08T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-04-08-React-conf-day-1.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;React.conf - Day 1 - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Apr 8th, 2014&lt;/span&gt;
				&lt;h1&gt;React.conf - Day 1&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-1.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-1.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;And day 1 of &lt;a target=&quot;_blank&quot; href=&quot;http://reactconf.com/&quot;&gt;React.conf&lt;/a&gt; is over. It&amp;#39;s been a great day, lived up to my expectations. Before getting ready for tomorrow, I&amp;#39;d like to share some comments on the event and notes I took about the talks. The talks (according to &lt;a target=&quot;_blank&quot; href=&quot;https://twitter.com/monkchips/status/453177139576446976&quot;&gt;ReactConf people&lt;/a&gt;) will be available in Youtube in one week. In the meantime, let&amp;#39;s talk React.&lt;/p&gt;
&lt;!-- Read more --&gt;

&lt;p&gt;As I have quite a lot of things to comment about, I&amp;#39;ll just summarise the main points. I know it will seem cryptic, I hope it is good enough to communicate the ideas :) I may have written down something wrong when taking notes, any errors are mine and only mine. Don&amp;#39;t blame the speaker, blame the messenger!&lt;/p&gt;
&lt;h2 id=&quot;the-good&quot;&gt;The Good&lt;/h2&gt;
&lt;p&gt;There were plenty of good things, just highlighting some of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The line up of speakers was great. You could see they are brilliant at what they do&lt;/li&gt;
&lt;li&gt;1 track. Not missing anything is great, I rather have a smaller 1 track conference than a big one where I feel I miss something.&lt;/li&gt;
&lt;li&gt;Friendly organisers, which is always good.&lt;/li&gt;
&lt;li&gt;Nice atmosphere, I don&amp;#39;t think there was any incident (you know, sometimes it happens in conferences... dongle and all that)&lt;/li&gt;
&lt;li&gt;Shoreditch Hipster&amp;#39;s coffee has lived up to its fame. Amazing coffee. I abused it, won&amp;#39;t sleep :(&lt;/li&gt;
&lt;li&gt;Catering was nice, interesting choices but very tasty&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-bad&quot;&gt;The Bad&lt;/h2&gt;
&lt;p&gt;Some areas need improvement for next edition:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;venue was a bit too small. Pretty hard to see slides from the back due to amount of people blocking view.&lt;/li&gt;
&lt;li&gt;the Q&amp;amp;A session in the afternoon were all 3 happening in the same room at the same time, I couldn&amp;#39;t follow at all the second one due to &amp;quot;noise&amp;quot; from the other talks. Pretty disappointing :(&lt;/li&gt;
&lt;li&gt;I feel making the workshops optional was not a good idea. I understand why it was done and I know it was in good faith, but some people will miss half the experience. Next one would be better as a unit. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-talks&quot;&gt;The Talks&lt;/h2&gt;
&lt;p&gt;This first day there were 5 talks and 3 Q&amp;amp;A sessions in the afternoon, of which each developer could attend 2. Let&amp;#39;s summarise main points about the talks.&lt;/p&gt;
&lt;h3 id=&quot;talk-1&quot;&gt;Talk 1&lt;/h3&gt;
&lt;p&gt;First talk was by &lt;em&gt;Erik Meijer&lt;/em&gt; (@headinthebox), who did a very funny talk with a lot of energy. And interesting, too :) Some points:&lt;/p&gt;
&lt;p&gt;The talk was: What does it mean to be Reactive? &lt;/p&gt;
&lt;p&gt;He says he has no clue about what&amp;#39;s reactive, the talk was aimed to find out. Developers should speak as developers, not as pointy haired bosses.&lt;/p&gt;
&lt;p&gt;There are 4 scenarios to consider:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 value with sync access: blocking code&lt;/li&gt;
&lt;li&gt;1 value with async access: Futures&lt;/li&gt;
&lt;li&gt;many values with sync access: Iterables&lt;/li&gt;
&lt;li&gt;many values with async access: Observables &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;#39;s inspect an object. Object likes to be mutated, it has getters, setters, etc.&lt;/p&gt;
&lt;p&gt;What&amp;#39;s a getter? A function &lt;code&gt;() =&amp;gt; A&lt;/code&gt;. A lazy producer, where the consumer is in charge.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A getter is covariant and a functor (can be mapped over).&lt;/li&gt;
&lt;li&gt;A getter can have side effects: exceptions, return nothing, etc. Real signature: &lt;code&gt;() =&amp;gt; Try[Option[A]]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Developer should make all side effects explicit on code&lt;/li&gt;
&lt;li&gt;A getter of getters is an Enumerator/Enumerable&lt;/li&gt;
&lt;li&gt;NOTE: Iterable/Iterator is a bad structure, its methods hasNext/next are bad for side effects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we reverse the arrow of the getter we get &lt;code&gt;A =&amp;gt; ()&lt;/code&gt; which is a setter. Now the producer is in charge, not the consumer. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setter is automatically contravariant&lt;/li&gt;
&lt;li&gt;As with getter we have side effects: exceptions, returning an empty value, etc. Real type is &lt;code&gt;Try[Option[A]] =&amp;gt; ()&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Eric is not fond of pattern matching it seems :)&lt;/li&gt;
&lt;li&gt;Using pattern match for setters uses 3 functions: one to match Try, one for Some and one for None. Observable and Observer accept 3 functions (on complete, on error, on next)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Observable, Enumerator, etc. are just setters and getters with the right signature, making all side effects explicit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They are just interfaces for pull/push systems. Interfaces as good as the implementation underneath&lt;/li&gt;
&lt;li&gt;Example: Iterable is implemented by millions of types which provide additional capabilities (buffers, random access, etc)&lt;/li&gt;
&lt;li&gt;Observable is an interface with many implementations: Event store, Firebase (a reactive db), etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are more explicit effects we should show: latency&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Future type guards agains effects of latency&lt;/li&gt;
&lt;li&gt;you should account for it on getters: &lt;code&gt;() =&amp;gt; Future[Try[Option[A]]]&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;On a setter type is &lt;code&gt;Try[Option[A]] =&amp;gt; Future[Unit]&lt;/code&gt; as latency is on the receiving end&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;#39;s declare reactive as dead, so we can protect its meaning. We are hackers, we should do what is right. Reactive is dead, long live side effects.&lt;/p&gt;
&lt;p&gt;There is an implementation example of the concepts at &lt;a target=&quot;_blank&quot; href=&quot;https://rx.codeplex.com&quot;&gt;Codeplex Rx&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;talk-2&quot;&gt;Talk 2&lt;/h3&gt;
&lt;p&gt;Second talk was by &lt;em&gt;Martin Thompson&lt;/em&gt; (@mjpt777). I found it eye opening, as I do not usually consider most of these things when coding. We are too isolated from the lower layers, but this &amp;#39;high level&amp;#39; approach is a lie, as we are all dependent on low level dependent and this leaks onto us.&lt;/p&gt;
&lt;p&gt;The talk was: Responsive Trait - Responding in a Timely Manner.&lt;/p&gt;
&lt;p&gt;Definition of real time is relative. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hard real time: a defence systems on a warship. &lt;/li&gt;
&lt;li&gt;Soft real time: finance, failure is not catastrophic (relatively)&lt;/li&gt;
&lt;li&gt;Squiggly real time: typical user frustrated due to lack of responsiveness&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes you just need to not be the slowest as if you are then you can be picked up,&lt;/p&gt;
&lt;p&gt;There are things we are not aware of that can bring us to failure. 5 focus areas in the talk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;test and measure&lt;/li&gt;
&lt;li&gt;theory&lt;/li&gt;
&lt;li&gt;practice&lt;/li&gt;
&lt;li&gt;common pitfalls&lt;/li&gt;
&lt;li&gt;useful algorithms and techniques&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Testing and Measuring:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you should use distributed load generation agents&lt;/li&gt;
&lt;li&gt;you need an external observer. This is critical to measure the system under test. You can&amp;#39;t use load generators to measure.&lt;/li&gt;
&lt;li&gt;Pro tip: do continuous performance testing (as part of continuous delivery), this is critical on current generation of apps&lt;/li&gt;
&lt;li&gt;Pro tip: record everything about your app&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The average response time of a system is nonsense as response times don&amp;#39;t follow standard distribution. Mode is more accurate than median or mean, move everything out of mode to mode. Histograms are a big help.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example: a system with 1000 transactions per second has a mean response time of 50 microseconds. If we add a 25 milliseconds GC pause each second, the average goes to 300 microseconds. Average is useless&lt;/li&gt;
&lt;li&gt;Forget averages, think about percentiles (90%, 99%, 99.99%) and which response time you have at that percentile. Like: 99% of responses are under 50 milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Theory:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queueing theory is very important. &lt;/li&gt;
&lt;li&gt;Question: why the more simultaneous users a system has, the response time becomes slower? Queueing theory answers that. Note: this applies also to teams, projects and why projects fail! Math doesn&amp;#39;t lie.&lt;/li&gt;
&lt;li&gt;Due to exponential growth of curve in queue theory, halving response time at 90% usage means system is 10x more efficient &lt;/li&gt;
&lt;li&gt;Pro tip: make sure you have enough capacity&lt;/li&gt;
&lt;li&gt;Bound queues are a requirement to meet SLA. Unbounded queues will never meet an SLA.&lt;/li&gt;
&lt;li&gt;Little&amp;#39;s law: L = lambda*W  where L = queue length, lambda = arrival rate, w = mean time in system. Knowing 2 you can obtain the 3rd.&lt;/li&gt;
&lt;li&gt;Amdahl&amp;#39;s law: Amdahl wanted to show how ugly parallel programming is. &lt;/li&gt;
&lt;li&gt;Sequential code is a bottleneck on performance. Even if only 5% of your code is serial you will never have more than 20x speedup, doesn;t matter how many processors you use..&lt;/li&gt;
&lt;li&gt;Amdahl&amp;#39;s was an optimist! It&amp;#39;s much worse in real life as Universal scalability law shows. There are more penalties in real systems: contention penalty and coherence penalty &lt;/li&gt;
&lt;li&gt;Example: system with contention 25%, 250ms coherence peaks at 64 processors, 12x speedup, from there on additional cpu slow the system&lt;/li&gt;
&lt;li&gt;Big O notation of your algorithm also matters, always chose logarithmic or better.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Practice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We were shown example apps (anonymous)&lt;/li&gt;
&lt;li&gt;One app had 50ms response, but with outliers of X00 ms&lt;/li&gt;
&lt;li&gt;The problems are always similar, just at different levels of scale (seconds, milliseconds, etc)&lt;/li&gt;
&lt;li&gt;Gc can cause spikes due to resizing of structures.&lt;/li&gt;
&lt;li&gt;Generation of temporary objects causes delays while we create them&lt;/li&gt;
&lt;li&gt;Thread affinity and cache misses improve performance a lot for outliers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Common Pitfalls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modern CPU do a lot, but also try to save energy. Coming back from &amp;#39;sleepy&amp;#39; states takes a lot of time&lt;/li&gt;
&lt;li&gt;SMI (system management interrupts) block processors&lt;/li&gt;
&lt;li&gt;Hyperthreading can reduce response rate by sharing resources across threads (contention)&lt;/li&gt;
&lt;li&gt;We have non uniform memory architectures, which may have an impact&lt;/li&gt;
&lt;li&gt;Virtual memory management in Linux is a problem sometimes. Page flushing, IO scheduling, transparent huge pages, swap, ...&lt;/li&gt;
&lt;li&gt;Safepoints in the JVM are worse than orcs. They include: GC stopping threads, de-optimization of code, biased locking, stack traces, etc. You get the drill. All them stop the world before doing anything, bad for performance.&lt;/li&gt;
&lt;li&gt;Virtualization causes slow system calls&lt;/li&gt;
&lt;li&gt;Notify in Java. Awakening a thread is a HUGE cost. Remember: a Future awakes threads!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot;&gt;Law of leaky abstractions&lt;/a&gt;: details of underlying complexity can&amp;#39;t be ignored. They bite us back. Using underlying systems without knowing how they work is a failure.&lt;/p&gt;
&lt;p&gt;On responding in presence of failure (Algorithms and Techniques):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;do clean room experiments: sufficient cpu, intle_idle.max_cstate=0, cpufrq, isocpus, affinity, numctl, cgroups, washed ssd, network buffer sizing, &lt;a target=&quot;_blank&quot; href=&quot;http://www.azulsystems.com/jHiccup&quot;&gt;jHiccup&lt;/a&gt;, etc. Ensure the experiment has a clean environment. Tune the stack.&lt;/li&gt;
&lt;li&gt;Profilers lie. Usually. They profile the easy paths (very specific points),  which bad for cpu or memory intensive apps&lt;/li&gt;
&lt;li&gt;Manual profiling is better: create histograms from events you log in your code&lt;/li&gt;
&lt;li&gt;Pro tip: learn to use histograms&lt;/li&gt;
&lt;li&gt;Batching is a misunderstood technique. Batching can work in real time system via Smart Batching. Example: a DB with multiple producers that want to write to it. You add a batching thread in the middle (receives producers output, sends to db) which removes concurrency and optimises time, also being easier to reason about and more efficient in general&lt;/li&gt;
&lt;li&gt;Pro tip: amortise expensive costs&lt;/li&gt;
&lt;li&gt;Apply backpressure. Bound queues, limit buffers, disallow input once you are full (we are busy so come back later vs take too much input and crash)&lt;/li&gt;
&lt;li&gt;Do non-blocking designs: get out of your own way. Don&amp;#39;t hog resources, try to make progress always in each step. Thinking this way enables smart batching&lt;/li&gt;
&lt;li&gt;Pro tip: beware of hogging resources in synchronous designs. Not only blocking, it may trigger GC, thread context switch, etc. Big no-no&lt;/li&gt;
&lt;li&gt;Use lock-free concurrent algorithms and agree protocols of interaction. Keep code on user space, don&amp;#39;t allow 3rd party interaction (OS calls are expensive in a virtualised world)&lt;/li&gt;
&lt;li&gt;Use observable state machines. If you can observe the state machine without locks you can log it and see progress. Otherwise, they are black boxes in your system.&lt;/li&gt;
&lt;li&gt;Cluster apps for response and resilience. Hide differences between services (cpu, ram, etc) via sequencers (middle layers)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Data Structures and models: there is a world beyond map and list. And it is fundamental for your performance.&lt;/p&gt;
&lt;p&gt;Something is coming. There will be X connected devices by 2020, where X is 20 to 75 billion. That is the Internet of things. Volumes going up over and over. You have to think hard about improving service times, removing all contention, to be ready for that.&lt;/p&gt;
&lt;h3 id=&quot;talk-3&quot;&gt;Talk 3&lt;/h3&gt;
&lt;p&gt;Third talk was by &lt;em&gt;Jonas Bonér&lt;/em&gt; (@jboner). The talk was good, although the 1st part seemed to overlap a bit with the previous talk. The second part was outstanding.&lt;/p&gt;
&lt;p&gt;The talk was: Scalable Trait - Reactive Supply to Changing Demand &lt;/p&gt;
&lt;p&gt;On Scalability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scalability: the house in which Armhdal&amp;#39;s wakes up each day and it&amp;#39;s ruled by the iron fist&lt;/li&gt;
&lt;li&gt;Scalable system: capable of being easily expanded and upgraded on demand&lt;/li&gt;
&lt;li&gt;Scalable system: when we increase resources performance increases proportionally to resources added&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scalability vs Performance, sometimes a blurry line:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance: capability of a system to provide certain response time&lt;/li&gt;
&lt;li&gt;Scalability: capacity of a system to maintain that response time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scale on demand? What does it mean?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React to increasing load over time, either unpredictable spikes or predictable increase in load. &lt;/li&gt;
&lt;li&gt;Deal with rapid growth from technical and business perspective (pay for what you use only, important in PaaS world)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rules of game have changed from 60s-2000 to today: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single machine vs clusters&lt;/li&gt;
&lt;li&gt;1 cpu vs multiple cpu&lt;/li&gt;
&lt;li&gt;Expensive ram vs cheap ram: in-memory db, etc&lt;/li&gt;
&lt;li&gt;Expensive disk vs cheap disk: no need to delete data, can keep history&lt;/li&gt;
&lt;li&gt;Slow network vs fast network: faster to write to network than disk&lt;/li&gt;
&lt;li&gt;Few users vs many users: orders of magnitude more users&lt;/li&gt;
&lt;li&gt;Small data sets vs massive data sets: moving data around is a new challenge&lt;/li&gt;
&lt;li&gt;Latency in seconds vs latency in milliseconds: users are extremely impatient, latency means less users keep around and you get less money&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A change is around the corner: Internet of things&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Health trackers, intelligent appliances, etc&lt;/li&gt;
&lt;li&gt;All of them produce a lot of data&lt;/li&gt;
&lt;li&gt;The change is coming fast. Cost gravity at work: technology getting exponentially advanced and cheaper&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scale Up&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scale vertically. &lt;/li&gt;
&lt;li&gt;Local data is fast. CPU cache: l1 and l2 are fast, l3 much slower, etc&lt;/li&gt;
&lt;li&gt;CPU is gambling, takes bets trying to beat the system. Assumes data close to each other, data present in cache, boolean paths in app (branch calculation)&lt;/li&gt;
&lt;li&gt;Critical: maximise locality reference, minimise contention in your app&lt;/li&gt;
&lt;li&gt;Common contention points: physical (network IO, db access, etc), app layer (synchronous code, concurrent locks, even optimistic concurrency)&lt;/li&gt;
&lt;li&gt;Never ever block, waking up a thread is slow, breaks scalability&lt;/li&gt;
&lt;li&gt;Fully embrace async message passing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To scale: Divide and Conquer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use pipelining, paths through which events travel. Can be synchronous or asynchronous, but they are isolated so synchronous doesn&amp;#39;t block other paths&lt;/li&gt;
&lt;li&gt;Use a single writer principle.When you have multiple producers writing to 1 IO device you have a contention point. 1 writer reduces contention, smart batching all again.&lt;/li&gt;
&lt;li&gt;Use &amp;#39;final&amp;#39; in Java (immutable). It gives you code that doesn&amp;#39;t lie&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Immutable state&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Immutability is great for facts: events, DB snapshots&lt;/li&gt;
&lt;li&gt;It is less ideal for working data set as it can increase contention&lt;/li&gt;
&lt;li&gt;Better use a Share Nothing architecture with mutable state within each isolated unit&lt;/li&gt;
&lt;li&gt;Amdhal&amp;#39;s law again: you need to be asynchronous and non-blocking all the way down, so Share Nothing&lt;/li&gt;
&lt;li&gt;Share Nothing gives great locality reference and reduces contention, which means better performance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scale on demand&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We need elasticity, to add resources on the fly. Scale out.&lt;/li&gt;
&lt;li&gt;Distributed computing is the new normal: mobile, cloud, rest, NoSQL, big data, ...&lt;/li&gt;
&lt;li&gt;Try to overcome inherent issues: information travels at speed of light, independent things fail independently&lt;/li&gt;
&lt;li&gt;Things fail at a higher rate on distributed system, we have to embrace that&lt;/li&gt;
&lt;li&gt;We have nodes, where each node is isolated and we need middleware to communicate across nodes. This in one server, we have many servers that communicate between them. Think a fractal system.&lt;/li&gt;
&lt;li&gt;Remember Peter Deutsch fallacies of distributed computing: network is reliable, latency is 0, bandwidth is infinite, network is secure, topology doesn&amp;#39;t change, there is only 1 administrator, transport cost is 0, network is homogeneous. All false.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Graveyard of distributed systems&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distributed shared mutable state is evil^n where n is the number of nodes&lt;/li&gt;
&lt;li&gt;Guaranteed delivery doesn&amp;#39;t exist&lt;/li&gt;
&lt;li&gt;Distributed objects are a lie&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maximise locality, key in distributed system due to cost of failing to do so&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use sticky load balancing and sharding&lt;/li&gt;
&lt;li&gt;Buddy replication: replicate data to buddies only, not everywhere. Buddies not on same node (nor rack)!&lt;/li&gt;
&lt;li&gt;Consistent hashing: distributed hashing that maps data across buckets evenly&lt;/li&gt;
&lt;li&gt;Coordination in the cluster (kind of)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Strong consistency&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We want linearizability&lt;/li&gt;
&lt;li&gt;We have some protocols: viewstamped replication, RAFT consensus&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t use it if not needed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CAP theorem&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sparked NoSQL movement&lt;/li&gt;
&lt;li&gt;Based on linearizability which is not always needed, but CAP assumes it is needed. &lt;/li&gt;
&lt;li&gt;Instead of fully adopting CAP we can look at it, learn and adopt parts of it&lt;/li&gt;
&lt;li&gt;Use only those guarantees you need&lt;/li&gt;
&lt;li&gt;Pro tip: read paper &lt;a target=&quot;_blank&quot; href=&quot;http://www.infoq.com/articles/cap-twelve-years-later-how-the-rules-have-changed&quot;&gt;CAP 12 years later&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eventual consistency&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Minimising coordination means better scalability&lt;/li&gt;
&lt;li&gt;Word &amp;#39;eventually&amp;#39; is the key: not well defined, depends on your scenario &lt;/li&gt;
&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://highscalability.com/blog/2010/12/23/paper-crdts-consistency-without-concurrency-control.html&quot;&gt;CRDT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Keep history in data type, but it can be expensive (can&amp;#39;t grow forever) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Life beyond distributed transactions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do not implement large scalable apps assuming distributed transactions &lt;/li&gt;
&lt;li&gt;Solution: Domain events. Event: immutable fact that happened&lt;/li&gt;
&lt;li&gt;Database is a cache of a subset of the log (append only logging)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Event log&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Append only log&lt;/li&gt;
&lt;li&gt;Is a DB of facts&lt;/li&gt;
&lt;li&gt;Never delete&lt;/li&gt;
&lt;li&gt;1 single event log: strong consistency&lt;/li&gt;
&lt;li&gt;Multiple event logs: strong + eventual consistency (used a lot in DDD and aggregate roots)&lt;/li&gt;
&lt;li&gt;An aggregate root works as a transactional integrity guardian in its bounded context&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Share Nothing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully embrace it&lt;/li&gt;
&lt;li&gt;Shipping data around is expensive&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Location transparency&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Embrace the network&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Same principles can be applied to any level of the app: cluster to app to cpu. Scaling up and out are the same thing, the same concepts.&lt;/p&gt;
&lt;p&gt;Remember: minimise contention, maximise locality of reference, use share nothing designs&lt;/p&gt;
&lt;h3 id=&quot;talk-4&quot;&gt;Talk 4&lt;/h3&gt;
&lt;p&gt;Fourth talk was by &lt;em&gt;Joe Armstrong&lt;/em&gt; (@joeerl), principal inventor of Erlang, which gave very interesting points of view on API and Protocols. His talk signalled crucial steps for service reliability. You could feel his years of experience talking. An honour.&lt;/p&gt;
&lt;p&gt;The talk was: Resilient Trait - K things I know about building resilient reactive systems, where K &amp;gt;= 32 (renamed to Stuff I learned building reactive systems)&lt;/p&gt;
&lt;p&gt;He talked about systems that run forever, never fail.&lt;/p&gt;
&lt;p&gt;The ultimate reactive device is a telephone. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lots of people at once&lt;/li&gt;
&lt;li&gt;Decisions made in milliseconds&lt;/li&gt;
&lt;li&gt;Small latency between users&lt;/li&gt;
&lt;li&gt;Location transparent service (endpoints - phone number)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Telecommunication switching service properties&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has to be very resilient&lt;/li&gt;
&lt;li&gt;No downtime allowed&lt;/li&gt;
&lt;li&gt;Based on messages passed (request/response)&lt;/li&gt;
&lt;li&gt;Relevant paper: &lt;a target=&quot;_blank&quot; href=&quot;http://erlang.se/publications/bjarnelic.pdf&quot;&gt;Concurrent functional programming for telecommunications: a case study of technology introduction (2000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Properties show some obvious overlap with &lt;a target=&quot;_blank&quot; href=&quot;http://www.reactivemanifesto.org/&quot;&gt;Reactive Manifesto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Erlang: 1985&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share nothing - immutable&lt;/li&gt;
&lt;li&gt;Asynchronous message passing&lt;/li&gt;
&lt;li&gt;Event (message) driven&lt;/li&gt;
&lt;li&gt;Distributed&lt;/li&gt;
&lt;li&gt;Concurrent&lt;/li&gt;
&lt;li&gt;Soft real time&lt;/li&gt;
&lt;li&gt;Dynamic code upgrade&lt;/li&gt;
&lt;li&gt;Nothing new nowadays, all this existed before, just expanding now to more fields&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ericsson systems for 3g/4g: 50% of world telecommunications. 1 rack serves 18 million users per node, 1152 million in pooled config &lt;/p&gt;
&lt;p&gt;EviL: Shared memory concurrency. Can&amp;#39;t work unless you break laws of physics. Good: Message passing concurrency. &lt;/p&gt;
&lt;p&gt;Connecting things together&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assume black boxes that contain programs, can be in any language. We are good at programming languages, there are a lot&lt;/li&gt;
&lt;li&gt;An arrow connects the boxes. What is inside the arrow that connects the boxes? Usually badly documented API for a library, and each library communicates via undocumented stuff&lt;/li&gt;
&lt;li&gt;Solution: read the code? Wireshark? NO! Use of Wireshark is an admission of failure&lt;/li&gt;
&lt;li&gt;Solution: describe what&amp;#39;s in the wire. Inside the arrow there are protocols. There exist lots of protocols. We are very bad describing protocols.&lt;/li&gt;
&lt;li&gt;Protocols are contracts. Contracts assign blame&lt;/li&gt;
&lt;li&gt;Move from software that doesn&amp;#39;t work and we don&amp;#39;t know why to software that doesn&amp;#39;t work but we know why&lt;/li&gt;
&lt;li&gt;Client and server are isolated by a socket. Should be easy to replace either of them. It isn&amp;#39;t. Client is described by a state machine, server too is a state machine. What&amp;#39;s in the wire?&lt;/li&gt;
&lt;li&gt;Contract checker: describes what&amp;#39;s in the wire&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do we describe contracts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Often described in API, not a good idea. API are usually broken, badly described&lt;/li&gt;
&lt;li&gt;API doesn&amp;#39;t say if a program is wrong (open file, close file, read is ok according to API but it fails on execution)&lt;/li&gt;
&lt;li&gt;Solution: state machine (FSM) associated to API so we can&amp;#39;t do operations on wrong state. We are describing protocol!&lt;/li&gt;
&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://www.sics.se/~joe/ubf&quot;&gt;UBF&lt;/a&gt;: dynamic session types &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RPC fail differently to PC&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fails in remote server, you don&amp;#39;t hear back&lt;/li&gt;
&lt;li&gt;Promises? people can break them &lt;/li&gt;
&lt;li&gt;One solution: request gets an ACK, later on receives the real response. How long should be wait? Specification defines that. Also defines what should you do on timeout (retry is an option or not, etc)&lt;/li&gt;
&lt;li&gt;ACK may contain estimated delay until response&lt;/li&gt;
&lt;li&gt;We can embed redirect into ACK if needed so client retries call on another endpoint&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Handle errors out of band&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By default we expect return of a value or an error&lt;/li&gt;
&lt;li&gt;But we should redirect errors to another manager (client gets normal replies, manager gets errors and acts on them)&lt;/li&gt;
&lt;li&gt;Example: Akka supervision. Handling errors at a level that has more information to decide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Avoid impedance mismatch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some systems just don&amp;#39;t blend&lt;/li&gt;
&lt;li&gt;Avoid having to reparse data all the time (js -&amp;gt; json -&amp;gt; php -&amp;gt; sql ... wasting lots of time on conversion!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;D (distributed) and ND systems behave differently &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trivial problems in ND can be impossible in D&lt;/li&gt;
&lt;li&gt;Failure modes are different&lt;/li&gt;
&lt;li&gt;Debugging in D is hard&lt;/li&gt;
&lt;li&gt;System is never stable in D&lt;/li&gt;
&lt;li&gt;Start D programming early, not late, so you can find issues early&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don&amp;#39;t break the laws of physics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can&amp;#39;t &lt;/li&gt;
&lt;li&gt;Information won&amp;#39;t travel faster than speed of light&lt;/li&gt;
&lt;li&gt;Latency is there, you have to manage it, you can&amp;#39;t erase it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CAP theorem is a consequence of laws of physics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Messages not delivered&lt;/li&gt;
&lt;li&gt;Machines fail&lt;/li&gt;
&lt;li&gt;Message propagation takes time&lt;/li&gt;
&lt;li&gt;Consistent | Available | Partition tolerant. Pick 2.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scale down, not up. Start with assuming millions of users when planning architecture, to avoid having to redo everything once you grow.&lt;/p&gt;
&lt;p&gt;Names&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One of the two difficult problems in programming&lt;/li&gt;
&lt;li&gt;We have data we want to store. In which file, which folder, which table, which db, where are they located?&lt;/li&gt;
&lt;li&gt;Git approach: name is the checksum of the file, no need of directory name, host found by distributed hash &lt;/li&gt;
&lt;li&gt;Use content hashes as names (like git)&lt;/li&gt;
&lt;li&gt;Use DHT for host discovery (like kademlia)&lt;/li&gt;
&lt;li&gt;Avoids having 2 files with the same name that do different things. System can select the proper file by using hash provided&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Measure, don&amp;#39;t guess&lt;/p&gt;
&lt;p&gt;Get granularity of concurrency right&lt;/p&gt;
&lt;p&gt;Use a decent concurrency model&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Concurrent is NOT parallel&lt;/li&gt;
&lt;li&gt;Concurrent: 2 queues, 1 coffee machine&lt;/li&gt;
&lt;li&gt;Parallel: 2 queues, 2 coffee machine&lt;/li&gt;
&lt;li&gt;Storing state in DB is not a concurrency model&lt;/li&gt;
&lt;li&gt;Callback hell is not concurrency&lt;/li&gt;
&lt;li&gt;Asynchronous callbacks with everything in a main thread is not concurrency&lt;/li&gt;
&lt;li&gt;Locking the full machine to do something is not concurrency&lt;/li&gt;
&lt;li&gt;Mirror the concurrency implicit in the problem, if possible&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Postel&amp;#39;s law: be conservative on sending, liberal in receiving&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fail early&lt;/li&gt;
&lt;li&gt;Fail fast&lt;/li&gt;
&lt;li&gt;Never do defensive programming&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t send faulty data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Joe&amp;#39;s law: CRASH. And then recover.&lt;/p&gt;
&lt;p&gt;We can&amp;#39;t avoid or stop FP, shared nothing, etc. It&amp;#39;s a wave coming. We need to break systems to small, understandable, message passing systems. Otherwise, we can&amp;#39;t understand them, they won&amp;#39;t work. This year: 1024 cpu with 1mb memory each. Monolithic apps won&amp;#39;t use them.&lt;/p&gt;
&lt;h3 id=&quot;talk-5&quot;&gt;Talk 5&lt;/h3&gt;
&lt;p&gt;The last talk of the day was by &lt;em&gt;Todd L. Montgomery&lt;/em&gt; (@toddlmontgomery). The talk was interesting (as all the others!) specially due to it focussing on the issues from a slightly different point of view. &lt;/p&gt;
&lt;p&gt;The talk was: Event-Driven - The Only Way (It’s Gonna) Fly! &lt;/p&gt;
&lt;p&gt;The world is event driven, see Breaking news. Life is event driven, se the messages you get in Whatsapp, embarrassing photos sent by friends, etc.&lt;/p&gt;
&lt;p&gt;GUI development? All event driven, for all the same reasons why a service in Back End should be. It is still done poorly (modal dialogs, clicks that fires a blocking rest call, constant logging) but event driven. &lt;/p&gt;
&lt;p&gt;Event-driven&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is all about reactivity, asynchrony&lt;/li&gt;
&lt;li&gt;Asynchrony: an event can happen while you process another event&lt;/li&gt;
&lt;li&gt;Decoupling: dependency comes into play when we need something specific. &lt;/li&gt;
&lt;li&gt;Coupling &amp;amp; synchrony: reason why we can&amp;#39;t have nice things. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My code doesn&amp;#39;t block? Many people say so but&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging appender to console (IO)&lt;/li&gt;
&lt;li&gt;Java 7 Try block with resource&lt;/li&gt;
&lt;li&gt;Launch a query on a db in a local file&lt;/li&gt;
&lt;li&gt;All the above block! Sometimes is easy to not realise something blocks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Blocking has its place, but also serious limitations&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request-Response cycle: a sequence of delay + processing + delay (delay - network latency). While you wait, you block. Nothing happens. &lt;/li&gt;
&lt;li&gt;Request-Eesponse is a serialisation point, Amdahl&amp;#39;s comes after you and limits scalability&lt;/li&gt;
&lt;li&gt;All &amp;quot;hidden&amp;quot; serialised spots affect performance A LOT! 5% serialisable code is not common, Amdahl&amp;#39;s penalties are usually much bigger &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Argument people say: blocking makes error handling easy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Try-catch model, goto fail...&lt;/li&gt;
&lt;li&gt;Error handling has nothing to do with blocking&lt;/li&gt;
&lt;li&gt;Has to do with how you treat errors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;State machines rock&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many different implementations in software: transition tables (like a graph table), java enums with methods, js prototypes, table with lambdas&lt;/li&gt;
&lt;li&gt;Implementation is a personal preference. But personally better to try making events explicit, don&amp;#39;t hide behind abstractions, give info to developer (example: switch statement). Downside of this approach is performance, evaluate beforehand&lt;/li&gt;
&lt;li&gt;Pro tip: make events observable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;State machines are one of the most testable entities there are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does code implement SM correctly?&lt;/li&gt;
&lt;li&gt;Is design of SM safe, correct verifiable?&lt;/li&gt;
&lt;li&gt;Pro tip: use &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/SPIN_model_checker http://spinroot.com/spin/whatispin.html&quot;&gt;SPIN model checker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;State machines examples&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hardware state machines are usually very resilient, we can learn from them&lt;/li&gt;
&lt;li&gt;TCP: active closing state is a mess. Works, resilient, but ugly as sin&lt;/li&gt;
&lt;li&gt;Cache states for intel processors: elegant, large amount of symmetry, transitions to same state. Works very well, extremely resilient. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Evolution of REST&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;REST has been always event driven. &lt;/li&gt;
&lt;li&gt;Origin: HTTP is worst protocol ever (specially 0.9, 1.0). Synchronous request - response (both are events). To send multiple requests: one at a time. Request, wait for response, next request&lt;/li&gt;
&lt;li&gt;Web services. Improvement on http, they return ACK so you can do work while waiting for response. Synchronous request and response (on their ends) but somehow asynchronous request-response cycle&lt;/li&gt;
&lt;li&gt;Websocket. Focus on streaming. Sends http upgrade request (ala TLS), returns ACK on switch. Can get events from server and send to server from client. You can ingest many requests. Fully asynchronous request/response, bidirectional. But it is only a transport protocol, you need to define your own protocol on top for messages of your app. Think on full duplex &amp;#39;tcp over web&amp;#39;&lt;/li&gt;
&lt;li&gt;SPDY &amp;amp; http/2 (drafts). Use channels, all asynchronous events, asynchronous request-response. Multiple streams, no stupid headers, &amp;#39;binary&amp;#39; encoding&lt;/li&gt;
&lt;li&gt;Websocket over http/2. The holy grail. Asynchronous request-response plus streaming/ingest. Fully asynchronous, full duplex, many channels and streams. Ideal for Internet of Things.&lt;/li&gt;
&lt;li&gt;Others: CoAP, MQTT, AMQP, SCADA (has limitations). All event driven, some blocking &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Asynchronous message passing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share state by passing messages, not by exposing mutable shared state&lt;/li&gt;
&lt;li&gt;Asynchronous message passing is very closely tied to the network&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conceptual model&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A message is payload on wire, an event is what causes state transition&lt;/li&gt;
&lt;li&gt;Events are fire and forget&lt;/li&gt;
&lt;li&gt;This way you lower coupling (MASSIVELY)&lt;/li&gt;
&lt;li&gt;Errors are just events. Nothing special, another case to consider, no special boilerplate for them.&lt;/li&gt;
&lt;li&gt;This changes way you view the world&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Protocol&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A protocol is a set of conventions governing the treatment and formatting of data in electronic communications system&lt;/li&gt;
&lt;li&gt;Formatting is key word here&lt;/li&gt;
&lt;li&gt;Treatment is also key word&lt;/li&gt;
&lt;li&gt;Code prescribing strict adherence to correct etiquette and precedence&lt;/li&gt;
&lt;li&gt;By thinking about this upfront you make protocols easier to guess and work with&lt;/li&gt;
&lt;li&gt;Composability is all about protocol &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Event Driven: there is no spoon, we do it all the time, it&amp;#39;s been there for long.&lt;/p&gt;
&lt;h3 id=&quot;q-a-1&quot;&gt;Q&amp;amp;A 1&lt;/h3&gt;
&lt;p&gt;After the talks there were a series of Q&amp;amp;A sessions with speakers in the conference (both for day 1 and day 2) so they could answer questions. I&amp;#39;ve taken notes on the questions answered, I probably missed many things as the talk was pretty interactive with many people participating (despite a slow start) but I guess the core elements are in there. Errors in transcriptions are my own.&lt;/p&gt;
&lt;p&gt;The Q&amp;amp;A I attended was about scalability.&lt;/p&gt;
&lt;p&gt;Q: you mentioned no in-place update, append only. Scenario: change password, log out, log in again.  How does it work?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You decide what eventual consistency means, in this case you may favour consistency vs availability, but it&amp;#39;s your call&lt;/li&gt;
&lt;li&gt;Full replication has a price, you choose guarantees on your scope, what are you willing to sacrifice.&lt;/li&gt;
&lt;li&gt;In Datomic the DB is snapshotted forever, you change password and old versions have old, newer have new. &lt;/li&gt;
&lt;li&gt;You can subscribe to notifications of receiving change password event&lt;/li&gt;
&lt;li&gt;How long of a delay can you tolerate on eventual consistency? Sometimes 100 ms is enough, sometimes you want more.&lt;/li&gt;
&lt;li&gt;Netflix does replication in sub-x00 ms times, usually this is a non-issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q: Rx frameworks, arguments in favour of Iteratees point to backpressure. What is the answer to backpressure for Rx programming?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Currently developer has to code it&lt;/li&gt;
&lt;li&gt;Under development for Rx (exploring concepts) a way to add backpressure to Rx. Many options being considered, ETA at least 2 months&lt;/li&gt;
&lt;li&gt;You can use batches, drop data, buffer data&lt;/li&gt;
&lt;li&gt;They want for it to become 1st class support on Rx&lt;/li&gt;
&lt;li&gt;Rx has 3 cases where operators have unbounded queues, they want to fix it as app can blow up there&lt;/li&gt;
&lt;li&gt;Eric Mejer had mathematically pure description of observable on his slides, in practice is not so great, needs improvement&lt;/li&gt;
&lt;li&gt;Akka Reactive streams, same effort, something released soon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q I heard from the disruptor talk that less threads are better. But in Akka you have many threads that share objects which causes contention. Isn&amp;#39;t it the opposite of what was said? Can be optimised? Memory efficiency?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Akka multiplexes over full threadpools&lt;/li&gt;
&lt;li&gt;This points has been talked a lot internally&lt;/li&gt;
&lt;li&gt;Not clear cut, the most expensive thing is when the cpu doesn&amp;#39;t know what to do. Depends on the core behaviour of your actor.&lt;/li&gt;
&lt;li&gt;It makes sense to have 1 actor in 1 cpu core and process as much as it can. &lt;/li&gt;
&lt;li&gt;Pipeline processing, if you process media across actors it may be cheaper to keep data local and swap actors, bring actors to data&lt;/li&gt;
&lt;li&gt;Which one is best? Depends on your case&lt;/li&gt;
&lt;li&gt;Current;y you can tune that yourself: actor with dedicated thread, or actors sharing thread, then use native libs to assign thread to cpu&lt;/li&gt;
&lt;li&gt;On project (future Akka development): smarter scheduling. No time to do it yet&lt;/li&gt;
&lt;li&gt;In some cases Disruptor model is better than Akka, use best tool for the job. Akka is more generic and for some people Akka is enough, for others Disruptor is better&lt;/li&gt;
&lt;li&gt;A case of understanding requirements before deciding&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don&amp;#39;t optimise before knowing it&amp;#39;s not good enough, sometimes you get surprises with &amp;#39;expected worse tools&amp;#39;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How can &amp;#39;normal people&amp;#39; (aka not spending life reading papers) use these techniques? &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix showed 60-75 engineers in many languages migrating to use Rx across all these languages. All interfaces are reactive, Rx. All hard paths for every service are coded&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Developers hate it at first. After 6 weeks they love it, can&amp;#39;t go back to previous way. There is a learning curve. Higher upfront cost of learning&lt;/li&gt;
&lt;li&gt;Developers are knowledge workers, not blue collar workers, shouldn&amp;#39;t be afraid of these things as complexity is growing and without sharing knowledge we can&amp;#39;t solve the issues&lt;/li&gt;
&lt;li&gt;Yes, it took people time to convert, once they saw how we make complex things logic and simple to reason about they were converted. Once you cross the threshold is hard to go back to the old way&lt;/li&gt;
&lt;li&gt;You shouldn&amp;#39;t use reactive at all if it doesn&amp;#39;t simplify your problem&lt;/li&gt;
&lt;li&gt;You can&amp;#39;t build a system that needs it without, you can get crazy. Futures (concurrent futures) in Java can be hard to use, gets insane really fast. That is why we have Scala future, Twitter future, etc. Once people sees how to solve problem in a sane way, they adopt it&lt;/li&gt;
&lt;li&gt;It is harder initially because is unfamiliar. But later on complexity flattens, as everything is broken down into pieces&lt;/li&gt;
&lt;li&gt;You can&amp;#39;t get systems that constantly grow in complexity in your head, need to break problem in small manageable pieces, so you can reason about it&lt;/li&gt;
&lt;li&gt;Reactive has failure model built in, which means is easier to handle without the odd ways EJB and other models do it&lt;/li&gt;
&lt;li&gt;Are you trying to justify why things should be more complex? No, without these tools we can tackle some problems. Minor increase in complexity up-front to be able to build more complex systems&lt;/li&gt;
&lt;li&gt;Actor model is simple, makes concurrency much easier to understand, once it clicks simplifies life&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q: Why futures in some cases?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Futures are simpler to integrate with existing systems, Akka brings a full ecosystem which may make things more complex initially, maybe not needed. Small steps&lt;/li&gt;
&lt;li&gt;Separate how do we handle async vs concurrency model&lt;/li&gt;
&lt;li&gt;10+ years of code in Netflix, futures allow step by step transition&lt;/li&gt;
&lt;li&gt;(counterpoint) People are used to synchronous way of things, actors facilitate that transition as inside an actor everything is synchronous. Rx can be harder due to the parallelism implicit, slightly harder to reason. Actors may be simpler as you don&amp;#39;t mix different execution scopes&lt;/li&gt;
&lt;li&gt;Akka streams because there is a need for both tools, some problems are better for Rx, some better for actors. Actors is more for long living concurrency, Rx for streams.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix has moved to fully stateless services, state in Memcached&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With Memcached SiteOps people are interested in keeping 1 cache per machine, vs replication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Netflix replicates 1 key across many instances, but keys are ephemeral, if lost then they are lost, don&amp;#39;t care. Currently working on system that uses Dynamo as front persistence layer. Aim: Dynamo style memcached&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Values sent to SQS (queue) and replicated to many memcached&lt;/li&gt;
&lt;li&gt;Data persistence team looking at having a dynamo style front to handle efficiently storage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q: Why not cassandra?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Early test seemed ok, in practice is worse than Memcached. Cassandra for persistence, Memcached for cache (ephemeral). Data is 99% cached, 1% hits Cassandra. &lt;/li&gt;
&lt;li&gt;Netflix uses 3 Amazon regions, all in sync (massive ring)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q: Could you implement Cassandra with Akka?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It fits the model really well, it is possible. It&amp;#39;s a good fit.&lt;/li&gt;
&lt;li&gt;Big liability if implementation has an error&lt;/li&gt;
&lt;li&gt;Akka does many things other systems do, they do half the things Dynamo does, it could be theoretically easy to extend to replicate some other systems as we already are half way. Others do it best, no point on wasting effort. We implemented these things because they were useful to us, not because it was NoSQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Q: Attitude towards redundant data? It is ok to replicate data across services to reduce temporal coupling?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Depends, which kind of replication, etc. Everything has a price, how important is that on your system, etc?&lt;/li&gt;
&lt;li&gt;Long tail, when using many servers sometimes one will lag. Duplicate requests, discard duplicated responses, reduces total processing time on long tail. But it has a cost (note: that was duplicating services more than data)&lt;/li&gt;
&lt;li&gt;Duplicating data: life beyond distributing transactions paper. You have entities within which you are consistent, but entities don&amp;#39;t need to be consistent between them&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;q-a-2&quot;&gt;Q&amp;amp;A 2&lt;/h3&gt;
&lt;p&gt;I wanted to attend the &lt;em&gt;Resilient Q&amp;amp;A&lt;/em&gt; but due to noise from neighbouring Q&amp;amp;A and me being on last row (too slow!) I couldn&amp;#39;t really follow. &lt;/p&gt;
&lt;p&gt;The only things I could write down:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fault tolerance needs at least 2 computers. 1 computer can&amp;#39;t provide it&lt;/li&gt;
&lt;li&gt;For resilience you have to understand your distribution process and that it takes time for information to travel across the wire&lt;/li&gt;
&lt;li&gt;Human error happens, rely on automatic systems that prevent it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All in all, I can only thanks the organisers. Great job, please repeat it next year. See you tomorrow for the second day (my last as I don&amp;#39;t attend the workshops).&lt;/p&gt;
&lt;p&gt;Did I say the coffee is amazing?&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-1.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-08-React-conf-day-1.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-04-08-React-conf-day-1.html';
		window.disqus_identifier = '2014-04-08-React-conf-day-1';
		window.disqus_title = 'React.conf - Day 1';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>The end of ORM</title>
			<link href="http://www.gumtree.com/devteam//2014-04-01-the-end-of-orm.html"/>
			<updated>2014-04-01T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-04-01-the-end-of-orm.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;The end of ORM - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Apr 1st, 2014&lt;/span&gt;
				&lt;h1&gt;The end of ORM&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-01-the-end-of-orm.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-01-the-end-of-orm.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;A link-bait title, I&amp;#39;m aware, but please indulge me while I try to expose some thoughts about &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;ORM&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;http://martinfowler.com/eaaDev/EventSourcing.html&quot;&gt;Eventsourcing&lt;/a&gt; that have recently crossed my mind. I wish to go down a theory-crafting path exploring these thoughts and I will welcome any comments on the matter. &lt;/p&gt;
&lt;p&gt;As the sage said, stay a while and listen...
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-impedance-mismatch&quot;&gt;The impedance mismatch&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s start with a bit of basic context. Most decent sized applications need to persist information so it can be retrieved later. Traditionally, this has been achieved via use of &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Relational_database_management_system&quot;&gt;RDBMS&lt;/a&gt;. More recently, &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Nosql&quot;&gt;NoSQL&lt;/a&gt; movement has promoted alternatives. But, in the end, we need a storage area for that data.&lt;/p&gt;
&lt;p&gt;But this is not without problems. The prevalent development model is based on &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Object-oriented&quot;&gt;Object Oriented&lt;/a&gt; programming along &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Relational_database_management_system&quot;&gt;relational databases&lt;/a&gt;. This triggers what is known as &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Object-relational_impedance_mismatch&quot;&gt;Object-relational impedance mismatch&lt;/a&gt;, which is a fancy way to say that they don&amp;#39;t work well together for many reasons, some subtle and others not so. &lt;/p&gt;
&lt;p&gt;This is not a new problem, obviously, and people have tried quite hard to provide a solution or something that eases the pain. From a developer point of view the use of &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Object-relational_mapping&quot;&gt;ORM&lt;/a&gt; is intended to alleviate the problem, even if only slightly. Tools like &lt;a target=&quot;_blank&quot; href=&quot;http://hibernate.org/&quot;&gt;Hibernate&lt;/a&gt; take care of communication with the relational layer so the developer doesn&amp;#39;t need to spend time on it. They are not perfect, though, and the &lt;a target=&quot;_blank&quot; href=&quot;http://www.joelonsoftware.com/articles/LeakyAbstractions.html&quot;&gt;law of leaky abstractions&lt;/a&gt; hits hard. Anyone working with Hibernate may have found pretty inefficient queries being run by the framework, which means it is time for the developer to delve deep and tell the tool how it should be done. But this means going down to a level, the database, which resurfaces the impedance issues mentioned before.&lt;/p&gt;
&lt;p&gt;So ORM fail as a complete solution. But this must be a pretty serious problem, as we (developers) devote tons of effort to it. Look at this &lt;a target=&quot;_blank&quot; href=&quot;http://manuel.bernhardt.io/2014/02/04/a-quick-tour-of-relational-database-access-with-scala/&quot;&gt;list of relational database access tools for Scala&lt;/a&gt;. I count 6 different tools to provide a communication layer between your code (Scala) and the persistence area. We are talking for only one language, not checking Python or Java for similar lists, nor any in-house system developed before ORM were commonplace. And they are good tools, production ready, not pet projects of some developer that wants to experiment. &lt;/p&gt;
&lt;p&gt;How many man hours are we devoting to this each year?&lt;/p&gt;
&lt;p&gt;Even if the development world is moving towards a more functional paradigm, as the changes in &lt;a target=&quot;_blank&quot; href=&quot;./2014-03-05-java-8-is-coming.html&quot;&gt;Java 8&lt;/a&gt; seem to confirm, and even if &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Nosql&quot;&gt;NoSQL&lt;/a&gt; has become a viable alternative, the issue persists. We may not have impedance mismatch, but we still use transformation layers to communicate with the database, tools that work with our data objects and try to convert them to a format suitable for storage. You think &lt;a target=&quot;_blank&quot; href=&quot;https://www.mongodb.org/&quot;&gt;MongoDB&lt;/a&gt; may solve this by being a document store and then you see this:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;, 
    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BasicDBObject(&lt;span class=&quot;string&quot;&gt;&quot;$gt&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;).
        append(&lt;span class=&quot;string&quot;&gt;&quot;$lte&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)); 

cursor = coll.find(query);
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;the-wrong-approach-&quot;&gt;The wrong approach?&lt;/h2&gt;
&lt;p&gt;If we are spending so many man hours in this problem and it still causes headaches, it may be that we are approaching it wrong? &lt;/p&gt;
&lt;p&gt;Each new component in an application adds to the complexity of the system. There is good complexity, like &lt;a target=&quot;_blank&quot; href=&quot;http://klangism.tumblr.com/post/80087171446/microservices&quot;&gt;microservices&lt;/a&gt;, which give a clear benefit even if they increase the number of &amp;quot;moving parts&amp;quot;. And there is bad complexity. Having to learn a full framework like Hibernate for something like saving my user data seems overkill. A service that manages storage of application state is the right approach, but when you have domain objects in you application that contain all the data having a different  model to store that same data is wasteful.&lt;/p&gt;
&lt;p&gt;But we do that. Being honest, it&amp;#39;s a natural mistake. As with many things, one is not usually aware that he is doing it wrong until shown the right way. And in here I have to add a mention to &lt;a target=&quot;_blank&quot; href=&quot;http://doc.akka.io/docs/akka/2.3.0/scala/persistence.html&quot;&gt;Akka Persistence&lt;/a&gt; as that tool that shows you the correct way.&lt;/p&gt;
&lt;p&gt;Yes, I won&amp;#39;t delude myself: it is still a framework to learn, and one marked as experimental. It may well be that it won&amp;#39;t perform once put into demanding production scenarios, it may be that all the promises will fail short. But, as I said at the beginning, please indulge me and ignore all this for a second.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://doc.akka.io/docs/akka/2.3.0/scala/persistence.html&quot;&gt;Akka Persistence&lt;/a&gt; provides an implementation of the &lt;a target=&quot;_blank&quot; href=&quot;http://martinfowler.com/eaaDev/EventSourcing.html&quot;&gt;Event Sourcing&lt;/a&gt; pattern. Forget additional mismatched layers for storage. Your source of true are your domain objects. You store only changes to the objects, so you can reproduce the state of the system at any given time. By taking care of &amp;quot;new states&amp;quot; no transactional issues happen in the data layer due to concurrent updates on pre-existing states. You are even capturing something that relational databases struggle to, but it&amp;#39;s essential in many systems: time (as a sequence of states).&lt;/p&gt;
&lt;p&gt;Doesn&amp;#39;t it just click? Doesn&amp;#39;t it seem natural? Why to waste time on ORM or other alternatives? Persistence suddenly becomes a support system instead of one of the main components of your application. The data stays where it is generated: your domain. Your objects are the source of truth, and you only make sure their state won&amp;#39;t be lost in case you have to take them out of memory. Simple. As it should. &lt;/p&gt;
&lt;p&gt;And the fact that it fits perfectly with &lt;a target=&quot;_blank&quot; href=&quot;https://skillsmatter.com/skillscasts/4698-reactive-ddd-with-scala-and-akka&quot;&gt;DDD as described by Vaughn&lt;/a&gt; only reinforces the sensation that this is the right approach.&lt;/p&gt;
&lt;h1 id=&quot;why-will-it-succeed-&quot;&gt;Why will it succeed?&lt;/h1&gt;
&lt;p&gt;As I said, there may be technical issues which I have not considered. I may be blind to glaring limitations, either on use cases or performance. It may be that it is not feasible to construct a solution using this storage system only. I may be wrong. &lt;/p&gt;
&lt;p&gt;On the other hand, given the amount of man hours we have and are still devoting to ORM-like systems, which we know are far from perfect, it seems natural that we could fix any issues &lt;a target=&quot;_blank&quot; href=&quot;http://doc.akka.io/docs/akka/2.3.0/scala/persistence.html&quot;&gt;Akka Persistence&lt;/a&gt; may have. It is doubtful that the guys at Typesafe, all brilliant engineers, would have integrated this project if it had obvious major problems. And, if I&amp;#39;m right, Persistence (either implemented by Typesafe or any other implementation of the concept that may appear) will inevitably succeed. Even if it ends up being slightly worse, performance wise, than the current ORM.&lt;/p&gt;
&lt;p&gt;The reason I&amp;#39;m so sure is because simplicity trumps all. Look at many popular technologies from the last decade or so: MySql, PHP, Ruby, MongoDb. They weren&amp;#39;t the most performant. They weren&amp;#39;t the most good looking. They had some shortcomings. But they became incredibly popular, with plenty of developers moving to use them. Why? Simplicity. If these technologies have something in common is that they were easy to use. Any developer could spend a few hours learning the basics and use them. They were enablers that required less effort than other more stablished alternatives. And, yes, at some point the developers hit walls on performance or security or other areas. But that was later on.&lt;/p&gt;
&lt;p&gt;Persistence can follow that path. In a bad scenario, it allows a developer to forget about learning SQL, transactional contexts, ORM mappings and other relatively complex stuff. Your domain data is your data. And that is a massive enabler, which increases productivity just by removing all the bugs and edge cases that happen when you use an ORM at scale. In the best scenario, we have a framework which is both simple and performant. &lt;/p&gt;
&lt;p&gt;I may be wrong. But it surely looks promising.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-04-01-the-end-of-orm.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-04-01-the-end-of-orm.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-04-01-the-end-of-orm.html';
		window.disqus_identifier = '2014-04-01-the-end-of-orm';
		window.disqus_title = 'The end of ORM';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Java 8 is coming</title>
			<link href="http://www.gumtree.com/devteam//2014-03-05-java-8-is-coming.html"/>
			<updated>2014-03-05T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-03-05-java-8-is-coming.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Java 8 is coming - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Mar 5th, 2014&lt;/span&gt;
				&lt;h1&gt;Java 8 is coming&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-03-05-java-8-is-coming.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-03-05-java-8-is-coming.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;It&amp;#39;s March 2014 and, at last, it is happening. Barring any last minute surprise, Java 8 &lt;a target=&quot;_blank&quot; href=&quot;https://blogs.oracle.com/java/entry/java_se_8_schedule&quot;&gt;will be released&lt;/a&gt; this month after 3 years of delays and spec changes. Java 7 was released on 2011 and some of the promised functionality in that version was moved to Java 8. In that note, this release doesn&amp;#39;t start too well with more features being &lt;a target=&quot;_blank&quot; href=&quot;http://mreinhold.org/blog/on-the-next-train&quot;&gt;dropped&lt;/a&gt;, mainly &lt;a target=&quot;_blank&quot; href=&quot;http://openjdk.java.net/projects/jigsaw/&quot;&gt;Project Jigsaw&lt;/a&gt; which adds a module system to the Java platform and was initially scheduled for Java 7.&lt;/p&gt;
&lt;p&gt;Personally, I&amp;#39;m not a big fan of this release. Given what you can currently do with alternate JVM languages like &lt;a target=&quot;_blank&quot; href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt; or &lt;a target=&quot;_blank&quot; href=&quot;http://clojure.org/&quot;&gt;Clojure&lt;/a&gt;, not to mention &lt;a target=&quot;_blank&quot; href=&quot;http://kotlin.jetbrains.org/&quot;&gt;Kotlin&lt;/a&gt; and others, I feel that it is too little too late. People are excited about &lt;a target=&quot;_blank&quot; href=&quot;http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&quot;&gt;lambda expressions&lt;/a&gt; but, given the rise (and benefits) of &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Functional_programming&quot;&gt;functional programming&lt;/a&gt;, it feels like an opportunity has been missed.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;The fact is that Java 8 has arrived, so we can as well see what&amp;#39;s new in this release. &lt;/p&gt;
&lt;h2 id=&quot;nashorn&quot;&gt;Nashorn&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s start with Javascript. JVM had &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Rhino_(JavaScript_engine&quot;&gt;Rhino&lt;/a&gt;), a Javascript engine to run Javascript in the JVM. &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Nashorn_(JavaScript_engine&quot;&gt;Nashorn&lt;/a&gt;) is a new implementation that takes advantage of new Java 8 byte code and is potentially much faster. It even includes a command line tool (&lt;em&gt;jjs&lt;/em&gt;) to run scripts directly.&lt;/p&gt;
&lt;p&gt;Personally, I&amp;#39;ll stay with &lt;a target=&quot;_blank&quot; href=&quot;http://www.scala-js.org/&quot;&gt;Scala-js&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;new-date-and-time-api&quot;&gt;New Date and Time API&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s face it, the current Date/Time API in Java is worse than coding in VB. &lt;a target=&quot;_blank&quot; href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt; is the de-facto library to work with dates and time for a reason, not only its quality but also because of the native API being so bad. Luckily, Java 8 introduces some changes in the area which may turn using Joda-Time something optional. &lt;/p&gt;
&lt;p&gt;Don&amp;#39;t take it wrong, I like Joda-Time. But I believe that every additional dependency is one more point of failure introduced in the application. Reliable as they may be, more moving parts mean more potential sources of error. I like simplicity, and using a native API included by the language (if it is not vastly inferior) is, in my book, the correct choice. &lt;/p&gt;
&lt;p&gt;There are 4 main classes in the new API: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LocalDate: stores a date with day, month and year. No Timezone information.&lt;/li&gt;
&lt;li&gt;LocalTime: displays the current time. No Timezone information.&lt;/li&gt;
&lt;li&gt;LocalDateTime: displays both Date and Time. No Timezone information.&lt;/li&gt;
&lt;li&gt;ZonedDateTime: displays Date and Time and contains Timezone information.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Working with the API is simpler, too. For example, to modify a stored time object you do:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;LocalTime current = LocalTime.now();
LocalTime CoB = current.plus(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, HOURS);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another neat addition is the introduction of &lt;a target=&quot;_blank&quot; href=&quot;http://download.java.net/jdk8/docs/api/java/time/Clock.html&quot;&gt;Clock&lt;/a&gt;, a class that provides access to the current time including Timezone information. A replacement for &lt;em&gt;System.currentTimeMillis()&lt;/em&gt; that may facilitate working with timed tests due to its integration with DateTime API.&lt;/p&gt;
&lt;p&gt;One example of its use:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;Clock.systemDefaultZone();
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;optional&quot;&gt;Optional&lt;/h2&gt;
&lt;p&gt;In Java 8 &lt;a target=&quot;_blank&quot; href=&quot;http://download.java.net/jdk8/docs/api/java/util/Optional.html&quot;&gt;Optional&lt;/a&gt; is a standard class available in &lt;em&gt;java.util&lt;/em&gt;. For those not familiar with the construct, &lt;em&gt;Optional&lt;/em&gt; is a way to avoid propagating &lt;em&gt;null&lt;/em&gt; values across the application. &lt;em&gt;Optional&lt;/em&gt; uses generics and can have two values: empty or non-empty. In scenarios where you may or may not get a result, you return an &lt;em&gt;Optional&lt;/em&gt; of a type and work around the presence of the element. &lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;Optional&amp;lt;String&amp;gt; opt = toBeOrNotToBe();

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(opt.isPresent())    
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; opt.get();
&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may argue that using &lt;em&gt;null&lt;/em&gt; gives similar code. The advantage of &lt;em&gt;Optional&lt;/em&gt; is not saving keystrokes, but making the possibility of an empty value explicit. Instead of having to check for nulls every time you call a method you can rely that a method that doesn&amp;#39;t implement &lt;em&gt;Optional&lt;/em&gt; will return a value, even if that value is an empty list. Also, Optional provides some collection-like methods, such as &lt;em&gt;filter&lt;/em&gt; or &lt;em&gt;map&lt;/em&gt;, which facilitates treating Optional as a collection and merging it in stream processing.&lt;/p&gt;
&lt;p&gt;Those used to work with Optional in Scala or by using Guava will be glad of this change. Hopefully this will propagate soon to libraries, making them easier to use and reducing the amount of Null Pointer Exceptions in our applications.&lt;/p&gt;
&lt;h2 id=&quot;annotations-on-java-types&quot;&gt;Annotations on Java Types&lt;/h2&gt;
&lt;p&gt;Annotations are ubiquitous in Java. Love them or hate them, they are used in most frameworks. Java 8 allows you to use annotations in several new places where you couldn&amp;#39;t before. Rumour has it that this will allow frameworks to check for common errors like null values, race conditions or some other tests. One example is &lt;a target=&quot;_blank&quot; href=&quot;http://types.cs.washington.edu/checker-framework/&quot;&gt;Checker&lt;/a&gt;, a type system enhancer for Java.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s see some self-explanatory examples:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Type cast&lt;/span&gt;
mustExist = (&lt;span class=&quot;annotation&quot;&gt;@NotNull&lt;/span&gt; Integer) choice;

&lt;span class=&quot;comment&quot;&gt;// Object creation&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@NoSQLInjection&lt;/span&gt; LittleBobbyTables(String input);

&lt;span class=&quot;comment&quot;&gt;// Adding interfaces&lt;/span&gt;
&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MySetWrapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; @&lt;span class=&quot;title&quot;&gt;Immutable&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Set&lt;/span&gt;&amp;lt;@&lt;span class=&quot;title&quot;&gt;Immutable&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; 

// &lt;span class=&quot;title&quot;&gt;Declaring&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exceptions&lt;/span&gt;
&lt;span class=&quot;title&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;crossTheBridge&lt;/span&gt;() &lt;span class=&quot;title&quot;&gt;throws&lt;/span&gt; @&lt;span class=&quot;title&quot;&gt;RunYouFools&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BalrogException&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, call me biased but if you can&amp;#39;t use Scala I&amp;#39;d rather suggest you to look at &lt;a target=&quot;_blank&quot; href=&quot;https://code.google.com/p/guava-libraries/&quot;&gt;Guava&lt;/a&gt; before getting too excited with these annotations. Right now the aim of &lt;a target=&quot;_blank&quot; href=&quot;http://types.cs.washington.edu/checker-framework/&quot;&gt;Checker&lt;/a&gt; and similar tools can be achieved via constructs like Optional, &lt;a target=&quot;_blank&quot; href=&quot;https://code.google.com/p/guava-libraries/wiki/PreconditionsExplained&quot;&gt;Preconditions&lt;/a&gt; or &lt;a target=&quot;_blank&quot; href=&quot;https://code.google.com/p/guava-libraries/wiki/ImmutableCollectionsExplained&quot;&gt;Immutable Collections&lt;/a&gt;. Annotations may provide similar behaviour but are harder to track by a developer using your code, while the aforementioned alternatives are more intuitive and visible wherever that code is used.&lt;/p&gt;
&lt;p&gt;That said, I&amp;#39;m pretty sure having this functionality may allow new frameworks to take advantage of it and provide very useful behaviour. But, as far as I&amp;#39;m aware, we are not there yet.&lt;/p&gt;
&lt;h2 id=&quot;lambda-expressions&quot;&gt;Lambda Expressions&lt;/h2&gt;
&lt;p&gt;We get to the big feature of Java 8. Developed as &lt;a target=&quot;_blank&quot; href=&quot;http://openjdk.java.net/projects/lambda/&quot;&gt;Project Lambda&lt;/a&gt;. A &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Lambda_(programming&quot;&gt;Lambda Expression&lt;/a&gt;) is an anonymous function that can be defined and called &amp;quot;on the fly&amp;quot;, capable capturing values of variables in scope when defined. They are extremely useful when passing arguments to &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Higher-order_function&quot;&gt;higher-order functions&lt;/a&gt; or for some other functional operations.&lt;/p&gt;
&lt;p&gt;A typical example is a lambda expression used to sort an Array by length of its elements:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;Arrays.sort(words, 
(String w1, String w2) -&amp;gt; { w2.length() - w1.length() });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see in the example lambdas reduce clutter. Instead of declaring a &lt;a target=&quot;_blank&quot; href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html&quot;&gt;Comparator&lt;/a&gt; class and adding all that boilerplate, we provide the criteria to use as an argument. Note that we could store that lambda in a variable.&lt;/p&gt;
&lt;p&gt;Alternatively, you can pass existing methods instead of a lambda. Through &lt;em&gt;Method References&lt;/em&gt; (syntax: ::) you can access a method in a class an use it as the parameter. You can use for this purpose static methods, instance methods and constructors. Basically, almost anything you can declare in Java. For example, to use &lt;em&gt;println&lt;/em&gt; as a lambda:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;myList.forEach(System.out::println);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The snippet above will print all elements of the list to &lt;em&gt;System.out&lt;/em&gt;. &lt;/p&gt;
&lt;h2 id=&quot;functional-interfaces&quot;&gt;Functional Interfaces&lt;/h2&gt;
&lt;p&gt;Functional interfaces are interfaces with exactly one non-default method. The package &lt;a target=&quot;_blank&quot; href=&quot;http://download.java.net/jdk8/docs/api/java/util/function/package-summary.html&quot;&gt;java.util.function&lt;/a&gt; declares several functional interfaces but you can define your own, for example:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@FunctionalInterface&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFunctionalInterface&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; theQuestion();

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The annotation &lt;em&gt;FunctionalInterface&lt;/em&gt; indicates to the compiler that this is a functional interface. They behave like interfaces and can extend other interfaces assuming this will not break the contract of having only one non-default method.&lt;/p&gt;
&lt;p&gt;From the point of view of the compiler the interface defines a template for a lambda. This means that the type of a functional interface can be used as the type for a lambda. For example:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;MyFunctionalInterface deepThought = () -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;; 

&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; answerMe(MyFunctionalInteface calculator) { ... }

answerMe(deepThought);
answerMe(() -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the snippet above we first see a lambda stored as a variable whose type is a functional interface. Next we see a method, &lt;em&gt;doSomething&lt;/em&gt;, that accepts a functional interface as a parameter. The following two lines show two valid ways of using the method, either by providing an instance of the functional interface or by passing a valid lambda that matches the definition of the interface as a parameter.&lt;/p&gt;
&lt;h2 id=&quot;default-methods&quot;&gt;Default methods&lt;/h2&gt;
&lt;p&gt;You may have heard of &lt;em&gt;Default Methods&lt;/em&gt; as &lt;em&gt;Defender Methods&lt;/em&gt; or &lt;em&gt;Virtual Extensions&lt;/em&gt;. You can think of them as a way to turn interfaces into &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Mixin&quot;&gt;mixins&lt;/a&gt;. You can add as many default methods as you want to an interface and, if not overridden, the default implementation in the interface will be used. You can also add them to functional interfaces: remember that default methods don&amp;#39;t count towards the limit in this type of interfaces.&lt;/p&gt;
&lt;p&gt;Be aware that if a class implements two default methods with the same name but belonging to different interfaces you will get a compiler error. This helps avoiding issues like &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Multiple_inheritance#The_diamond_problem&quot;&gt;diamond  problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An example:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyInterface&lt;/span&gt; &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rollD6() {
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//guaranteed random by roll of dice&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similarly, now you can add static methods to your interfaces:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyInterface&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rollD20() {
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Constants.thaco;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This may be the most useful addition to Java in this release, even more than lambdas. Lambdas are something akin to a patch as Java is not a functional language. On the other hand &lt;em&gt;default methods&lt;/em&gt; help developers favour &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;composition over inheritance&lt;/a&gt; by providing the necessary tools. This can have a direct impact over code stability and refactoring while, at the same time, removing the main drawback of having to reimplement all methods of a given interface in each implementer. &lt;/p&gt;
&lt;h2 id=&quot;collections-enhancements&quot;&gt;Collections enhancements&lt;/h2&gt;
&lt;p&gt;A couple of handy enhancements have been added to Java collections, all of them available by default. The first one is the addition of functions &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;filter&lt;/em&gt; and &lt;em&gt;reduce&lt;/em&gt; to the standard collections. You could have access to then in Java 7 via &lt;a target=&quot;_blank&quot; href=&quot;https://code.google.com/p/guava-libraries/&quot;&gt;Guava&lt;/a&gt;, but having them in the standard API is an improvement. &lt;/p&gt;
&lt;p&gt;For example, we could read a stream of posts and add the number of comments on each one to see how many comments we have in total:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;reddit.stream()
  .map(post -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(post.isCatPost) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; post.getComments(); &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;)
  .reduce(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, (c1, c2) -&amp;gt; c1 + c2);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the point of view of a Scala developer, this is another proof that Java is playing catch-up with modern languages. This was a necessary addition to simplify working with collections, but again it fails short when you see there is no &lt;em&gt;fold&lt;/em&gt; or any of the other helper methods commonly used in other languages.&lt;/p&gt;
&lt;p&gt;Another enhancement to collections is the &lt;em&gt;Stream&lt;/em&gt; interface. Many core library classes can now return a stream of its contents, either in a sequential or parallel way. The stream is populated lazily, which facilitates working with large collections of data. They support &lt;em&gt;sorting&lt;/em&gt; and other methods like &lt;em&gt;limit&lt;/em&gt;. And, of course, you can create your own stream. We can, for example, create a stream from a list of numbers, sort it and get the first 10 elements:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;Stream.of(aListOfNumbers)
    .sorted() 
    .limit(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Streams work well with &lt;a target=&quot;_blank&quot; href=&quot;http://download.java.net/jdk8/docs/api/java/util/stream/Collectors.html&quot;&gt;Collectors&lt;/a&gt;, a set of classes intended to amalgamate the contents of a stream into a unique result, be it a collection or a result. You can use a default collector to obtain the average of the values in a stream, as seen in the official documentation: &lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;Map&amp;lt;Person.Sex, Double&amp;gt; averageAgeByGender = roster
    .stream()
    .collect(
        Collectors.groupingBy(
            Person::getGender,                      
            Collectors.averagingInt(Person::getAge)));
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;that-s-it&quot;&gt;That&amp;#39;s it&lt;/h2&gt;
&lt;p&gt;That&amp;#39;s the list. Some interesting additions that will benefit software stability and some half-hearted changes. If you are already using a more modern language you will hardly go back, but they are steps in the right direction. Now, the countdown for Java 9 starts: Currency API, Project Jigsaw and more. In the meantime, enjoy your shiny JVM.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-03-05-java-8-is-coming.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-03-05-java-8-is-coming.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-03-05-java-8-is-coming.html';
		window.disqus_identifier = '2014-03-05-java-8-is-coming';
		window.disqus_title = 'Java 8 is coming';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Optimising JavaScript performances with asynchronous loops</title>
			<link href="http://www.gumtree.com/devteam//2014-02-25-js-performance-with-async-loops.html"/>
			<updated>2014-02-25T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-02-25-js-performance-with-async-loops.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Optimising JavaScript performances with asynchronous loops - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Feb 25th, 2014&lt;/span&gt;
				&lt;h1&gt;Optimising JavaScript performances with asynchronous loops&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Paolo Tozzo&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-02-25-js-performance-with-async-loops.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-02-25-js-performance-with-async-loops.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;At Gumtree we want to offer the best user experience to our customers, and we believe that one of the first steps is not
 to make the user wait for something. Performance is definitely a feature, and we want to provide the fastest user
 experience, both during and after the page has been loaded.&lt;/p&gt;
&lt;p&gt;What does that mean exactly? It means that while often most of the focus in terms of performance optimisation is on the
page load, by reducing the number of requests and the page weight, we forget what happens after the page has been loaded.
&lt;!-- Read more --&gt;
When our UI is being shown to the user, the browser can end up doing more work than it is supposed to, and this means a
sloppy interface that could definitely have an impact on the user engagement.&lt;/p&gt;
&lt;p&gt;And with the Mobile traffic expanding rapidly this is even more important.&lt;/p&gt;
&lt;h2 id=&quot;javascript-performance&quot;&gt;JavaScript Performance&lt;/h2&gt;
&lt;p&gt;Now, performance problems are rarely caused by raw Javascript, far more often is the interacting with the DOM through
Javascript that causes the issue.&lt;/p&gt;
&lt;p&gt;However, especially when dealing with complex UIs or data structures, avoiding long running scripts is of paramount
importance.&lt;/p&gt;
&lt;h2 id=&quot;loops-in-javascript&quot;&gt;Loops in JavaScript&lt;/h2&gt;
&lt;p&gt;Loops are often a performance bottleneck in Javascript applications.
That&amp;#39;s because loop iterations happen in a synchronous way, so, the more iterations you have, the more it&amp;#39;ll take to
execute your code. If the loop is doing too much (especially updating the DOM) the risk is to freeze the UI, with the
risk even to display the dreaded &amp;#39;unresponsive script&amp;#39;  browser dialog pop-up.&lt;/p&gt;
&lt;p&gt;If you don&amp;#39;t need your loop to be executed synchronously, and the order in which the elements of your
collection are processed is not important, splitting the collection analysis into smaller and more manageable chunks can
make a HUGE difference in terms of perceived performance of your UI.&lt;/p&gt;
&lt;p&gt;Today we are going to use Javascript timers in order to free up the browser from the risk of long-running loop. This
pattern is explained by Nicholas C. Zakas in his
book &lt;a target=&quot;_blank&quot; href=&quot;http://www.amazon.com/Professional-JavaScript-Developers-Nicholas-Zakas/dp/1118026691&quot;&gt;Professional Javascript for Web Developers&lt;/a&gt;
in the chapter on Advanced techniques.&lt;/p&gt;
&lt;h2 id=&quot;an-important-consideration-before-starting&quot;&gt;An Important Consideration Before Starting&lt;/h2&gt;
&lt;p&gt;Before using the pattern I&amp;#39;m going to show you have to ask yourself how much is happening inside the loop. The more work
you do outside the loop, the better is. A lot of time it&amp;#39;s a poor design that is causing the problem. If you&amp;#39;ve done as
much as you could to optimise your loop, but you still need to handle a large volume of data in the browser, and that is
causing you some headache, this article will help you.&lt;/p&gt;
&lt;h2 id=&quot;let-s-code-&quot;&gt;Let&amp;#39;s code!&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s have a look at a typical loop&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; collection.length; i++) {
    &lt;span class=&quot;comment&quot;&gt;//do something&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, if after your loop has been executed there is nothing that needs to deal with its outcome, and each iteration is
treated separately from the others, it means that your loop can run asynchronously.&lt;/p&gt;
&lt;p&gt;First, let&amp;#39;s create the helper we need&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitLoop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(items, process, context)&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; todo = items.concat(); &lt;span class=&quot;comment&quot;&gt;//create a clone of the original&lt;/span&gt;
    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {
            process.call(context, todo.shift());
        } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (todo.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);
            setTimeout(arguments.callee, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);
    }, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First of all, we clone the original array. This shouldn&amp;#39;t be always needed, but since the collection is passed by reference
we want to be safe that we are not altering it, so we are going to work with the clone.&lt;/p&gt;
&lt;p&gt;Then we use the &lt;a target=&quot;_blank&quot; href=&quot;http://www.w3schools.com/jsref/met_win_settimeout.asp&quot;&gt;setTimeout&lt;/a&gt; function to delay the execution of
each iteration.&lt;/p&gt;
&lt;p&gt;On each iteration we use Array&amp;#39;s &lt;a target=&quot;_blank&quot; href=&quot;http://www.w3schools.com/jsref/jsref_shift.asp&quot;&gt;shift&lt;/a&gt; method in order to remove the first
element of the collection and we carry on until we processed all items. We use &lt;a target=&quot;_blank&quot; href=&quot;http://www.w3schools.com/js/js_loop_while.asp&quot;&gt;do...while&lt;/a&gt;
in order to execute the loop at least once.
Then provide a context in order to set the value of this inside our loop.&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s see now how we can use it with a test case.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// test data&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; items = [];
&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++) items[i] = i;

splitLoop(items, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(item)&lt;/span&gt; {&lt;/span&gt;
    console.log(item)
}, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That was easy... and of course, not really useful!&lt;/p&gt;
&lt;p&gt;Let&amp;#39;s now say we want to process a collection of dom elements and we are using &lt;a target=&quot;_blank&quot; href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;splitLoop(  $(&lt;span class=&quot;string&quot;&gt;&quot;.items&quot;&lt;/span&gt;).toArray(),
            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(item)&lt;/span&gt; {&lt;/span&gt;
                $(item)
                    .processItem();
            },
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;
);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Presto! We converted the the object jquery is returning to an array, and we are now able to execute dom operations asynchronously.&lt;/p&gt;
&lt;p&gt;Since we are working with asynchronous programming you need a callback function to pass since you don&amp;#39;t know the point at which
it will complete. Let&amp;#39;s improve our helper!&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitLoop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(items, process, context, callback)&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; todo = items.concat(); &lt;span class=&quot;comment&quot;&gt;//create a clone of the original&lt;/span&gt;

    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = +&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date();

        &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {
            process.call(context, todo.shift());

        } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (todo.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);

        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (todo.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {
            setTimeout(arguments.callee, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);
        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
            callback(items);
        }
    }, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On each iteration now we check if we&amp;#39;ve reached the end of the collection, and when this happens the callback function is executed.
Let&amp;#39;s see it in action with the following code&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// test data&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(item)&lt;/span&gt; {&lt;/span&gt;
    console.log(item);
};

&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
    console.log(&lt;span class=&quot;string&quot;&gt;'done'&lt;/span&gt;);
}

&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; items = [];
&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++) items[i] = i;

splitLoop(items, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(item)&lt;/span&gt; {&lt;/span&gt;
        todo(item);
    }, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, done);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A further improvement could be to make sure that each chunk won&amp;#39;t take longer than a specific amount of milliseconds.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitLoop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(items, process, context, callback)&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; todo = items.concat(); &lt;span class=&quot;comment&quot;&gt;//create a clone of the original&lt;/span&gt;

    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;

        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = +&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date();

        &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {
            process.call(context, todo.shift());

        } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (todo.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (+&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date() - start &amp;lt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;));

        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (todo.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {
            setTimeout(arguments.callee, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);
        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
            callback(items);
        }
    }, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we check than each iteration lasts less than 50 milliseconds.&lt;/p&gt;
&lt;p&gt;Feel free to alter both 25 and 50 milliseconds, or if you prefer, to pass them as a further arguments for the function,
I&amp;#39;ve never needed to change them, so I prefer to hard code them.&lt;/p&gt;
&lt;p&gt;I hope you&amp;#39;ll find the article helpful, feel free to comment and let us know any suggestion to further improve the technique.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-02-25-js-performance-with-async-loops.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-02-25-js-performance-with-async-loops.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-02-25-js-performance-with-async-loops.html';
		window.disqus_identifier = '2014-02-25-js-performance-with-async-loops';
		window.disqus_title = 'Optimising JavaScript performances with asynchronous loops';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Builder Pattern and Inheritance in Java</title>
			<link href="http://www.gumtree.com/devteam//2014-02-22-builder-pattern-and-inheritance-in-java.html"/>
			<updated>2014-02-22T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-02-22-builder-pattern-and-inheritance-in-java.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Builder Pattern and Inheritance in Java - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Feb 22nd, 2014&lt;/span&gt;
				&lt;h1&gt;Builder Pattern and Inheritance in Java&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-02-22-builder-pattern-and-inheritance-in-java.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-02-22-builder-pattern-and-inheritance-in-java.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Something that we developers have to understand is that quite often things that we assume as obvious are not so. When you consider something as trivial or a fact that other developers must know (how could they not!) you are ignoring your own baggage: years of experience, projects, interactions with other people to solve specific issues... What has no value for you, may be very enlightening for a junior developer.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;Following my own advice, here you have a short article to spread the knowledge :). The background of the problem is very straightforward and I  outline it next to give context. In one of our applications, using &lt;a target=&quot;_blank&quot; href=&quot;http://projects.spring.io/spring-framework/&quot;&gt;Spring MVC&lt;/a&gt;, our controller packages are &amp;#39;self-sufficient&amp;#39;. What I mean with this is that a controller is located in a package along all support classes that controller needs which are not needed anywhere else. Services and common classes live in other packages. This allow us to remove a controller and any non-shared dependencies with minimal effort, and you know where to find all the code when trying to fix a bug.&lt;/p&gt;
&lt;p&gt;One of the elements a controller has to generate its model is a &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Builder_pattern&quot;&gt;Builder&lt;/a&gt; acting as a &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Fluent_interface&quot;&gt;Fluent Interface&lt;/a&gt;. The reason we have a builder per controller is to avoid clutter: each controller uses a minimal model that sends to front end only the necessary data, not a single bit more. This speeds up processing in both back end and front end, makes the code neater and facilitates locating issues as the model is easy to navigate.&lt;/p&gt;
&lt;p&gt;We are all for the &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Don&amp;#39;t_repeat_yourself&quot;&gt;DRY&lt;/a&gt; principle and, as you would expect, we found some common code shared across builders. Time to refactor, create a parent class, recompile and... wait, that doesn&amp;#39;t work. It turns out that, due to the way a builder works, if you want to preserve the fluent interface you need to put a bit of extra effort in.&lt;/p&gt;
&lt;p&gt;Depending on how you implement your builders, there are several approaches you can take. You can see an example in &lt;a target=&quot;_blank&quot; href=&quot;https://weblogs.java.net/blog/emcmanus/archive/2010/10/25/using-builder-pattern-subclasses&quot;&gt;this post&lt;/a&gt; from 2010. It is not a new or uncommon issue. Us, we chose a to solve this problem by having an abstract class that defines common methods along some abstract methods necessary to have the Fluent Interface. Most of the solutions we found use a builder embedded inside a class but we don&amp;#39;t follow that pattern (our builders are standalone classes) which means we had to adapt the solutions we saw a bit to make this possible.  &lt;/p&gt;
&lt;p&gt;This approach has a downside if you use static methods in your builders, as you may need to reimplement them in each child. Not ideal, but generics and static methods don&amp;#39;t seem to like each other too much, and Java doesn&amp;#39;t have  &lt;a target=&quot;_blank&quot; href=&quot;http://en.wikipedia.org/wiki/Trait_(computer_programming&quot;&gt;traits&lt;/a&gt;), yet.&lt;/p&gt;
&lt;p&gt;The code of our abstract parent class follows:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractModelAndViewBuilder&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractModelAndViewBuilder&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;B&lt;/span&gt;&amp;gt;&amp;gt; &lt;/span&gt;{

    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String REDIRECT = &lt;span class=&quot;string&quot;&gt;&quot;redirect:&quot;&lt;/span&gt;;

    &lt;span class=&quot;comment&quot;&gt;// private object, references the subtype we are building&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; B thisObj;

    &lt;span class=&quot;comment&quot;&gt;// abstract method so all children can define their own type and inherit methods defined here while&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;// behaving as a builder&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; B self();

    &lt;span class=&quot;comment&quot;&gt;// model and view is defined here so all methods can access it, from both parent and child objects&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; ModelAndView mav;

    &lt;span class=&quot;comment&quot;&gt;// default constructor, initialises thisObj variable accordingly&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; AbstractModelAndViewBuilder() {
        thisObj = self();
    }

    &lt;span class=&quot;comment&quot;&gt;// initially a builder will set either a page or a path, which means calling one of these methods&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; B setPage(Page page) {
        mav = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelAndView(page.getTemplateName());
        mav.addObject(ModelKeys.PAGE_NAME.key, page.getTemplateName());
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self();
    }

    &lt;span class=&quot;comment&quot;&gt;// initially a builder will set either a page or a path, which means calling one of these methods&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; B setPath(Path path) {
        mav = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelAndView(REDIRECT + path.getPath());
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self();
    }

    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ModelAndView build() {
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mav;
    }

    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; B withCore(Object core) {
        mav.addObject(ModelKeys.CORE.key, core);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, that&amp;#39;s some ugly code right there, not the best Java I&amp;#39;ve ever crafted. But it works, so let&amp;#39;s skip looks for a moment and talk about how does it work. &lt;/p&gt;
&lt;p&gt;Starting from the class definition, the first thing we notice is the generic declaration &lt;em&gt;B extends AbstractModelAndViewBuilder&amp;lt;B&amp;gt;&lt;/em&gt;. This is a trick so all children of this class can pass themselves as the generic element of the parent class. That way any reference to a generic in the parent class is automatically converted to a reference to the child type when using the Builder, maintaining the fluent interface across classes.&lt;/p&gt;
&lt;p&gt;Unfortunately that declaration is not enough. We need something else, provided by this fragment of code:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// private object, references the subtype we are building&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; B thisObj;

&lt;span class=&quot;comment&quot;&gt;// abstract method so all children can define their own type and inherit methods defined here while&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;// behaving as a builder&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; B self();

&lt;span class=&quot;comment&quot;&gt;// default constructor, initialises thisObj variable accordingly&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; AbstractModelAndViewBuilder() {
    thisObj = self();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The parent class contains a private object &lt;em&gt;thisObj&lt;/em&gt; of type B, which references an instance of the children because, as we just saw, &lt;em&gt;B&lt;/em&gt; is a trick to match the type of the child of this builder. We also have an abstract method &lt;em&gt;self&lt;/em&gt; which must be implemented by every child. This method, when implemented, returns an instance of the child builder. The protected constructor assigns to &lt;em&gt;thisObj&lt;/em&gt; the result of calling &lt;em&gt;self&lt;/em&gt;, ensuring we have a valid reference before we start using the builder. &lt;/p&gt;
&lt;p&gt;All this plumbing is necessary to enable a fluent interface that can use methods from both parent and children. Methods to add information to the model shared across builders can be added to the parent, while other methods can be added to the specific builder while maintaining this functionality.&lt;/p&gt;
&lt;p&gt;Having explained that, we can next see how simple it is to implement a new builder that can inherit all the functionality of the parent builder:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ModelAndViewBuilder&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractModelAndViewBuilder&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;ModelAndViewBuilder&lt;/span&gt;&amp;gt;&lt;/span&gt;{

    &lt;span class=&quot;comment&quot;&gt;// override to inherit all model builder methods and be able to use them in this class&lt;/span&gt;
    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; ModelAndViewBuilder self(){
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;
    }

    &lt;span class=&quot;comment&quot;&gt;// any other children of AbstractModelAndViewBuilder that want view or redirect will have to duplicate a bit of code&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ModelAndViewBuilder view(Page page) {
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (page == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelException(&lt;span class=&quot;string&quot;&gt;&quot;Missing page&quot;&lt;/span&gt;);
        }
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelAndViewBuilder().setPage(page);
    }

    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ModelAndViewBuilder redirect(Path path) {
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (path == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelException(&lt;span class=&quot;string&quot;&gt;&quot;Missing path&quot;&lt;/span&gt;);
        }
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ModelAndViewBuilder().setPath(path);
    }

    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ModelAndViewBuilder withQ(String q) {
        mav.addObject(ModelKeys.QUERY.key, q);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, we only override one method: &lt;em&gt;self&lt;/em&gt;. The other two methods are static methods that we want to use, but we don&amp;#39;t need to add in every child if we don&amp;#39;t want to. &lt;/p&gt;
&lt;p&gt;The method &lt;em&gt;withQ&lt;/em&gt; shows how we can add additional builder methods. If you try to chain methods from both the parent and the child, you can see that this works as expected.&lt;/p&gt;
&lt;p&gt;Success! Now we can have inheritance in builders and avoid code duplication (mostly, let&amp;#39;s ignore static methods by now). Hope that&amp;#39;s been useful and, as always, feel free to contact us for feedback or questions.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-02-22-builder-pattern-and-inheritance-in-java.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-02-22-builder-pattern-and-inheritance-in-java.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-02-22-builder-pattern-and-inheritance-in-java.html';
		window.disqus_identifier = '2014-02-22-builder-pattern-and-inheritance-in-java';
		window.disqus_title = 'Builder Pattern and Inheritance in Java';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Using Twilio from within Play Framework</title>
			<link href="http://www.gumtree.com/devteam//2014-01-03-using-twilio-from-within-play-framework-scala.html"/>
			<updated>2014-01-03T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2014-01-03-using-twilio-from-within-play-framework-scala.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Using Twilio from within Play Framework - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Jan 3rd, 2014&lt;/span&gt;
				&lt;h1&gt;Using Twilio from within Play Framework&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-01-03-using-twilio-from-within-play-framework-scala.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-01-03-using-twilio-from-within-play-framework-scala.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;One of the advantages of working at &lt;a target=&quot;_blank&quot; href=&quot;http://www.gumtree.com/&quot;&gt;Gumtree&lt;/a&gt; is being able to experiment. We are committed to deliver the best experience possible to our users, and evaluating both tools and processes that helps us to achieve that aim is a must. Not all of them will be used, but without evaluating something you can&amp;#39;t form a valid opinion and see if it will fit your use cases. And you get to justify play time with new technologies as work ;)&lt;/p&gt;
&lt;p&gt;I explain all this to make you a bit jealous (want to join us? &lt;a target=&quot;_blank&quot; href=&quot;https://www.linkedin.com/company/gumtree.com/careers&quot;&gt;We are hiring&lt;/a&gt;!). No, seriously, I explain this as you may be wondering why are we talking about &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/&quot;&gt;Twilio&lt;/a&gt; in our blog. In fact, you may even be wondering what is Twilio. Let&amp;#39;s start there.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h2 id=&quot;twilio-what-s-that-&quot;&gt;Twilio? What&amp;#39;s that?&lt;/h2&gt;
&lt;p&gt;Unfortunately that&amp;#39;s a common question. Given the amount of SaaS appearing every month, it is easy to miss some interesting ones. This may be one of them, and it provides a quite interesting service.&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/&quot;&gt;Twilio&lt;/a&gt; is a SaaS that provides telephony services, from SMS to VoiceIP. Boring as it seems at first, with their API you can do things like adding 2-factor authentication via SMS to your application, sending SMS to a customers or calling a client from your browser, without requiring any additional plugin.&lt;/p&gt;
&lt;p&gt;It is a really flexible service and it opens many interesting possibilities. It has SDK to use it from Android, iPhone or with many of the mainstream programming languages (Java, Javascript, Python, etc). To test it we created a small sample app using &lt;a target=&quot;_blank&quot; href=&quot;http://www.playframework.com/&quot;&gt;Play Framework&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt;, available in our &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/gumtreeuk/Twilio-Play-Test&quot;&gt;Github repository&lt;/a&gt;. Please be aware that this is an internal test application, to try Twilio, and safety wasn&amp;#39;t a concern when developing it. So be careful when reusing the code.&lt;/p&gt;
&lt;p&gt;The &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/gumtreeuk/Twilio-Play-Test&quot;&gt;application&lt;/a&gt; is a simple one. The main page asks for some Twilio API credentials, as seen below. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./twilio-play/main_page.png&quot; alt=&quot;Main page of the sample app&quot; title=&quot;Main page of the sample app&quot;&gt;&lt;/p&gt;
&lt;p&gt;These credentials are stored in the user session and then the user is redirected to the test page. In the test page (shown below) the user can select one of several options:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./twilio-play/sample_page.png&quot; alt=&quot;Test page of the sample app&quot; title=&quot;Test page of the sample app&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Send a SMS to a number&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Call a number from the browser&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;See a list of the calls done via the functionality above and retrieve an mp3 with the contents of the call&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Going back to the main page will erase the credentials from the session, allowing the user to connect with a different set of credentials.&lt;/p&gt;
&lt;p&gt;This provides a taste of what Twilio can do, and the app can be easily extended to add more sample cases for other Twilio functionality. &lt;/p&gt;
&lt;h2 id=&quot;hold-your-horses&quot;&gt;Hold your horses&lt;/h2&gt;
&lt;p&gt;Before we start playing with the code, we have to register an account with &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/&quot;&gt;Twilio&lt;/a&gt;. I won&amp;#39;t go through the steps in this post, as they are quite straightforward. When you create the account you can keep a development account or go for the full account (paid). A development account in Twilio allows you to test just a subset of the functionality. You will be able to send SMS and do some calls, but only to specific numbers. This can be a bit frustrating when working code is failing due to the limitations in development accounts. Given the low cost of the Twilio services, you may want to upgrade the account and pay the initial $20 of credit so you have full access to all the Twilio API for quite a long time (if only used for development). &lt;/p&gt;
&lt;p&gt;Once you have created the account your &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/user/account&quot;&gt;dashboard&lt;/a&gt; shows both the &lt;strong&gt;SID&lt;/strong&gt; and &lt;strong&gt;AUTH TOKEN&lt;/strong&gt; you need to access some of the Twilio API and that the sample app requests in the main page (as seen in the previous section). There is another key required for some API calls, like calling from a browser, but before we enable that we have to talk a bit about the Twilio execution flow.&lt;/p&gt;
&lt;p&gt;In our sample application we have 2 types of execution flow when calling Twilio API. The first one, when sending an SMS, is shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./twilio-play/flow_1.png&quot; alt=&quot;Send SMS flow&quot; title=&quot;Send SMS flow&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this scenario our server uses the API to send an SMS. The server feeds the API with the necessary keys and parameters, connects with Twilio servers and the SMS is sent. We may get back some information as a response from the call, but that is it. More importantly, the browser in here behaves as a transport layer, providing the relevant information (destination number and content of the message) to the server, which does the heavy lifting.&lt;/p&gt;
&lt;p&gt;Sometimes the flow gets a bit more complicated. For example, let&amp;#39;s say that we want to call to a phone from our browser. Thinking about it, one can guess that we have to connect the phone back to our browser, at the very least, which can imply additional steps. The Twilio flow in this scenario is as follows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./twilio-play/flow_2.png&quot; alt=&quot;Call from browser flow&quot; title=&quot;Call from browser flow&quot;&gt;&lt;/p&gt;
&lt;p&gt;A bit more convoluted, isn&amp;#39;t it? What is happening here is that Twilio is acting as a mediator to connect the browser and the phone. The browser connects to an app defined in the Twilio servers, which then asks our server how to act. The server replies telling Twilio to call to the provided phone number, and Twilio manages the connection between phone and server. &lt;/p&gt;
&lt;p&gt;These extra steps, unnecessary as they may seem, are there to give extra flexibility and allow you to manage the call properly by rerouting and reacting as needed. To do this Twilio has the concept of &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/docs/api/twiml&quot;&gt;TwiML apps&lt;/a&gt;, XML files using a specific set of tags which tell Twilio which action should happen at that moment. Below you can see a snapshot of the dashboard of Twilio showing our sample TwiML app:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./twilio-play/twiml_app.png&quot; alt=&quot;TwiML app dashboard&quot; title=&quot;TwiML app dashboard&quot;&gt;&lt;/p&gt;
&lt;p&gt;You need to create one TwiML app for your project to be able to call from the browser. The application will provide a key, which is the last authentication key we need to run the sample application.&lt;/p&gt;
&lt;p&gt;Creating the TwiML app brings us to &lt;a target=&quot;_blank&quot; href=&quot;https://ngrok.com/&quot;&gt;Ngrok&lt;/a&gt;. When developing the sample app we got somehow confused by the flow and the calls where not going through. The eureka moment (obvious as it is) was when we realised that Twilio wanted to connect back to our development application to proceed, but the application was not available to the internet as it was running in localhost. &lt;a target=&quot;_blank&quot; href=&quot;https://ngrok.com/&quot;&gt;Ngrok&lt;/a&gt; solves this issue by allowing you to expose applications running in your development machine to the world. If you look at the snapshot above you may notice that the url associated to the voice &lt;em&gt;voice&lt;/em&gt; component of the application uses a &lt;em&gt;ngrok&lt;/em&gt; url, that way the connection between TwiML app and our development server works. Be sure to do the same when creating your TwiML application.&lt;/p&gt;
&lt;h2 id=&quot;using-twilio-inside-play-framework&quot;&gt;Using Twilio inside Play Framework&lt;/h2&gt;
&lt;p&gt;At this stage we have all the tools we need to run the application. Let&amp;#39;s see how did we build it. Remember that the code is available in our &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/gumtreeuk/Twilio-Play-Test&quot;&gt;Github repository&lt;/a&gt;, some things like the contents of the &lt;em&gt;routes&lt;/em&gt; file or the &lt;em&gt;views&lt;/em&gt; won&amp;#39;t be explained as they are trivial and can be seen in there.&lt;/p&gt;
&lt;p&gt;The first step is to create a &lt;a target=&quot;_blank&quot; href=&quot;http://www.playframework.com/&quot;&gt;Play Framework&lt;/a&gt; application (version 2.2.1) and then include into it the &lt;a target=&quot;_blank&quot; href=&quot;https://www.twilio.com/docs/java/install&quot;&gt;Twilio Java&lt;/a&gt; library. There is a Scala library available, but it is not a Twilio official one, and past experiences showed us that we better rely on the officially supported libraries. Thanks to the seamless integration between Java and Scala, this is not an issue.&lt;/p&gt;
&lt;p&gt;To do this edit &lt;em&gt;build.sbt&lt;/em&gt; and add:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;libraryDependencies ++= Seq(
 cache,
 &lt;span class=&quot;string&quot;&gt;&quot;com.twilio.sdk&quot;&lt;/span&gt; % &lt;span class=&quot;string&quot;&gt;&quot;twilio-java-sdk&quot;&lt;/span&gt; % &lt;span class=&quot;string&quot;&gt;&quot;3.4.1&quot;&lt;/span&gt;
)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;twilio-and-credentials&quot;&gt;Twilio and Credentials&lt;/h3&gt;
&lt;p&gt;As we have seen, Twilio uses 3 different keys to authorise API execution: SID, authentication token and application SID. We have created a model class to store these credentials:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TwilioCredentials&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(sid: String, token: String, appSID: String)&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our application forbids access to the test page if the credentials are not present in the session. This avoids issues when doing the calls, and ensures a predictable navigation flow. The way we achieve this is via a trait &lt;em&gt;TwilioAccess&lt;/em&gt; that contains some helper methods to check if the keys are present in the user session, as seen below (some support code not shown to reduce clutter): &lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TwilioAccess&lt;/span&gt; {&lt;/span&gt;

 &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; onUnauthorized(request: RequestHeader) = 
   Results.Redirect(routes.Application.index)
    .flashing(&lt;span class=&quot;string&quot;&gt;&quot;warning&quot;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;SID, App SID or Auth token missing in session&quot;&lt;/span&gt;)

 &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; hasCredentials(f: =&amp;gt; (String, String, String) =&amp;gt; Request[AnyContent] =&amp;gt; Result) = 
  credentialsPresent(onUnauthorized) {
   (sid, token, appSID) =&amp;gt;
    Action(request =&amp;gt; f(sid, token, appSID)(request))
  }

 &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; credentialsPresent[A](onUnauthorized: RequestHeader =&amp;gt; SimpleResult)
  (action: (String, String, String) =&amp;gt; EssentialAction): EssentialAction = {
   EssentialAction {
    request =&amp;gt;

     &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; mySid = sid(request)
     &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; myToken = auth(request)
     &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; myAppSID = appSID(request)

     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mySid.isEmpty || myToken.isEmpty || myAppSID.isEmpty)
      Done(onUnauthorized(request), Input.Empty)
     &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;
      action(mySid.get, myToken.get, myAppSID.get)(request)

   }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The relevant methods in the trait are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;credentialsPresent:&lt;/strong&gt; this method gets an essential action and a method to execute if the user is not authorised. The code checks that the three keys are present in the session and if they are proceeds by executing the essential action, otherwise it runs the &lt;em&gt;onUnauthorized&lt;/em&gt; method and prevents the user from accessing the page. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;hasCredentials:&lt;/strong&gt; uses the support method &lt;em&gt;credentialsPresent&lt;/em&gt; to give or forbid access to a specific action&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The fragment below shows how we use the trait to restrict user access:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TwilioAccess&lt;/span&gt; {&lt;/span&gt;

 &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; index = Action {
  implicit request =&amp;gt;
   Ok(views.html.index(credentialsForm)).withNewSession
 }

 &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; getCredentials = Action {
  implicit request =&amp;gt;

   credentialsForm.bindFromRequest.fold(
    errors =&amp;gt; BadRequest(views.html.index(errors)),

    credentials =&amp;gt; Redirect(routes.Application.testTwilio)
      .withSession(setSessionCredentials(credentials.sid, 
          credentials.token, credentials.appSID))
   )
 }

 &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; testTwilio = hasCredentials {
  (sid, token, appSID) =&amp;gt;
   implicit request =&amp;gt;

    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; callToken = TwilioAPI
     .generateCallToken(sid, token, appSID) &lt;span class=&quot;keyword&quot;&gt;match&lt;/span&gt; {

      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Failure(ex) =&amp;gt; 
       Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Couldn't generate the call token, error: ${ex.getMessage}&quot;&lt;/span&gt;);&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;

      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Success(id) =&amp;gt; 
       Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Call token $id ready&quot;&lt;/span&gt;); id
    }

    Ok(views.html.twilio(sid, smsForm, callToken, callsReceived))
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The method &lt;em&gt;index&lt;/em&gt; loads the main page and clears the session, removing any key stored in it. When we submit the form in the main page we hit &lt;em&gt;getCredentials&lt;/em&gt;, which (if the form validates) stores the credentials in the session and redirects to the test page.&lt;/p&gt;
&lt;p&gt;The method &lt;em&gt;testTwilio&lt;/em&gt; manages the access to the test page. By using the support method &lt;em&gt;hasCredentials&lt;/em&gt; from the included trait it ensures that if any of the credentials is missing the user won&amp;#39;t be given access to the page. If the credentials are present, we execute some Twilio related code and then display the test page. &lt;/p&gt;
&lt;p&gt;We have wrapped the access to Twilio API in an object &lt;em&gt;TwilioAPI&lt;/em&gt;, shown below:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TwilioAPI&lt;/span&gt; {&lt;/span&gt;

 &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; PHONE_FROM = &lt;span class=&quot;string&quot;&gt;&quot;+441473379566&quot;&lt;/span&gt;

 &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; sendSMS(sid: String, token: String, to: String, msg: String) = Try {
  Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Sending SMS to $to with text $msg&quot;&lt;/span&gt;)

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; client = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TwilioRestClient(sid, token)

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; params= Map((&lt;span class=&quot;string&quot;&gt;&quot;Body&quot;&lt;/span&gt;, msg), (&lt;span class=&quot;string&quot;&gt;&quot;To&quot;&lt;/span&gt;, to), (&lt;span class=&quot;string&quot;&gt;&quot;From&quot;&lt;/span&gt;, PHONE_FROM))

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; messageFactory: SmsFactory = client.getAccount.getSmsFactory
  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; message: Sms = messageFactory.create(params)

  message.getSid
 }

 &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; generateCallToken(sid: String, token: String, appSID: String) = 
  Try {
   Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Generating call token for app $appSID&quot;&lt;/span&gt;)

   &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; capability = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TwilioCapability(sid, token)
   capability.allowClientOutgoing(appSID)

   capability.generateToken
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The methods are quite self-explanatory, for example &lt;em&gt;sendSMS&lt;/em&gt; gets some credential;s along a destination phone number and a message, and sends an SMS to that number using the API. It returns the unique id of the message as generated by the API, for future reference. &lt;/p&gt;
&lt;p&gt;The other method, &lt;em&gt;generateCallToken&lt;/em&gt;, given the credentials generates a unique token that will be used by our browser to establish a call from browser to phone. More details on the process will be given in following sections.&lt;/p&gt;
&lt;h3 id=&quot;sending-a-sms&quot;&gt;Sending a SMS&lt;/h3&gt;
&lt;p&gt;Sending an SMS, as we saw when talking about the Twilio flows, is very simple. We assume the user has provided valid credentials and filled the form in the test page, by giving a destination mobile number and a text message to send. From a code point of view this means validating the form and calling the API method shown above:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; sendSMS = hasCredentials {
 (sid, token, appSID) =&amp;gt;
  implicit request =&amp;gt;

   smsForm.bindFromRequest.fold(
    errors =&amp;gt; 
     BadRequest(views.html.twilio(sid, errors, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, callsReceived)),

    details =&amp;gt; {

     &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; msg = TwilioAPI
       .sendSMS(sid, token, details.phone, details.msg) &lt;span class=&quot;keyword&quot;&gt;match&lt;/span&gt; {

        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Failure(ex) =&amp;gt; 
          Flash(Map(&lt;span class=&quot;string&quot;&gt;&quot;danger&quot;&lt;/span&gt; -&amp;gt; s&lt;span class=&quot;string&quot;&gt;&quot;Couldn't send sms, error: ${ex.getMessage}&quot;&lt;/span&gt;))

        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Success(id) =&amp;gt; 
          Flash(Map(&lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt; -&amp;gt; s&lt;span class=&quot;string&quot;&gt;&quot;SMS sent with id $id&quot;&lt;/span&gt;))
       }

     Redirect(routes.Application.testTwilio).flashing(msg)
    }
   )
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the message is sent we are sent back to the test page and we see a success message that includes the unique id of the message:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./twilio-play/sms_sent.png&quot; alt=&quot;SMS sent&quot; title=&quot;SMS sent&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;call-from-your-browser&quot;&gt;Call from your browser&lt;/h3&gt;
&lt;p&gt;Calling from the browser to a mobile phone is slightly more convoluted as we explained before. We need the following elements to be able to connect the call:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;a call token that will be generated by the Twilio server and used by the browser to establish the call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;javascript code to start and finish the call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;a REST endpoint that generates a valid TwiML file to tell Twilio how to react to the call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;another REST endpoint to store relevant information about the call&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;#39;s see the code for each component in order. Generating a call token is very simple, we saw the support method that does this in the &lt;em&gt;TwilioAPI&lt;/em&gt; object. As we need this token in the test page to be able to start the call, each time we load that page we generate a new token. This is not the way you may want to act in production, but it works for this test application:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; callToken = TwilioAPI
 .generateCallToken(sid, token, appSID) &lt;span class=&quot;keyword&quot;&gt;match&lt;/span&gt; {

  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Failure(ex) =&amp;gt; 
   Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Couldn't generate the call token, error: ${ex.getMessage}&quot;&lt;/span&gt;);&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;

  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; Success(id) =&amp;gt; 
   Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Call token $id ready&quot;&lt;/span&gt;);id
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The token is rendered in the test page, along some javascript that links the &lt;em&gt;call&lt;/em&gt; button with the Twilio javascript SDK. The code, with comments to explain what each element does, is shown next:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Create the Client with a Capability Token */&lt;/span&gt;
Twilio.Device.setup(&lt;span class=&quot;string&quot;&gt;&quot;@callToken&quot;&lt;/span&gt;, {debug: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;});

&lt;span class=&quot;comment&quot;&gt;/* Let us know when the client is ready. */&lt;/span&gt;
Twilio.Device.ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(device)&lt;/span&gt; {&lt;/span&gt;
 $(&lt;span class=&quot;string&quot;&gt;&quot;#log&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&quot;Ready&quot;&lt;/span&gt;);
});

&lt;span class=&quot;comment&quot;&gt;/* Report any errors on the screen */&lt;/span&gt;
Twilio.Device.error(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(error)&lt;/span&gt; {&lt;/span&gt;
 $(&lt;span class=&quot;string&quot;&gt;&quot;#log&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&quot;Error: &quot;&lt;/span&gt; + error.message);
});

&lt;span class=&quot;comment&quot;&gt;/* Log a message when a call disconnects. */&lt;/span&gt;
Twilio.Device.disconnect(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(conn)&lt;/span&gt; {&lt;/span&gt;
 $(&lt;span class=&quot;string&quot;&gt;&quot;#log&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&quot;Call ended&quot;&lt;/span&gt;);
});

Twilio.Device.connect(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(conn)&lt;/span&gt; {&lt;/span&gt;
 $(&lt;span class=&quot;string&quot;&gt;&quot;#log&quot;&lt;/span&gt;).text(&lt;span class=&quot;string&quot;&gt;&quot;Successfully established call&quot;&lt;/span&gt;);
});

&lt;span class=&quot;comment&quot;&gt;/* Connect to Twilio when we call this function. */&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
 &lt;span class=&quot;comment&quot;&gt;// get the phone number to connect the call to&lt;/span&gt;
 params = {&lt;span class=&quot;string&quot;&gt;&quot;To&quot;&lt;/span&gt;: $(&lt;span class=&quot;string&quot;&gt;&quot;#callTo&quot;&lt;/span&gt;).val()};
 Twilio.Device.connect(params);
}

&lt;span class=&quot;comment&quot;&gt;/* A function to end a connection to Twilio. */&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hangup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
 Twilio.Device.disconnectAll();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pressing the &lt;em&gt;call&lt;/em&gt; or &lt;em&gt;hang up&lt;/em&gt; buttons triggers a call to the corresponding javascript methods, which start or end the call. The other methods provide logging and could be used to react to different error scenarios as desired. Please note that the &lt;em&gt;params&lt;/em&gt; value we pass to &lt;em&gt;Twilio.Device.connect&lt;/em&gt; can contain any custom parameter we want, and it will be forwarded to our server in the next step.&lt;/p&gt;
&lt;p&gt;With this we have all the components we need to start the call, but we still need to indicate Twilio how to proceed after we it receives the call command. As you may remember, when creating the TwiML application you assigned a &lt;em&gt;voice&lt;/em&gt; url, mapped via &lt;em&gt;Ngrok&lt;/em&gt; to your local deployment. This call maps to a method in &lt;em&gt;Application&lt;/em&gt; controller that returns a TwiML file with the action to execute.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; serveCallConfig = Action {
 implicit request =&amp;gt;
  Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Establishing a call form a browser&quot;&lt;/span&gt;)
  Logger.debug(s&lt;span class=&quot;string&quot;&gt;&quot;Request: ${request.queryString.toList}&quot;&lt;/span&gt;)

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; to = request.queryString.get(&lt;span class=&quot;string&quot;&gt;&quot;To&quot;&lt;/span&gt;).getOrElse(mutable.Buffer()).mkString
  Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Found target number $to&quot;&lt;/span&gt;)

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; action = routes.Application.callDone.absoluteURL()
  Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Action for recording is $action&quot;&lt;/span&gt;)

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; xml = s&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;Response&amp;gt;&amp;lt;Dial callerId='+441473379566' method='GET' action='$action' record='true'&amp;gt;&amp;lt;Number&amp;gt;$to&amp;lt;/Number&amp;gt;&amp;lt;/Dial&amp;gt;&amp;lt;/Response&amp;gt;&quot;&lt;/span&gt;
  Ok(xml).as(&lt;span class=&quot;string&quot;&gt;&quot;text/xml&quot;&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that in the method we only extract the value for the parameter &lt;em&gt;to&lt;/em&gt; form the request, but we could get more values as mentioned above when showing the javascript code. The XML generated includes an action &lt;em&gt;Dial&lt;/em&gt; to call a specific number (provided in the request). Once Twilio gets this document it will connect the browser with the number we provided in the XML file. &lt;/p&gt;
&lt;p&gt;Note that the XML also adds an &lt;em&gt;action&lt;/em&gt;, an optional (but recommended) parameter of the TwiML. This action is called by Twilio once the call ends, and it allows us to get information about the call, including the length and status, and a MP3 recording of the call. We can see the code that manages that request here:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;scala&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; callDone = Action {
 implicit request =&amp;gt;
  Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;A call from a browser has ended, storing details&quot;&lt;/span&gt;)
  Logger.debug(s&lt;span class=&quot;string&quot;&gt;&quot;Request: ${request.queryString.toList}&quot;&lt;/span&gt;)

  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; status = request.queryString.get(&lt;span class=&quot;string&quot;&gt;&quot;DialCallStatus&quot;&lt;/span&gt;).getOrElse(mutable.Buffer()).mkString
  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; sid = request.queryString.get(&lt;span class=&quot;string&quot;&gt;&quot;DialCallSid&quot;&lt;/span&gt;).getOrElse(mutable.Buffer()).mkString
  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; duration = request.queryString.get(&lt;span class=&quot;string&quot;&gt;&quot;DialCallDuration&quot;&lt;/span&gt;).getOrElse(mutable.Buffer()).mkString
  &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; recording = request.queryString.get(&lt;span class=&quot;string&quot;&gt;&quot;RecordingUrl&quot;&lt;/span&gt;).getOrElse(mutable.Buffer()).mkString

  Logger.info(s&lt;span class=&quot;string&quot;&gt;&quot;Call $sid terminated with status $status after $duration. Recording available at $recording&quot;&lt;/span&gt;)
  callsReceived = recording :: callsReceived
  Ok
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the sample app we store all the call results in an in-memory array, but as you can see there is plenty of relevant information available about the call that may be of use in a production environment.&lt;/p&gt;
&lt;p&gt;And, with this, the system is working. Ensure that &lt;em&gt;Ngrok&lt;/em&gt; is running, the TwiML application is properly configured and launch the Play server. You will be able to call from your browser to your own mobile phone (or anyone&amp;#39;s) and get a link to the MP3 recording of the call.&lt;/p&gt;
&lt;h1 id=&quot;that-s-all-folks&quot;&gt;That&amp;#39;s All Folks&lt;/h1&gt;
&lt;p&gt;And we are done. To summarise, we have seen how to use some Twilio services from within a Play Framework API, using Scala. This provides us with an extensible playground we can use to test and decide if the service fits the needs of our business. We have also talked about the Twilio flow and why we need to use Ngrok to expose our test environment to their systems.&lt;/p&gt;
&lt;p&gt;The nice part is that without being experts, as this was our first time testing the Twilio API, we could create the prototype in a couple of hours (including pitfalls with ngrok). It took longer to write the post that to write the code. This shows that the API is mature and intuitive, and you can achieve quite a lot with minimal effort. &lt;/p&gt;
&lt;p&gt;Another good thing about Twilio has been their customer support. We had a couple of requests and they were answered quickly, allowing us to test assumptions with a minimal delay. Any of you who has been testing a new API in a domain they are not experts knows sometimes it is easy to get stuck, and finding the solution (trivial as it may be) consumes a lot of time and energy. The fact we didn&amp;#39;t have this pain with Twilio is something we, as developers, appreciate. It&amp;#39;s not easy to build a good API :) &lt;/p&gt;
&lt;p&gt;I hope it has been useful and, as always, feel free to comment and to fork the code for your own purposes.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2014-01-03-using-twilio-from-within-play-framework-scala.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2014-01-03-using-twilio-from-within-play-framework-scala.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2014-01-03-using-twilio-from-within-play-framework-scala.html';
		window.disqus_identifier = '2014-01-03-using-twilio-from-within-play-framework-scala';
		window.disqus_title = 'Using Twilio from within Play Framework';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Jenkins build boost</title>
			<link href="http://www.gumtree.com/devteam//2013-12-08-jenkins-build-boost.html"/>
			<updated>2013-12-08T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2013-12-08-jenkins-build-boost.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Jenkins build boost - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Dec 8th, 2013&lt;/span&gt;
				&lt;h1&gt;Jenkins build boost&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Tomas Bezdek&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-12-08-jenkins-build-boost.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-12-08-jenkins-build-boost.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;In the last couple of years agile development has become very popular across the industry. Who wouldn&amp;#39;t like agile. Abandoning obsolete and protracted methodologies like waterfall or prototyping and delivering code in short release cycles, less likely to introduce major bugs. But honestly, when you develop a functionality, do you really want to be waiting till the end of the sprint to see your code in production? Well in Gumtree we don&amp;#39;t like waiting. We want to be able to deliver our customers new functionality and better experience not withing weeks or days, but within hours. And to achieve this, we need not only fully automated, but also extremely fast release process.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;One of the key problems we were struggling with was build pipeline in our CI (&lt;a target=&quot;_blank&quot; href=&quot;http://jenkins-ci.org/&quot;&gt;Jenkins&lt;/a&gt;). The pipeline is configured to build the whole stack of projects we have and has about 25 jobs, some of them running in parallel. Passing the pipeline usually took about 45 to 60 minutes and sometimes even longer when multiple pipelines were executed simultaneously. Surprisingly building most of the pipeline&amp;#39;s jobs locally and sequentially didn&amp;#39;t usually take more than 20 minutes, which was giving me nightmares and eventually made me to look closer on what&amp;#39;s happening during the build and what&amp;#39;s causing this slowlyness.&lt;/p&gt;
&lt;h2 id=&quot;timestamper-plugin&quot;&gt;Timestamper plugin&lt;/h2&gt;
&lt;p&gt;Good logging is essential when you are trying to detect application issues. Jenkins is no exception and default installation provides pretty good logging for jobs executions. Unfortunately the logs don&amp;#39;t contain any timestamps which makes revealing bottlenecks quite difficult. But there is a solution - &lt;a target=&quot;_blank&quot; href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Timestamper&quot;&gt;Timestamper plugin&lt;/a&gt;, which can for each log entry display either system time or time elapsed since job was triggered. Each of the formats is handy in different situation, I&amp;#39;ve usually used &lt;code&gt;time elapsed&lt;/code&gt; to compare builds with different build times to see where the difference comes from.&lt;/p&gt;
&lt;h2 id=&quot;internal-networks-and-proxies&quot;&gt;Internal networks and proxies&lt;/h2&gt;
&lt;p&gt;Having timestamps, first delay was very easy to discover. By simply following sequence of timestamps on each line I&amp;#39;ve noticed there&amp;#39;s long delay when executing jaxws-maven-plugin. Our CI infrastructure is running on private network with no direct access to Internet and communication with outer networks is handled by proxy server. We are obviously no amateurs and maven was configured to honor the proxy, but we didn&amp;#39;t realize this plugin is executing separate JVM and doesn&amp;#39;t automatically pass proxy settings. It took a while to figure out correct configuration, but I&amp;#39;ve succeeded and maven was no more timing out for 30 seconds each time the plugin was executed. Later on, the generated classes were moved to separate, out of pipeline project and build time was improved again.&lt;/p&gt;
&lt;h2 id=&quot;artifact-publishing-and-fingerprinting&quot;&gt;Artifact publishing and fingerprinting&lt;/h2&gt;
&lt;p&gt;No matter how useful feature might &lt;a target=&quot;_blank&quot; href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Fingerprint+Plugin&quot;&gt;fingerprinting&lt;/a&gt; be, it should be carefully chosen which jobs needs the fingerprinting and these jobs shouldn&amp;#39;t keep too long build history. Otherwise it can easily happen that many gigabytes of your Jenkins master will be occupied by couple millions of small fingerprint files and when &lt;code&gt;Fingerprint clenup job&lt;/code&gt; is executed, heavy I/O load will make the master pretty unresponsive. And even if the GUI itself might still behave quite ok, it surely will slow down slave jobs which would be trying to send files back to master. In our case, fingerprinting was just leftover obsolete plugin and could be safely uninstalled.&lt;/p&gt;
&lt;p&gt;I came across the fingerprinting plugin by trying to solve different issue - sometimes copying build artifacts back on master for archiving took ages. Fingerprinting was the reason, but after talking to other developers and site operations, it turned out that since we are storing all the artifacts in &lt;a target=&quot;_blank&quot; href=&quot;http://freecode.com/projects/sonatype-nexus&quot;&gt;Nexus&lt;/a&gt;, we don&amp;#39;t really need them on Jenkins and this feature could be turned off as well.&lt;/p&gt;
&lt;h2 id=&quot;slave-instances-performance&quot;&gt;Slave instances performance&lt;/h2&gt;
&lt;p&gt;As I mentioned at the beginning, building projects locally took much less time than running them in Jenkins. But even after resolving previous two blockers, maven still reported per-project build time significantly higher than on my localhost. There were no more obvious delays during the build, so I tried to login to slave, manually checkout longest lasting project and execute build manually to see if problem is in job configuration of somewhere else. The pure maven build lasted longer than running same command on my local environment and I finally realized, the problem is not job setup, but slave performance itself. Reducing number of slaves and assigning gained resources to remaining machines made the pipeline perform much better again.&lt;/p&gt;
&lt;p&gt;Unfortunately reducing number of slaves resulted in jobs having to queue when building multiple pipelines simultaneously. This still has to be fixed, but since not all jobs require powerful hardware, the solution is easy. We just need to sacrifice one of the big slave machines, turn it into several smaller instances and assign jobs to instances using labels.&lt;/p&gt;
&lt;h2 id=&quot;dependent-on-services-performance&quot;&gt;Dependent-on services performance&lt;/h2&gt;
&lt;p&gt;After speeding up maven build itself, there were still mysterious differences when building same job multiple times. When Jenkins finishes maven build phase, it executes publishers, reporters and notifications. In our case publishers were the issue.&lt;/p&gt;
&lt;p&gt;Except for deploying jar artifacts to nexus, we are also building deb packages and use &lt;a target=&quot;_blank&quot; href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/SCP+plugin&quot;&gt;SCP plugin&lt;/a&gt; to copy them to apt-like repository from which they are later on used for deploying to QA and production environments. Each environment used to have separate repository and packages had to be copied twice. This was solved by building another pipeline which (in a nutshell) takes care of deploying modified packages to pre-release environment, running
regression tests and if everything passes, copying these packages to production repository. However this wasn&amp;#39;t the main problem with repositories and to make things more interesting, each repository had different kind of problem.&lt;/p&gt;
&lt;p&gt;First problem was caused by two independent and mis-configured &lt;a target=&quot;_blank&quot; href=&quot;http://puppetlabs.com/&quot;&gt;puppet&lt;/a&gt; instances. First, long forgotten and locally configured instance was set to keep the repository as home of user &lt;code&gt;jenkins&lt;/code&gt;. Second, newer and remotely configured instance was trying to keep it as home for user &lt;code&gt;repo&lt;/code&gt;. Every now and then when puppets were checking permissions for user&amp;#39;s home directories, they discovered permissions do not match and decided to restore law&amp;amp;order in their jurisdiction. To achieve this, puppet is running &lt;code&gt;usermod&lt;/code&gt; command which also takes care of changing file permissions for all files in given directory. Unfortunately directory containing ~12k files and being mounted using NFS caused incredible I/O load and resulted in new files upload being utterly slow.&lt;/p&gt;
&lt;p&gt;Second, much easier to discover and solve, problem was caused by a bash script. Script which was extracting all packages, indexing their metadata and creating genuine apt repository that we used to install packages using pure &lt;code&gt;apt-get update/install&lt;/code&gt;. Doing this on ~120 GB of packages every time you upload new one is something you really want to avoid. Luckily we didn&amp;#39;t have to look for more efficient way of indexing, because we just replaced last service using this repository by more efficient solution and we could simply remove the script from cron.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Not only when you&amp;#39;re experiencing issues with your CI environment, but every now and then try to look at &lt;code&gt;Build Time Trend&lt;/code&gt; of your jobs and if you see increasing build duration, spend some time investigating why has that happened and if it&amp;#39;s really necessary. Also when introducing new features to the build, spend few seconds thinking about the other steps and consider if they are still needed. Most of the mentioned problems didn&amp;#39;t cause significant delay, but given the number of jobs in the pipeline the result was amazing. Pipeline is now usually being built in less than 15 minutes and the only problem when building multiple pipelines simultaneously is lack of slaves.&lt;/p&gt;
&lt;p&gt;The next step for speeding up the pipeline is using parallel build introduced in Maven 3. Test runs seems very promising, about 7 minutes from pulling the trigger to last artifact copied to repository. Groovy, let&amp;#39;s roll it out, what are we waiting for? Unfortunately we are still using plugins which are not compatible with parallel build and sometimes makes it fail. But we work hard when we don&amp;#39;t play and hopefully we will be able to fix or replace all incompatible plugins soon.&lt;/p&gt;
&lt;p&gt;Thanks you for reading, hope it was useful and if you have any tips how to increase build speed in Jenkins, please share in comments.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-12-08-jenkins-build-boost.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-12-08-jenkins-build-boost.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2013-12-08-jenkins-build-boost.html';
		window.disqus_identifier = '2013-12-08-jenkins-build-boost';
		window.disqus_title = 'Jenkins build boost';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Want better quality? Grow more heads!</title>
			<link href="http://www.gumtree.com/devteam//2013-11-28-want-better-quality-grow-more-heads.html"/>
			<updated>2013-11-28T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2013-11-28-want-better-quality-grow-more-heads.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Want better quality? Grow more heads! - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Nov 28th, 2013&lt;/span&gt;
				&lt;h1&gt;Want better quality? Grow more heads!&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Simon Tomes&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-11-28-want-better-quality-grow-more-heads.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-11-28-want-better-quality-grow-more-heads.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Go check that thing on top of your shoulders. Yes my friend that is indeed your head and you should have only one.
One head is useful for thinking about quality but I reckon four will do a way better job. Wearing four different heads
allows you to get closer to the holy grail of unquestionable quality - where everything &lt;code&gt;just works&lt;/code&gt;. Here are the
reasons why it&amp;#39;s time to grow more heads!
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-the-what-does-this-really-mean-head&quot;&gt;1. The &lt;em&gt;what does this really mean&lt;/em&gt; head&lt;/h2&gt;
&lt;p&gt;Like an English Language teacher on Red Bull, this is the head that attempts to remove ambiguity and assumptions. It&amp;#39;s
the head that asks: What generalisations have we made about what we are about to build ? Are there any implicit assumptions?
If so, how come there are assumptions? Is there anything else you have not told me that you assume I know about?&lt;/p&gt;
&lt;p&gt;For example, consider this statement:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;When an ad is posted by a user for the first time, send an activation email with a link to complete account activation.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Break this down and more questions are asked.&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;ad is posted
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What type of ad - paid /non-paid? In every category? What state is the ad in when posted - does that matter?&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;by a user
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What is the definition of a user? What type of user? All users?&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;for the first time
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;How is first time defined? Is this assuming that they have never been on Gumtree before? What if they&amp;#39;ve registered already but have not activated their account?&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;no-highlight&quot;&gt;send an activation email
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Send to who? etc etc&lt;/p&gt;
&lt;h2 id=&quot;2-the-how-could-this-go-wrong-head&quot;&gt;2. The &lt;em&gt;how could this go wrong&lt;/em&gt; head&lt;/h2&gt;
&lt;p&gt;This is the head that asks questions like: I wonder what would happen if I did this? How could this break other parts
of the site? Or another way of looking at it - what other stuff should still work when we release this stuff? It&amp;#39;s the sort
of head that likes to try different combinations of things that don&amp;#39;t seem obvious to try together.&lt;/p&gt;
&lt;h2 id=&quot;3-the-what-would-the-user-really-do-head&quot;&gt;3. The &lt;em&gt;what would the user really do&lt;/em&gt; head&lt;/h2&gt;
&lt;p&gt;This is the head that likes to think like a real user and not just a tech person. Using this head forces you to really
think about your users. Do you run tests based on what the majority of users would do? How do you know what the majority
of users would do? What about the minority? It&amp;#39;s the head that asks what would be the impact on the user if this didn&amp;#39;t work?
Would they care? And if so why bother testing it if they didn&amp;#39;t? Would my mum be able to use this thing? If not how come?&lt;/p&gt;
&lt;h2 id=&quot;4-the-is-that-enough-head&quot;&gt;4. The &lt;em&gt;is that enough&lt;/em&gt; head&lt;/h2&gt;
&lt;p&gt;This is the head that asks questions like: Have we cut any corners? Have we really come up with the most important scenarios?
How do we know what scenarios are more important than others? How do you define important? If we went live with that
test coverage, how much uncertainty would be left over? This head attempts to reduce uncertainty to a point where
the right level of uncertainty is acceptable. Who should say what level of uncertainty is &amp;quot;right&amp;quot; though? You can&amp;#39;t
test everything so you need to be happy with a certain level of the unknown. Stats and chats with multiple stakeholders are a must for this head.&lt;/p&gt;
&lt;p&gt;Quality is a complex beast and growing three more heads will help you think quality first. Do you have some quality head experiences to share?&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-11-28-want-better-quality-grow-more-heads.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-11-28-want-better-quality-grow-more-heads.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2013-11-28-want-better-quality-grow-more-heads.html';
		window.disqus_identifier = '2013-11-28-want-better-quality-grow-more-heads';
		window.disqus_title = 'Want better quality? Grow more heads!';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Reactive Programming: hype or truth?</title>
			<link href="http://www.gumtree.com/devteam//2013-11-22-reactive-programming-hype-or-truth.html"/>
			<updated>2013-11-22T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2013-11-22-reactive-programming-hype-or-truth.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Reactive Programming: hype or truth? - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Nov 22nd, 2013&lt;/span&gt;
				&lt;h1&gt;Reactive Programming: hype or truth?&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Pere Villega&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-11-22-reactive-programming-hype-or-truth.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-11-22-reactive-programming-hype-or-truth.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Let&amp;#39;s leave the keyboards and code aside for a moment, and let&amp;#39;s talk about the current state of art in programming. &lt;/p&gt;
&lt;p&gt;As developers, we tend to like technology and novelty, sometimes making the mistake of putting them before the business needs.  Unfortunate, as business challenges can be more fun than hacking your &lt;a target=&quot;_blank&quot; href=&quot;http://resources.infosecinstitute.com/some-cool-diy-raspberry-pi-projects/&quot;&gt;Raspberry Pi&lt;/a&gt;, but I digress. The downside is that, quite often, we hype some new (or not so new) tool/language/thing into stardom and then drop it at the same speed while pursuing the next novelty we see around.&lt;/p&gt;
&lt;p&gt;If you are keeping with technology news, you may have noticed a new word creeping around. &lt;strong&gt;Reactive&lt;/strong&gt;. You have the &lt;a target=&quot;_blank&quot; href=&quot;http://www.reactivemanifesto.org/&quot;&gt;Reactive Manifesto&lt;/a&gt;. There is a course in &lt;a target=&quot;_blank&quot; href=&quot;https://www.coursera.org/course/reactive&quot;&gt;Reactive Programming&lt;/a&gt;. Indeed, it is all over the place.&lt;/p&gt;
&lt;p&gt;And so, the question arises: is reactive programming a buzzword doomed to die or, quite the opposite, it is a new way of working with a potential impact similar to the Agile Manifesto? &lt;/p&gt;
&lt;p&gt;I personally believe that this isn&amp;#39;t hype, that &lt;em&gt;reactive programming&lt;/em&gt; is here to stay. Let me try to justify
it.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-s-reactive-programming-&quot;&gt;What&amp;#39;s reactive programming?&lt;/h2&gt;
&lt;p&gt;First of all, we should clarify what do we mean by reactive programming. The aforementioned &lt;a target=&quot;_blank&quot; href=&quot;http://www.reactivemanifesto.org/&quot;&gt;Reactive Manifesto&lt;/a&gt; gives a bit more detail on the matter, but it all boils down to 4 properties that the signers of the manifesto want software to have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Event-driven &lt;/li&gt;
&lt;li&gt;Scalable &lt;/li&gt;
&lt;li&gt;Resilient&lt;/li&gt;
&lt;li&gt;Responsive&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you can see, quite a generic definition that includes properties we all want in web-based apps. Event-driven is nothing new, servers like &lt;a target=&quot;_blank&quot; href=&quot;http://wiki.nginx.org/Main&quot;&gt;Nginx&lt;/a&gt; used this to solve the C10K problem. Scalability and Resilience is something any software developer of any decent sized application wants to achieve. And we already know that &lt;a target=&quot;_blank&quot; href=&quot;http://www.montparnas.com/articles/more-evidence-that-speed-is-key-to-user-experience/&quot;&gt;Responsiveness is money&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But, you may ask, if there is nothing new in this concept why has it become so popular recently? &lt;/p&gt;
&lt;h2 id=&quot;benefits-of-reactive&quot;&gt;Benefits of reactive&lt;/h2&gt;
&lt;p&gt;The answer to that question comes, as with many things, with context. We can&amp;#39;t deny that we are in a field that evolves extremely fast, just compare the technologies used on the web 10 years ago and now (hint: Gmail was released in April 2004 and it was revolutionary because it used…Ajax). &lt;/p&gt;
&lt;p&gt;What is the current context in the web? Well, there are some interesting trends:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mobile web:&lt;/strong&gt; smartphones and tablets are becoming the main tools for browsing the web&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;increase of users:&lt;/strong&gt; the percentage of the population using internet has increased. A lot. Which means that a popular website manages one or two orders of magnitude more users than in 2000.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;user expectations:&lt;/strong&gt; the fact that such a big percentage of the population uses the web has a downside for us, developers: few of them are early adopters which accept bugs as part of the deal. Users want a speed, quality, and for free (if possible). &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PaaS:&lt;/strong&gt; servers are cheap. Extremely cheap. Amazon, Heroku, DigitalOcean… you can deploy a new web server in minutes, at a cost of cents per hour. But due to the nature of the services they offer, you are forced to break your application into more components, which means more potential points of failure while systems talk between them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I could add more, but these are enough to show that the context has changed a lot, and it keeps changing. And this is where reactive programming ties in by defining properties that, in the past, were desirable but not critical. With the evolution of the web in the recent years, these properties have now become basic for any decent sized application.&lt;/p&gt;
&lt;p&gt;For example, the emergence of PaaS and the reliance on remote calls via RESTful endpoints means that your code will be interacting with multiple components, any of which may fail. If your software is blocking (not event-driven) and synchronous, you are in for a nightmare made of exception handling code, low performance due to latency and thread locking, and unreliable code. &lt;/p&gt;
&lt;p&gt;The natural solution to this issue is to go asynchronous and event driven, which in turn improves the scalability and resilience of the application by making it easier to handle errors and latency. That is, the solution is to go reactive.&lt;/p&gt;
&lt;h2 id=&quot;reactive-and-typesafe&quot;&gt;Reactive and Typesafe&lt;/h2&gt;
&lt;p&gt;There is an elephant in the room that has to be discussed. Most of the push for Reactive Programming comes from &lt;a target=&quot;_blank&quot; href=&quot;http://typesafe.com/&quot;&gt;Typesafe&lt;/a&gt;, the company behind Scala. They want it to succeed and they would benefit from that, for sure. But can we reduce Reactive Programming to mere economic interest, a PR stunt by a tech company?&lt;/p&gt;
&lt;p&gt;Is my personal opinion that it would be foolish to do so. As much as they have an economic interest on it, the manifesto Typesafe sponsored is not focussing on any technology in particular. It is not a Scala manifesto, forcing people to use their tools through FUD.&lt;/p&gt;
&lt;p&gt;The manifesto, and the concepts behind reactive programming, focus on architectural principles. Some desirable properties are defined and justified, and these are properties that any professional application needs to have. It&amp;#39;s not just a matter of technology, but in many cases of survival: a slow, non-resilient application will not keep its users for long.&lt;/p&gt;
&lt;p&gt;You have working alternatives out there. Like it or hate it, but Python (&lt;a target=&quot;_blank&quot; href=&quot;http://www.tornadoweb.org/en/stable/&quot;&gt;via Tornado&lt;/a&gt;), Node.js and other frameworks can give you a reactive environment. The key here is not the tool used, but the architectural concepts behind. &lt;/p&gt;
&lt;p&gt;So, yes, Typesafe has an economic interest. And they could have tried to push their own products. But instead they try to push a generic way of working, of good practices, that can benefit you whatever tools you use. This is not a matter of Akka vs other frameworks, it&amp;#39;s a matter of doing good software. &lt;/p&gt;
&lt;p&gt;I hope that I&amp;#39;ve given you enough arguments to justify that Reactive Programming is not a fad, and that you should invest on learning more about it. Hype or truth? The discussion is open, feel free to join :)&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-11-22-reactive-programming-hype-or-truth.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-11-22-reactive-programming-hype-or-truth.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2013-11-22-reactive-programming-hype-or-truth.html';
		window.disqus_identifier = '2013-11-22-reactive-programming-hype-or-truth';
		window.disqus_title = 'Reactive Programming: hype or truth?';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
		<entry>
			<title>Sessions, not that sticky</title>
			<link href="http://www.gumtree.com/devteam//2013-11-21-sticky-sessions.html"/>
			<updated>2013-11-21T00:00:00.000Z</updated>
			<id>http://www.gumtree.com/devteam//2013-11-21-sticky-sessions.html</id>
			<content type="html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;!-- Our site title and description --&gt;
	&lt;title&gt;Sessions, not that sticky - Gumtree Dev Team&lt;/title&gt;
    
	&lt;!-- Meta --&gt;
	&lt;meta charset=&quot;utf-8&quot; /&gt;
	&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;

	&lt;!-- Use the .htaccess and remove these lines to avoid edge case issues.
	   More info: h5bp.com/i/378 --&gt;
	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;

	&lt;meta name=&quot;description&quot; content=&quot;The Gumtree Dev Team.&quot; /&gt;
	&lt;meta name=&quot;keywords&quot; content=&quot;Gumtree, technology, development, team, engineering, web, product development&quot; /&gt;
	&lt;meta name=&quot;author&quot; content=&quot;Gumtree&quot; /&gt;

	&lt;!-- Output DocPad produced meta elements --&gt;
	&lt;meta name=&quot;generator&quot; content=&quot;DocPad v6.55.9&quot; /&gt;

    &lt;link href=&quot;http://www.gumtree.com/devteam/atom.xml&quot; rel=&quot;alternate&quot; title=&quot;Gumtree DevTeam&quot; type=&quot;application/atom+xml&quot;&gt;

	&lt;!-- Mobile viewport optimized: h5bp.com/viewport --&gt;
	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;

	&lt;!-- Icons --&gt;
    &lt;link rel=&quot;shortcut icon&quot; href=&quot;http://www.gumtree.com/devteam/icons/favicon.ico&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;144x144&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-144-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-114-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-72-precomposed.png&quot;&gt;
    &lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;http://www.gumtree.com/devteam/icons/apple-touch-icon-57-precomposed.png&quot;&gt;

	&lt;!-- Styles --&gt;
	&lt;link href='http://fonts.googleapis.com/css?family=Montserrat|Maven+Pro' rel='stylesheet' type='text/css'&gt;
	&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/zurb-foundation.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/highlightjs-obsidian.css&quot; /&gt;&lt;link  rel=&quot;stylesheet&quot; href=&quot;http://www.gumtree.com/devteam/styles/main.css&quot; /&gt;

	&lt;!-- Shims: IE6-8 support of HTML5 elements --&gt;
	&lt;!--[if lt IE 9]&gt;
		&lt;script async src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
    &lt;!-- GTM dataLayer --&gt;
	&lt;script type=&quot;text/javascript&quot;&gt;
        var dataLayer = [{
            &quot;p&quot;: {
                &quot;t&quot;: &quot;BlogArticle&quot;,
                &quot;pl&quot;: &quot;DevBlog&quot;,
                &quot;v&quot;: &quot;0.1&quot;,
            }
        }];
    &lt;/script&gt;
    &lt;!-- GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
        '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-MDWG89');&lt;/script&gt;
    &lt;!-- End GTM Pt1 --&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        var mpx_custom = {
           new_mpcl:'blog;;;;;;;;;;;' + document.URL,
           new_mpvl:document.referrer
        }
    &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;!-- GTM Pt2 --&gt;
    &lt;noscript&gt;
        &lt;iframe src=&quot;//www.googletagmanager.com/ns.html?id=GTM-MDWG89&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt; 
    &lt;/noscript&gt;
    &lt;!-- End GTM Pt2 --&gt;
    &lt;div id='layout'&gt;
        &lt;nav class=&quot;container top-bar&quot; style=&quot;&quot;&gt;
        &lt;div class=&quot;row&quot;&gt;
            &lt;a href=&quot;http://www.gumtree.com&quot; class=&quot;header-logo&quot;&gt;
                &lt;img src=&quot;https://sa.gumtree.com/responsive/images/orphans/logo_@2x.png&quot;&gt;
            &lt;/a&gt;
            
                &lt;div class=&quot;blog-title&quot;&gt;&lt;a href=&quot;http://www.gumtree.com/devteam/&quot;&gt;Dev&lt;span class=&quot;team&quot;&gt;Team_&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
            
			&lt;/div&gt;
        &lt;/nav&gt;
		&lt;div role=&quot;main&quot;&gt;
			&lt;article id=&quot;post&quot; class=&quot;post&quot;&gt;

	&lt;div class=&quot;row&quot;&gt;
		&lt;section class=&quot;columns post-content small-12 large-8&quot;&gt;
	        	&lt;header&gt;
	            		&lt;span class=&quot;post-date&quot;&gt;Nov 21st, 2013&lt;/span&gt;
				&lt;h1&gt;Sessions, not that sticky&lt;/h1&gt;
				&lt;span class=&quot;author&quot;&gt;By Andy Summers&lt;/span&gt;
                &lt;section class=&quot;social-buttons-wrap&quot;&gt;
                    &lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-11-21-sticky-sessions.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-11-21-sticky-sessions.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
                &lt;/section&gt;
	        	&lt;/header&gt;
			&lt;p&gt;Like many other websites with a large number of concurrent users, parts of our architecture have to be scaled horizontally. In doing this, we have a load balancer in front of many running instances of the same web application, and user requests will be spread across these instances. It is common and convenient in web development to store temporary user data in session for use between requests. Most of our architecture is written using Spring MVC which has great support for this via the use of session-scoped beans and flash attributes. Session data is, however, all in-memory and only available within the scope of a single running application. Any time a developer programs an application to write some data to the session, he/she is making the assumption that subsequent requests whom require access to this data, will come to that same instance. With the load balancer setup described at the start - it becomes difficult to pre-determine which instance is going to get any one request. One way to deal with this is to use &amp;#39;sticky sessions&amp;#39; whereby a particular cookie is dropped in the user&amp;#39;s browser, holding the session ID. The load balancer can then look for this cookie and maintain a mapping from this ID to the instance who is serving this particular user&amp;#39;s session.
&lt;!-- Read more --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./sticky-sessions/sticky-session-67429.png&quot; alt=&quot;User is working with a dedicated server node&quot; title=&quot;User is working with a dedicated server node&quot;&gt;&lt;/p&gt;
&lt;p&gt;All well and good? But what if a particular instance of the application was misbehaving and needed to be restarted, or what if there was a new release of the application? Anytime you shut down a running application, it loses all its in-memory data. Any user whose session was being held by one instance, will have all their session data thrown away and this could be a very bad experience indeed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./sticky-sessions/session-broken-91627.png&quot; alt=&quot;User session is broken if the node is restarted&quot; title=&quot;User session is broken if the node is restarted&quot;&gt;&lt;/p&gt;
&lt;p&gt;Readers who use Gumtree to sell things will be familiar with the multi-step flow involved when posting an advert. On our desktop site such an activity involves 3 pages: one to pick a category; one to pick a location; and one to fill out all the details about their advert such as title, description, etc. Only when the user hits &amp;#39;Post my ad&amp;#39; after filling out the form, is anything submitted to our API and saved to database. Until recently, before this button was clicked all the advert data was being built up in session. The entire Post Ad flow was reliant on sticky sessions and a resilient application. Other user flows, such as paying for features, or interacting with the Manage Ads page, were also implemented this way.&lt;/p&gt;
&lt;p&gt;This meant any restart or release of this particular application had to be performed, where possible, at a time of minimal traffic so as to disrupt the lowest number of users - generally the early hours of the morning. As we strive for continuous deployment we are often ready with potentially many new releases of this component a day, so coordinating these was a nightmare whilst we had these restrictions in place. Sticky sessions had proved to be more trouble that they were worth, and something had to be done.&lt;/p&gt;
&lt;p&gt;Tomcat 7 has support for multiple instances within the same container (see &lt;a target=&quot;_blank&quot; href=&quot;http://tomcat.apache.org/tomcat-7.0-doc/introduction.html&quot;&gt;http://tomcat.apache.org/tomcat-7.0-doc/introduction.html&lt;/a&gt;). This means a new release of the application can be started whilst the old version is still running - any user who had a session on the old version will be stuck to that instance until their session expires. Once all such sessions have expired, the old instance can be safely shut down, leaving only the new version running. This would solve the problem of doing releases without user impact, however we would still need session stickiness in the load balancer and restarting any misbehaving instance would still kill off any user sessions attached to it.&lt;/p&gt;
&lt;p&gt;In the end we opted to try Redis (&lt;a target=&quot;_blank&quot; href=&quot;http://redis.io&quot;&gt;http://redis.io&lt;/a&gt;) for storing all session data. Redis is essentially a simple key-value store with support for data types &amp;amp; collections, as well as supporting database-y concerns such as failover, sharding, monitoring etc. One concept that is very useful is that each key can be given a time-to-live (TTL), so any data written can behave in the same way as session data by expiring itself after a set period of time. Redis comes with client libraries for most common programming languages. As we are java, we used the Jedis library (&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/xetorthio/jedis&quot;&gt;https://github.com/xetorthio/jedis&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The application has now been enhanced such that for all places where we use session beans for writing data, we serialize the java object to JSON and write this to Redis too. Reads will come from Redis (values deserialized back into objects), but in the event of a failure the session will be called instead. Via configuration we can turn this off, or make it so that reads/writes are only done against Redis rather than session.&lt;/p&gt;
&lt;p&gt;The keys are based on the &amp;#39;editorId&amp;#39; for Post Ad flows (as seen in the URL which is of the form /postad/{editorId}/category). We have a similar concept for other flows - see checkouts for example. To prevent cross-pollination of user data - i.e. what if user1 manages to copy user2&amp;#39;s editorId and uses it to take over their post ad flow - we prefix all a user&amp;#39;s keys with a unique id that is generated when they first log in. This is stored in a cookie so that any request the user makes will have the same prefix.&lt;/p&gt;
&lt;p&gt;The code is all abstracted such that anywhere that needs to read or write such data goes through the same service. Said service is not aware of the underlying storage - a &amp;#39;SessionPersistenceStrategy&amp;#39; interface has the implementations for Redis, in-memory, and both. The actual write operations are done via a callback handler object. Another separate service takes responsibility for generating/retrieving the unique id from the user&amp;#39;s cookies, this is initialized via a Spring HandlerInterceptor at the start of the request.&lt;/p&gt;
&lt;p&gt;Jedis &lt;code&gt;writeOperation&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JedisPersistenceStrategy&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SessionPersistenceStrategy&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JedisPool jedisPool;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SessionIdService sessionIdService;

    ….

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; writeOperation(
                        WriteOperationCallback writeOperationCallback) {
        Jedis jedis = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {
            jedis = jedisPool.getResource();

            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (jedis == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JedisConnectionException
                                    (&lt;span class=&quot;string&quot;&gt;&quot;Cannot connect to Redis.&quot;&lt;/span&gt;);
            }

            writeOperationCallback.doWriteOperation(
                        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JedisWriteOperationHandler(
                                jedis,
                                sessionIdService.getUniqueSessionId()
                                &lt;span class=&quot;comment&quot;&gt;// uniqueSessionId comes from a cookie&lt;/span&gt;
            ));
        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (JedisException je) {
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SessionDataAccessException(je);
        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception je) {
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SessionDataAccessException(je);
        } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {
            jedisPool.returnResource(jedis);
        }
    }


    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JedisWriteOperationHandler&lt;/span&gt;
                        &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WriteOperationHandler&lt;/span&gt; &lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Jedis jedis;
        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String keyPrefix;

        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; JedisWriteOperationHandler(Jedis jedis,
                                          String keyPrefix) {
            this.jedis = jedis;
            this.keyPrefix = keyPrefix;
        }

        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; set(String key, String value, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ttl) {
            &lt;span class=&quot;comment&quot;&gt;// formatKey is concatenating with '-' or something arbitrary&lt;/span&gt;
            String fullKey = formatKey(keyPrefix, key);
            jedis.set(fullKey, value);
            jedis.expire(fullKey, ttl);
        }

        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; expire(String key, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ttl) {
            String fullKey = formatKey(keyPrefix, key);
            jedis.expire(fullKey, ttl);
        }

        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; del(String key) {
            String fullKey = formatKey(keyPrefix, key);
            jedis.del(fullKey);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &lt;code&gt;writeOperation&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setPostAdData(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String editorId,
                          PostAdDetail postAdDetail) {
    &lt;span class=&quot;comment&quot;&gt;// writeToString is a utility method to turn a POJO into Json&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String json = writeToString(mapper, postAdDetail);
    sessionPersistenceStrategy.writeOperation(
        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WriteOperationCallback() {
            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; doWriteOperation(WriteOperationHandler handler) {
                handler.set(editorId, json, timeToLiveSeconds);
            }
    });
}

&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; removePostAdData(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String editorId) {
    sessionPersistenceStrategy.writeOperation(
        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WriteOperationCallback() {
            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; doWriteOperation(WriteOperationHandler handler) {
                handler.del(editorId);
            }
        });
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jedis &lt;code&gt;readOperation&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JedisPersistenceStrategy&lt;/span&gt;
                &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SessionPersistenceStrategy&lt;/span&gt; &lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JedisPool jedisPool;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SessionIdService sessionIdService;

    ….

    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String readOperation(String key) {
        String fullKey =
                    formatKey(sessionIdService.getUniqueSessionId(), key);
        String value;
        Jedis jedis = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {
            jedis = jedisPool.getResource();

            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (jedis == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {
                &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JedisConnectionException
                                (&lt;span class=&quot;string&quot;&gt;&quot;Cannot connect to Redis.&quot;&lt;/span&gt;);
            }

            value = jedis.get(fullKey);
        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (JedisException je) {
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SessionDataAccessException(je);
        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception je) {
            &lt;span class=&quot;comment&quot;&gt;// Having to do this is a bit rubbish&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SessionDataAccessException(je);
        } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {
            jedisPool.returnResource(jedis);
        }

        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &lt;code&gt;readOperation&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; PostAdDetail getPostAdData(String editorId) {
    String json = sessionPersistenceStrategy.readOperation(editorId);

    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; readFromString(mapper, json, PostAdDetail.&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In terms of our infrastructure, we have so far gone with a simple master to handle all reads &amp;amp; writes, plus two slaves which simply sync from the master and are only there as backups.&lt;/p&gt;
&lt;p&gt;You may be wondering why we still write the data to the in-memory store as well as Redis, when the overall aim was to eliminate sticky sessions. You will have spotted that reads are done from Redis primarily, but only where this fails will the sessions be called upon. Sticky sessions are still on so as to make this possible. The reason why this has been done is as a safeguard for the possibility that Redis does not work properly. So far however, after 3 months in production, we have had no failures from Redis even with the single master handling everything. The best news though is that restarting or releasing a new version of the application now has zero user impact. Any session that was &amp;#39;stuck&amp;#39; to a restarted instance will now be reassigned, and all the user&amp;#39;s data will be retrievable from Redis.&lt;/p&gt;
&lt;p&gt;The next steps will be to beef up the Redis infrastructure - Redis Sentinel (&lt;a target=&quot;_blank&quot; href=&quot;http://redis.io/topics/sentinel&quot;&gt;http://redis.io/topics/sentinel&lt;/a&gt;) is a common tool for this and this is an example setup &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/noise/redis-sentinel-tests&quot;&gt;https://github.com/noise/redis-sentinel-tests&lt;/a&gt;. Once we are confident that Redis can be our single point of failure, all mention of sessions within the application can be eliminated and stickiness can well and truly be turned off.&lt;/p&gt;

            &lt;section class=&quot;social-buttons-wrap&quot;&gt;
				&lt;div class=&quot;social-buttons&quot;&gt;&lt;div class=&quot;facebook-like-button service-button&quot;&gt;
	&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=http%3A//www.gumtree.com/devteam/2013-11-21-sticky-sessions.html&amp;amp;send=false&amp;amp;layout=button_count&amp;amp;width=450&amp;amp;show_faces=false&amp;amp;font&amp;amp;colorscheme=light&amp;amp;action=like&amp;amp;height=21&amp;amp;appId=206144109506296&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:450px; height:21px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class=&quot;google-plus-one-button service-button&quot;&gt;
	&lt;div class=&quot;g-plusone&quot; data-size=&quot;medium&quot; data-href=&quot;http%3A//www.gumtree.com/devteam/2013-11-21-sticky-sessions.html&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
		(function() {
			var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			po.src = 'https://apis.google.com/js/plusone.js';
			var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
		})();
	&lt;/script&gt;
&lt;/div&gt;&lt;div class=&quot;twitter-tweet-button service-button&quot;&gt;
	&lt;a href=&quot;https://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-via=&quot;GumtreeDevTeam&quot; data-related=&quot;GumtreeDevTeam&quot;&gt;Tweet&lt;/a&gt;
	&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;
&lt;/div&gt;&lt;/div&gt;
			&lt;/section&gt;
            &lt;section class=&quot;comments&quot;&gt;
				&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
	(function(){
		window.disqus_shortname = 'gumtreedevteam';
		window.disqus_developer = '1';
		window.disqus_url = 'http://www.gumtree.com/devteam/2013-11-21-sticky-sessions.html';
		window.disqus_identifier = '2013-11-21-sticky-sessions';
		window.disqus_title = 'Sessions, not that sticky';
		if ( window.DISQUS ) {
			return DISQUS.reset({
				reload: true,
				config: function () {
					this.page.identifier = window.disqus_identifier;
					this.page.url = window.disqus_url;
					this.page.title = window.disqus_title;
				}
			});
		}
		else {
		  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
		  dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
		  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
		}
	})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
			&lt;/section&gt;
		&lt;/section&gt;

		&lt;div class=&quot;columns small-12 large-4&quot;&gt;
			
			&lt;nav class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Recent Posts&lt;/h3&gt;
    &lt;ul class=&quot;posts-list&quot;&gt;
        
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-03-07-qcon-london-day-3.html&quot; property=&quot;dc:title&quot;&gt;QCon London 2015 - Day 3&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-06-integrating-hystrix.html&quot; property=&quot;dc:title&quot;&gt;Integrating Hystrix&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2015-01-05-pull-requests-good-process.html&quot; property=&quot;dc:title&quot;&gt;Pull Requests (what could be a good process)&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-12-12-creating-a-treeview-using-reactjs.html&quot; property=&quot;dc:title&quot;&gt;Creating a treeview using react.js&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-11-07-jax-london-day3.html&quot; property=&quot;dc:title&quot;&gt;The closing day of JAX London 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-29-Jax-London.html&quot; property=&quot;dc:title&quot;&gt;Jax London summary&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-27-big-data-analytics-summit-london.html&quot; property=&quot;dc:title&quot;&gt;Big Data &amp;amp; Analytics Innovation Summit&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-13-hackathon-2014.html&quot; property=&quot;dc:title&quot;&gt;Hackathon 2014&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-10-06-Mind-the-product-best-bits.html&quot; property=&quot;dc:title&quot;&gt;Building Badass Products – Mind the Product Best Bits&lt;/a&gt;
                &lt;/li&gt;
        
                
                &lt;li class=&quot;&quot;&gt;
                        &lt;a href=&quot;http://www.gumtree.com/devteam/2014-08-19-safely-running-bulk-operations-on-redis-with-lua-scripts.html&quot; property=&quot;dc:title&quot;&gt;Safely running bulk operations on Redis with lua scripts&lt;/a&gt;
                &lt;/li&gt;
        
    &lt;/ul&gt;
&lt;/nav&gt;
        	&lt;section class=&quot;contact-info side-info&quot;&gt;
    &lt;p&gt;GitHub &lt;a href=&quot;https://github.com/gumtreeuk&quot;&gt;github.com/gumtreeuk&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;LinkedIn &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/&quot;&gt;Gumtree.com&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;

        	&lt;section id=&quot;work-for-us-banner&quot;&gt;
    &lt;a href=&quot;http://www.linkedin.com/company/gumtree.com/careers&quot;&gt;&lt;img src=&quot;http://www.gumtree.com/devteam/images/work-with-us-tank.jpeg&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

			&lt;section id=&quot;blogroll&quot; class=&quot;side-info&quot;&gt;
	&lt;h3&gt;Blog Roll&lt;/h3&gt;
	&lt;ul class=&quot;posts-list&quot;&gt;
	    &lt;li&gt;&lt;a href=&quot;http://www.technology-ebay.de/&quot;&gt;eBay Germany Dev Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.ebaytechblog.com/&quot;&gt;eBay Technology Blog&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;

        &lt;/div&gt;
	&lt;/div&gt;
&lt;/article&gt;
		&lt;/div&gt;
	    &lt;div id='layout_footer'&gt;&lt;/div&gt;
    &lt;/div&gt;
	&lt;footer id='footer' class=&quot;panel&quot;&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;p id=&quot;copyright&quot;&gt;&amp;copy; Gumtree.com 2000-2015&lt;/p&gt;
		&lt;/div&gt;
	&lt;/footer&gt;
	&lt;!-- Scripts --&gt;

	&lt;!-- Depending on browser support load the zepto-pack or the jquery-pack.
		As configured (see grunt-config.json) this includes:
		 - modernizr,
		 - zepto OR jquery
		 - foundation.topbar.js

		condition jquery or zepto adapted from:
		http://foundation.zurb.com/docs/javascript.html
	--&gt;
	&lt;script&gt;
	  document.write('&lt;script src=&quot;http://www.gumtree.com/devteam/scripts/'
	    + ('__proto__' in {} ? 'zepto' : 'jquery')
	    + '-pack.min.js&quot;&gt;&lt;\/script&gt;');
	&lt;/script&gt;
	&lt;script&gt;
		//init all foundation plugins.
		//Currently this only includes foundation.topbar.js
		//See http://foundation.zurb.com/docs/javascript.html
		$(document).foundation();
	&lt;/script&gt;
	&lt;script defer=&quot;defer&quot;  src=&quot;http://www.gumtree.com/devteam/scripts/app.js&quot;&gt;&lt;/script&gt;

	&lt;a href=&quot;http://www.gumtree.com/devteam/sitemap.xml&quot;&gt;&lt;/a&gt;
	&lt;div id=&quot;mediaplex_tracking&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        (function () {
            var mpxtag = document.createElement('script');
            mpxtag.type = 'text/javascript';
            mpxtag.async = true;
            mpxtag.src = ('https:' == document.location.protocol ? 'https://secure.' : 'http://') + 'img-cdn.mediaplex.com/0/6092/39890/Kijiji-Gumtree-UK_mp_pvt_brand_landing_ns_2013-03-15.js';
            var smpx = document.getElementsByTagName('script')[0];
            smpx.parentNode.insertBefore(mpxtag, smpx);
        })();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
		</entry>
	
</feed>